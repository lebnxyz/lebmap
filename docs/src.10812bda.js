// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"hADF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "5.12.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "1",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "5",
  "tape": "4"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};
exports.dependencies = dependencies;
},{}],"5A6F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"raOJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function (d, x) {
    return (0, _ascending.default)(f(d), x);
  };
}
},{"./ascending":"5A6F"}],"VX/h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ascendingBisect = (0, _bisector.default)(_ascending.default);
var bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
var bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
var _default = bisectRight;
exports.default = _default;
},{"./ascending":"5A6F","./bisector":"raOJ"}],"0aKl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.pair = pair;

function _default(array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) pairs[i] = f(p, p = array[++i]);

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"9JGh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pairs = require("./pairs");

function _default(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs.pair;

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
}
},{"./pairs":"0aKl"}],"wjXp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"9fz/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x === null ? NaN : +x;
}
},{}],"IBjk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
}
},{"./number":"9fz/"}],"JPBu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _variance = _interopRequireDefault(require("./variance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(array, f) {
  var v = (0, _variance.default)(array, f);
  return v ? Math.sqrt(v) : v;
}
},{"./variance":"IBjk"}],"tlMU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
}
},{}],"+OA0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"5O/Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"nPOL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"M4+6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"nJNY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"Pg/U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
}
},{}],"eRk3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _bisect = _interopRequireDefault(require("./bisect"));

var _constant = _interopRequireDefault(require("./constant"));

var _extent = _interopRequireDefault(require("./extent"));

var _identity = _interopRequireDefault(require("./identity"));

var _range = _interopRequireDefault(require("./range"));

var _ticks = require("./ticks");

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = (0, _ticks.tickStep)(x0, x1, tz);
      tz = (0, _range.default)(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array":"+OA0","./bisect":"VX/h","./constant":"5O/Y","./extent":"tlMU","./identity":"nPOL","./range":"M4+6","./ticks":"nJNY","./threshold/sturges":"Pg/U"}],"9qox":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, p, valueof) {
  if (valueof == null) valueof = _number.default;
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./number":"9fz/"}],"a8Ry":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

var _ascending = _interopRequireDefault(require("../ascending"));

var _number = _interopRequireDefault(require("../number"));

var _quantile = _interopRequireDefault(require("../quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  values = _array.map.call(values, _number.default).sort(_ascending.default);
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));
}
},{"../array":"+OA0","../ascending":"5A6F","../number":"9fz/","../quantile":"9qox"}],"VlA4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _deviation = _interopRequireDefault(require("../deviation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow(values.length, -1 / 3)));
}
},{"../deviation":"JPBu"}],"8Rao":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
}
},{}],"hoEE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
}
},{"./number":"9fz/"}],"FMd1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

var _number = _interopRequireDefault(require("./number"));

var _quantile = _interopRequireDefault(require("./quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);
}
},{"./ascending":"5A6F","./number":"9fz/","./quantile":"9qox"}],"0SAj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}
},{}],"WLfU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
}
},{}],"4V5Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) permutes[i] = array[indexes[i]];

  return permutes;
}
},{}],"/c8h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending.default;

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
}
},{"./ascending":"5A6F"}],"Z0Nc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}
},{}],"O7Vy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
}
},{}],"pk0a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min":"WLfU"}],"oAxq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose":"pk0a"}],"cBuZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _histogram.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect"));

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

var _cross = _interopRequireDefault(require("./cross"));

var _descending = _interopRequireDefault(require("./descending"));

var _deviation = _interopRequireDefault(require("./deviation"));

var _extent = _interopRequireDefault(require("./extent"));

var _histogram = _interopRequireDefault(require("./histogram"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis"));

var _scott = _interopRequireDefault(require("./threshold/scott"));

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

var _max = _interopRequireDefault(require("./max"));

var _mean = _interopRequireDefault(require("./mean"));

var _median = _interopRequireDefault(require("./median"));

var _merge = _interopRequireDefault(require("./merge"));

var _min = _interopRequireDefault(require("./min"));

var _pairs = _interopRequireDefault(require("./pairs"));

var _permute = _interopRequireDefault(require("./permute"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _range = _interopRequireDefault(require("./range"));

var _scan = _interopRequireDefault(require("./scan"));

var _shuffle = _interopRequireDefault(require("./shuffle"));

var _sum = _interopRequireDefault(require("./sum"));

var _ticks = _interopRequireWildcard(require("./ticks"));

var _transpose = _interopRequireDefault(require("./transpose"));

var _variance = _interopRequireDefault(require("./variance"));

var _zip = _interopRequireDefault(require("./zip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect":"VX/h","./ascending":"5A6F","./bisector":"raOJ","./cross":"9JGh","./descending":"wjXp","./deviation":"JPBu","./extent":"tlMU","./histogram":"eRk3","./threshold/freedmanDiaconis":"a8Ry","./threshold/scott":"VlA4","./threshold/sturges":"Pg/U","./max":"8Rao","./mean":"hoEE","./median":"FMd1","./merge":"0SAj","./min":"WLfU","./pairs":"0aKl","./permute":"4V5Z","./quantile":"9qox","./range":"M4+6","./scan":"/c8h","./shuffle":"Z0Nc","./sum":"O7Vy","./ticks":"nJNY","./transpose":"pk0a","./variance":"IBjk","./zip":"oAxq"}],"rv5q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"Qz/6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array");

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array":"rv5q","./identity":"nPOL"}],"y9Kr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis");
},{"./axis":"Qz/6"}],"C/lH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: function () {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"UU/c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch":"C/lH"}],"UzOB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"OLJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"UzOB"}],"EIjt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"OLJ5","./namespaces":"UzOB"}],"xs2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"LRy5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"jpDG","../selector":"xs2I"}],"+mHY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"ijGs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"jpDG","../selectorAll":"+mHY"}],"4PkZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"hrVj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"jpDG","../matcher":"4PkZ"}],"NmjR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"wXei":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"NmjR","./index":"jpDG"}],"8QmP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"jpDG","./enter":"wXei","../constant":"5O/Y"}],"tchs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"NmjR","./index":"jpDG"}],"oO6z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"1i+5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"jpDG"}],"RepQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"D8yW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"jpDG"}],"+pbQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"kO0T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"84xF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"w9fp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"UF+O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"q4XW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"Tdf9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"OLJ5"}],"D1dR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"3VXj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"D1dR"}],"Q/OW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"+rtN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"hAJ3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"FiSM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"gvi7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"gv/5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"efv1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"EIjt"}],"6ILQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"EIjt","../selector":"xs2I"}],"quBB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"UpcG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);
}

function selection_cloneDeep() {
  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"fuQ8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"j4rF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"enVu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"D1dR"}],"jpDG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"LRy5","./selectAll":"ijGs","./filter":"hrVj","./data":"8QmP","./enter":"wXei","./exit":"tchs","./join":"oO6z","./merge":"1i+5","./order":"RepQ","./sort":"D8yW","./call":"+pbQ","./nodes":"kO0T","./node":"84xF","./size":"w9fp","./empty":"UF+O","./each":"q4XW","./attr":"Tdf9","./style":"3VXj","./property":"Q/OW","./classed":"+rtN","./text":"hAJ3","./html":"FiSM","./raise":"gvi7","./lower":"gv/5","./append":"efv1","./insert":"6ILQ","./remove":"quBB","./clone":"UpcG","./datum":"fuQ8","./on":"j4rF","./dispatch":"enVu"}],"i/TO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"jpDG"}],"tmZ+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"EIjt","./select":"i/TO"}],"JuPP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"mu9P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"j4rF"}],"9ZIl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"lbxf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"mu9P","./point":"9ZIl"}],"7/to":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"jpDG"}],"3Mh7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"mu9P","./point":"9ZIl"}],"RG1U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"mu9P","./point":"9ZIl"}],"lm1C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"tmZ+","./creator":"EIjt","./local":"JuPP","./matcher":"4PkZ","./mouse":"lbxf","./namespace":"OLJ5","./namespaces":"UzOB","./point":"9ZIl","./select":"i/TO","./selectAll":"7/to","./selection/index":"jpDG","./selector":"xs2I","./selectorAll":"+mHY","./selection/style":"3VXj","./touch":"3Mh7","./touches":"RG1U","./window":"D1dR","./selection/on":"j4rF"}],"DCEg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"lm1C"}],"6rD9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"lm1C","./noevent.js":"DCEg"}],"IkUE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"68fG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: _d3Selection.event.x,
    y: _d3Selection.event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), _d3Selection.mouse, this, arguments);
    if (!gesture) return;
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    mousemoving = false;
    mousedownx = _d3Selection.event.clientX;
    mousedowny = _d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    (0, _noevent.default)();

    if (!mousemoving) {
      var dx = _d3Selection.event.clientX - mousedownx,
          dy = _d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(_d3Selection.event.view, mousemoving);
    (0, _noevent.default)();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, _d3Selection.touch, this, arguments)) {
        (0, _noevent.nopropagation)();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!(0, _d3Selection.customEvent)(new _event.default(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((_d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      (0, _d3Selection.customEvent)(new _event.default(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"UU/c","d3-selection":"lm1C","./nodrag.js":"6rD9","./noevent.js":"DCEg","./constant.js":"5O/Y","./event.js":"IkUE"}],"LrBi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"68fG","./nodrag.js":"6rD9"}],"CSb3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"UAf0":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"CSb3"}],"8ykI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"n21X":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"CSb3","./color.js":"UAf0","./math.js":"8ykI"}],"aDX2":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"CSb3","./color.js":"UAf0","./math.js":"8ykI"}],"4TJ2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"UAf0","./lab.js":"n21X","./cubehelix.js":"aDX2"}],"mIuw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"t9MF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis":"mIuw"}],"OW+9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant":"5O/Y"}],"hw5o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis"));

var _basisClosed = _interopRequireDefault(require("./basisClosed"));

var _color = _interopRequireWildcard(require("./color"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"4TJ2","./basis":"mIuw","./basisClosed":"t9MF","./color":"OW+9"}],"j6Kl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value":"5ONG"}],"npIv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b -= a, function (t) {
    return d.setTime(a + b * t), d;
  };
}
},{}],"eUtU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b -= a, function (t) {
    return a + b * t;
  };
}
},{}],"9Ci2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value":"5ONG"}],"WNxQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number":"eUtU"}],"5ONG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb"));

var _array = _interopRequireDefault(require("./array"));

var _date = _interopRequireDefault(require("./date"));

var _number = _interopRequireDefault(require("./number"));

var _object = _interopRequireDefault(require("./object"));

var _string = _interopRequireDefault(require("./string"));

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : Array.isArray(b) ? _array.default : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"4TJ2","./rgb":"hw5o","./array":"j6Kl","./date":"npIv","./number":"eUtU","./object":"9Ci2","./string":"WNxQ","./constant":"5O/Y"}],"9iFP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"/lYd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color":"OW+9"}],"8Ehv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b -= a, function (t) {
    return Math.round(a + b * t);
  };
}
},{}],"sFbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"igaz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cssNode, cssRoot, cssView, svgNode;

function parseCss(value) {
  if (value === "none") return _decompose.identity;
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return (0, _decompose.default)(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose":"sFbg"}],"/tUK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number"));

var _parse = require("./parse");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number":"eUtU","./parse":"igaz"}],"MbcF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


function _default(p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function (t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function (t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
}
},{}],"BrWg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"4TJ2","./color":"OW+9"}],"5HCN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"4TJ2","./color":"OW+9"}],"9VIl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"4TJ2","./color":"OW+9"}],"NOHm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"4TJ2","./color":"OW+9"}],"nlPb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{}],"g3ua":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"mkGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value"));

var _array = _interopRequireDefault(require("./array"));

var _basis = _interopRequireDefault(require("./basis"));

var _basisClosed = _interopRequireDefault(require("./basisClosed"));

var _date = _interopRequireDefault(require("./date"));

var _discrete = _interopRequireDefault(require("./discrete"));

var _hue = _interopRequireDefault(require("./hue"));

var _number = _interopRequireDefault(require("./number"));

var _object = _interopRequireDefault(require("./object"));

var _round = _interopRequireDefault(require("./round"));

var _string = _interopRequireDefault(require("./string"));

var _index = require("./transform/index");

var _zoom = _interopRequireDefault(require("./zoom"));

var _rgb = _interopRequireWildcard(require("./rgb"));

var _hsl = _interopRequireWildcard(require("./hsl"));

var _lab = _interopRequireDefault(require("./lab"));

var _hcl = _interopRequireWildcard(require("./hcl"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix"));

var _piecewise = _interopRequireDefault(require("./piecewise"));

var _quantize = _interopRequireDefault(require("./quantize"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value":"5ONG","./array":"j6Kl","./basis":"mIuw","./basisClosed":"t9MF","./date":"npIv","./discrete":"9iFP","./hue":"/lYd","./number":"eUtU","./object":"9Ci2","./round":"8Ehv","./string":"WNxQ","./transform/index":"/tUK","./zoom":"MbcF","./rgb":"hw5o","./hsl":"BrWg","./lab":"5HCN","./hcl":"9VIl","./cubehelix":"NOHm","./piecewise":"nlPb","./quantize":"g3ua"}],"9v2Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"iEU7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer":"9v2Y"}],"B8zX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? (0, _timer.now)() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
}
},{"./timer":"9v2Y"}],"CBES":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer");

var _timeout = _interopRequireDefault(require("./timeout"));

var _interval = _interopRequireDefault(require("./interval"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer":"9v2Y","./timeout":"iEU7","./interval":"B8zX"}],"GDz/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"UU/c","d3-timer":"CBES"}],"+xAn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule":"GDz/"}],"JwzZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt":"+xAn"}],"CgJV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule":"GDz/"}],"KSuB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"/e4S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween");

var _interpolate = _interopRequireDefault(require("./interpolate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"mkGF","d3-selection":"lm1C","./tween":"CgJV","./interpolate":"KSuB"}],"L4WC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i(t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i(t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"lm1C"}],"1K26":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule":"GDz/"}],"ZZtL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule":"GDz/"}],"6pgS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule":"GDz/"}],"0QDl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"lm1C","./index":"J3C7"}],"Z2Q+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index":"J3C7"}],"VZes":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule":"GDz/"}],"FS2t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"Xvwr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index");

var _schedule = _interopRequireWildcard(require("./schedule"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"lm1C","./index":"J3C7","./schedule":"GDz/"}],"DOdJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index");

var _schedule = _interopRequireWildcard(require("./schedule"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"lm1C","./index":"J3C7","./schedule":"GDz/"}],"bQR7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"lm1C"}],"gXfd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule");

var _tween = require("./tween");

var _interpolate = _interopRequireDefault(require("./interpolate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"mkGF","d3-selection":"lm1C","./schedule":"GDz/","./tween":"CgJV","./interpolate":"KSuB"}],"SCZW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i(t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"HTlb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween":"CgJV"}],"rWxz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _schedule = _interopRequireWildcard(require("./schedule"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index":"J3C7","./schedule":"GDz/"}],"13+g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
}
},{"./schedule":"GDz/"}],"J3C7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr"));

var _attrTween = _interopRequireDefault(require("./attrTween"));

var _delay = _interopRequireDefault(require("./delay"));

var _duration = _interopRequireDefault(require("./duration"));

var _ease = _interopRequireDefault(require("./ease"));

var _filter = _interopRequireDefault(require("./filter"));

var _merge = _interopRequireDefault(require("./merge"));

var _on = _interopRequireDefault(require("./on"));

var _remove = _interopRequireDefault(require("./remove"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _selection = _interopRequireDefault(require("./selection"));

var _style = _interopRequireDefault(require("./style"));

var _styleTween = _interopRequireDefault(require("./styleTween"));

var _text = _interopRequireDefault(require("./text"));

var _transition = _interopRequireDefault(require("./transition"));

var _tween = _interopRequireDefault(require("./tween"));

var _end = _interopRequireDefault(require("./end"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  end: _end.default
};
},{"d3-selection":"lm1C","./attr":"/e4S","./attrTween":"L4WC","./delay":"1K26","./duration":"ZZtL","./ease":"6pgS","./filter":"0QDl","./merge":"Z2Q+","./on":"VZes","./remove":"FS2t","./select":"Xvwr","./selectAll":"DOdJ","./selection":"bQR7","./style":"gXfd","./styleTween":"SCZW","./text":"HTlb","./transition":"rWxz","./tween":"CgJV","./end":"13+g"}],"fXiu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"GaS5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"PA7e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"ECJi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"sZZb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"rYq8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"1+hE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"MKsh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"fCsL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"xolo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"CFyW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear");

var _quad = require("./quad");

var _cubic = require("./cubic");

var _poly = require("./poly");

var _sin = require("./sin");

var _exp = require("./exp");

var _circle = require("./circle");

var _bounce = require("./bounce");

var _back = require("./back");

var _elastic = require("./elastic");
},{"./linear":"fXiu","./quad":"GaS5","./cubic":"PA7e","./poly":"ECJi","./sin":"sZZb","./exp":"rYq8","./circle":"1+hE","./bounce":"MKsh","./back":"fCsL","./elastic":"xolo"}],"CNir":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index");

var _schedule = _interopRequireDefault(require("../transition/schedule"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = (0, _d3Timer.now)(), defaultTiming;
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index":"J3C7","../transition/schedule":"GDz/","d3-ease":"CFyW","d3-timer":"CBES"}],"uhVG":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt"));

var _transition = _interopRequireDefault(require("./transition"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"lm1C","./interrupt":"JwzZ","./transition":"CNir"}],"zz7H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index");

var _schedule = require("./transition/schedule");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index":"J3C7","./transition/schedule":"GDz/"}],"Fcbi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index");

var _index2 = _interopRequireDefault(require("./transition/index"));

var _active = _interopRequireDefault(require("./active"));

var _interrupt = _interopRequireDefault(require("./interrupt"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index":"uhVG","./transition/index":"J3C7","./active":"zz7H","./interrupt":"+xAn"}],"iX60":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
}
},{}],"HwJw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

function toucher(identifier) {
  return function (target) {
    return (0, _d3Selection.touch)(target, _d3Selection.event.touches, identifier);
  };
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)(brush, "start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    return !clean && that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function () {
      if (this.starting) this.starting = false, this.emit("start");else this.emit("brush");
      return this;
    },
    brush: function () {
      this.emit("brush");
      return this;
    },
    end: function () {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (touchending && !_d3Selection.event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = _d3Selection.event.target.__data__.type,
        mode = (keys && _d3Selection.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && _d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && _d3Selection.event.shiftKey,
        lockX,
        lockY,
        pointer = _d3Selection.event.touches ? toucher(_d3Selection.event.changedTouches[0].identifier) : _d3Selection.mouse,
        point0 = pointer(that),
        point = point0,
        emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (_d3Selection.event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    }

    (0, _noevent.nopropagation)();
    (0, _d3Transition.interrupt)(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = pointer(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      (0, _noevent.default)();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      (0, _noevent.nopropagation)();

      if (_d3Selection.event.touches) {
        if (_d3Selection.event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(_d3Selection.event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }

    function keyupped() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (_d3Selection.event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }
  }

  function touchmoved() {
    emitter(this, arguments).moved();
  }

  function touchended() {
    emitter(this, arguments).ended();
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"UU/c","d3-drag":"LrBi","d3-interpolate":"mkGF","d3-selection":"lm1C","d3-transition":"Fcbi","./constant.js":"5O/Y","./event.js":"iX60","./noevent.js":"DCEg"}],"TNt0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"HwJw"}],"z+rd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = void 0;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
},{}],"YLYV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math");

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = (0, _d3Array.range)(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push((0, _d3Array.range)(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"d3-array":"cBuZ","./math":"z+rd"}],"E5FC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"dz42":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path":"E5FC"}],"ootM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _d3Path = require("d3-path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function _default() {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        sx0 = sr * (0, _math.cos)(sa0),
        sy0 = sr * (0, _math.sin)(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}
},{"./array":"rv5q","./constant":"5O/Y","./math":"z+rd","d3-path":"dz42"}],"cf1+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});

var _chord = _interopRequireDefault(require("./chord"));

var _ribbon = _interopRequireDefault(require("./ribbon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chord":"YLYV","./ribbon":"ootM"}],"wD+C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"6TaN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"wD+C"}],"/fgw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"wD+C"}],"S/tS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"wANB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"u9ZW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"qqV1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"6TaN","./set":"/fgw","./map":"wD+C","./keys":"S/tS","./values":"wANB","./entries":"u9ZW"}],"+IBm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"8ldh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"hcn/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"GiY2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"BhKh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"oKpg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _ascending = _interopRequireDefault(require("./ascending"));

var _area = _interopRequireDefault(require("./area"));

var _constant = _interopRequireDefault(require("./constant"));

var _contains = _interopRequireDefault(require("./contains"));

var _noop = _interopRequireDefault(require("./noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"cBuZ","./array":"+IBm","./ascending":"8ldh","./area":"hcn/","./constant":"5O/Y","./contains":"GiY2","./noop":"BhKh"}],"yZ0K":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"9VOW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _blur = require("./blur");

var _constant = _interopRequireDefault(require("./constant"));

var _contours = _interopRequireDefault(require("./contours"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"cBuZ","./array":"+IBm","./blur":"yZ0K","./constant":"5O/Y","./contours":"oKpg"}],"cfrl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours"));

var _density = _interopRequireDefault(require("./density"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours":"oKpg","./density":"9VOW"}],"7SC/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "]";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows
  };
}
},{}],"mU2J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
},{"./dsv":"7SC/"}],"zpVZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
},{"./dsv":"7SC/"}],"7bjL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/.test(value)) value = new Date(value);else continue;
    object[key] = value;
  }

  return object;
}
},{}],"mQVF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv"));

var _csv = require("./csv");

var _tsv = require("./tsv");

var _autoType = _interopRequireDefault(require("./autoType"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv":"7SC/","./csv":"mU2J","./tsv":"zpVZ","./autoType":"7bjL"}],"NEvU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"W4GS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"/QFe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"fvyQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"mQVF","./text":"/QFe"}],"oqjg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"Lvc+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"FRc5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return function (input, init) {
    return (0, _text.default)(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text":"/QFe"}],"hNko":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob"));

var _buffer = _interopRequireDefault(require("./buffer"));

var _dsv = _interopRequireWildcard(require("./dsv"));

var _image = _interopRequireDefault(require("./image"));

var _json = _interopRequireDefault(require("./json"));

var _text = _interopRequireDefault(require("./text"));

var _xml = _interopRequireWildcard(require("./xml"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob":"NEvU","./buffer":"W4GS","./dsv":"fvyQ","./image":"oqjg","./json":"Lvc+","./text":"/QFe","./xml":"FRc5"}],"y+F4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{}],"jmDl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return (Math.random() - 0.5) * 1e-6;
}
},{}],"c4hk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"DeJI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"7HTB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"JRL4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"BPLw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"2t1g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad":"BPLw"}],"3wnj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"aU2q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"PC8q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"MOvE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad":"BPLw"}],"6Edv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad":"BPLw"}],"2+yq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"FeNP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"HCic":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add"));

var _cover = _interopRequireDefault(require("./cover"));

var _data = _interopRequireDefault(require("./data"));

var _extent = _interopRequireDefault(require("./extent"));

var _find = _interopRequireDefault(require("./find"));

var _remove = _interopRequireWildcard(require("./remove"));

var _root = _interopRequireDefault(require("./root"));

var _size = _interopRequireDefault(require("./size"));

var _visit = _interopRequireDefault(require("./visit"));

var _visitAfter = _interopRequireDefault(require("./visitAfter"));

var _x = _interopRequireWildcard(require("./x"));

var _y = _interopRequireWildcard(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add":"c4hk","./cover":"DeJI","./data":"7HTB","./extent":"JRL4","./find":"2t1g","./remove":"3wnj","./root":"aU2q","./size":"PC8q","./visit":"MOvE","./visitAfter":"6Edv","./x":"2+yq","./y":"FeNP"}],"oxc3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree":"HCic"}],"ZCSV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"./constant":"5O/Y","./jiggle":"jmDl","d3-quadtree":"oxc3"}],"M788":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Collection = require("d3-collection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)();
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = (0, _d3Collection.map)(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant":"5O/Y","./jiggle":"jmDl","d3-collection":"qqV1"}],"lwF8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Collection = require("d3-collection");

var _d3Timer = require("d3-timer");

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = (0, _d3Collection.map)(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end");
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"UU/c","d3-collection":"qqV1","d3-timer":"CBES"}],"cead":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

var _simulation = require("./simulation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"./constant":"5O/Y","./jiggle":"jmDl","d3-quadtree":"oxc3","./simulation":"lwF8"}],"qX1S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant":"5O/Y"}],"AO2h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant":"5O/Y"}],"9SU+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant":"5O/Y"}],"YpA1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center"));

var _collide = _interopRequireDefault(require("./collide"));

var _link = _interopRequireDefault(require("./link"));

var _manyBody = _interopRequireDefault(require("./manyBody"));

var _radial = _interopRequireDefault(require("./radial"));

var _simulation = _interopRequireDefault(require("./simulation"));

var _x = _interopRequireDefault(require("./x"));

var _y = _interopRequireDefault(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center":"y+F4","./collide":"ZCSV","./link":"M788","./manyBody":"cead","./radial":"qX1S","./simulation":"lwF8","./x":"AO2h","./y":"9SU+"}],"c+Jh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"m3FQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"c+Jh"}],"e1cc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"Wswx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"gePe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"dWsa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (i0 > 0) {
          if (!+s[i]) break out;
          i0 = 0;
        }

        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"KTGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"c+Jh"}],"e8g/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"c+Jh"}],"uFUO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"KTGF","./formatRounded.js":"e8g/"}],"QWQX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"m3FQ","./formatGroup.js":"e1cc","./formatNumerals.js":"Wswx","./formatSpecifier.js":"gePe","./formatTrim.js":"dWsa","./formatTypes.js":"uFUO","./formatPrefixAuto.js":"KTGF","./identity.js":"nPOL"}],"y/m0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"QWQX"}],"QL8u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"m3FQ"}],"DzQJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"m3FQ"}],"4afb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"m3FQ"}],"4gWe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"y/m0","./locale.js":"QWQX","./formatSpecifier.js":"gePe","./precisionFixed.js":"QL8u","./precisionPrefix.js":"DzQJ","./precisionRound.js":"4afb"}],"GlqK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
function _default() {
  return new Adder();
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function () {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function (y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function () {
    return this.s;
  }
};
var temp = new Adder();

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}
},{}],"sEgP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"UPwg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"XBFK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"dpXv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _adder = _interopRequireDefault(require("./adder"));

var _math = require("./math");

var _noop = _interopRequireDefault(require("./noop"));

var _stream = _interopRequireDefault(require("./stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = (0, _adder.default)();
exports.areaRingSum = areaRingSum;
var areaSum = (0, _adder.default)(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum.reset();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"./adder":"GlqK","./math":"sEgP","./noop":"UPwg","./stream":"XBFK"}],"+rFM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math":"sEgP"}],"4wXR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder"));

var _area = require("./area");

var _cartesian = require("./cartesian");

var _math = require("./math");

var _stream = _interopRequireDefault(require("./stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = (0, _adder.default)(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"./adder":"GlqK","./area":"dpXv","./cartesian":"+rFM","./math":"sEgP","./stream":"XBFK"}],"pQGp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math");

var _noop = _interopRequireDefault(require("./noop"));

var _stream = _interopRequireDefault(require("./stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.sqrt)(cx * cx + cy * cy + cz * cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  (0, _stream.default)(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / (0, _math.sqrt)(m)) * _math.degrees];
}
},{"./math":"sEgP","./noop":"UPwg","./stream":"XBFK"}],"hCea":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"KwdP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose"));

var _math = require("./math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose":"hCea","./math":"sEgP"}],"dbGM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _rotation = require("./rotation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian":"+rFM","./constant":"5O/Y","./math":"sEgP","./rotation":"KwdP"}],"VrlK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y) {
      line.push([x, y]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop":"UPwg"}],"j4Ms":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math":"sEgP"}],"03nq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if ((0, _pointEqual.default)(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual":"j4Ms"}],"Cmis":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder"));

var _cartesian = require("./cartesian");

var _math = require("./math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sum = (0, _adder.default)();

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon) ^ winding & 1;
}
},{"./adder":"GlqK","./cartesian":"+rFM","./math":"sEgP"}],"bbiM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer"));

var _rejoin = _interopRequireDefault(require("./rejoin"));

var _math = require("../math");

var _polygonContains = _interopRequireDefault(require("../polygonContains"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer":"VrlK","./rejoin":"03nq","../math":"sEgP","../polygonContains":"Cmis","d3-array":"cBuZ"}],"CWnN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index"));

var _math = require("../math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index":"bbiM","../math":"sEgP"}],"1uul":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian");

var _circle = require("../circle");

var _math = require("../math");

var _pointEqual = _interopRequireDefault(require("../pointEqual"));

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) {
            point1[0] += _math.epsilon;
            point1[1] += _math.epsilon;
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian":"+rFM","../circle":"dbGM","../math":"sEgP","../pointEqual":"j4Ms","./index":"bbiM"}],"RhqQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"E6SH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math");

var _buffer = _interopRequireDefault(require("./buffer"));

var _line = _interopRequireDefault(require("./line"));

var _rejoin = _interopRequireDefault(require("./rejoin"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math":"sEgP","./buffer":"VrlK","./line":"RhqQ","./rejoin":"03nq","d3-array":"cBuZ"}],"Pttt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle":"E6SH"}],"rgN/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder"));

var _math = require("./math");

var _noop = _interopRequireDefault(require("./noop"));

var _stream = _interopRequireDefault(require("./stream"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum.reset();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"./adder":"GlqK","./math":"sEgP","./noop":"UPwg","./stream":"XBFK"}],"IoFW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length":"rgN/"}],"bl0/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains"));

var _distance = _interopRequireDefault(require("./distance"));

var _math = require("./math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains":"Cmis","./distance":"IoFW","./math":"sEgP"}],"+fWg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"cBuZ","./math":"sEgP"}],"PyvU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math":"sEgP"}],"tBtz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder"));

var _math = require("../math");

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = (0, _adder.default)(),
    areaRingSum = (0, _adder.default)(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum.reset();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"../adder":"GlqK","../math":"sEgP","../noop":"UPwg"}],"Mzp9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop":"UPwg"}],"HLbf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math":"sEgP"}],"ndK6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math");

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math":"sEgP","../noop":"UPwg"}],"CqmG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder"));

var _math = require("../math");

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"../adder":"GlqK","../math":"sEgP","../noop":"UPwg"}],"mB17":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"01A7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity"));

var _stream = _interopRequireDefault(require("../stream"));

var _area = _interopRequireDefault(require("./area"));

var _bounds = _interopRequireDefault(require("./bounds"));

var _centroid = _interopRequireDefault(require("./centroid"));

var _context = _interopRequireDefault(require("./context"));

var _measure = _interopRequireDefault(require("./measure"));

var _string = _interopRequireDefault(require("./string"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity":"nPOL","../stream":"XBFK","./area":"tBtz","./bounds":"Mzp9","./centroid":"HLbf","./context":"ndK6","./measure":"CqmG","./string":"mB17"}],"ubFV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"Ty3O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream"));

var _bounds = _interopRequireDefault(require("../path/bounds"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream":"XBFK","../path/bounds":"Mzp9"}],"1vIa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian");

var _math = require("../math");

var _transform = require("../transform");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian":"+rFM","../math":"sEgP","../transform":"ubFV"}],"t1yD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian"));

var _circle = _interopRequireDefault(require("../clip/circle"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle"));

var _compose = _interopRequireDefault(require("../compose"));

var _identity = _interopRequireDefault(require("../identity"));

var _math = require("../math");

var _rotation = require("../rotation");

var _transform = require("../transform");

var _fit = require("./fit");

var _resample = _interopRequireDefault(require("./resample"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian":"CWnN","../clip/circle":"1uul","../clip/rectangle":"E6SH","../compose":"hCea","../identity":"nPOL","../math":"sEgP","../rotation":"KwdP","../transform":"ubFV","./fit":"Ty3O","./resample":"1vIa"}],"FzMl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math");

var _index = require("./index");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math":"sEgP","./index":"t1yD"}],"5xg5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math":"sEgP"}],"uvEu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math");

var _conic = require("./conic");

var _cylindricalEqualArea = require("./cylindricalEqualArea");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(r0y)) / n * (0, _math.sign)(r0y), (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math":"sEgP","./conic":"FzMl","./cylindricalEqualArea":"5xg5"}],"HUYT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea":"uvEu"}],"WyCU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math");

var _albers = _interopRequireDefault(require("./albers"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea"));

var _fit = require("./fit");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math":"sEgP","./albers":"HUYT","./conicEqualArea":"uvEu","./fit":"Ty3O"}],"/4FJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math":"sEgP"}],"c9jZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math");

var _azimuthal = require("./azimuthal");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math":"sEgP","./azimuthal":"/4FJ","./index":"t1yD"}],"DPfU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math");

var _azimuthal = require("./azimuthal");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math":"sEgP","./azimuthal":"/4FJ","./index":"t1yD"}],"Yvwi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math");

var _rotation = _interopRequireDefault(require("../rotation"));

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math":"sEgP","../rotation":"KwdP","./index":"t1yD"}],"QZ/H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math");

var _conic = require("./conic");

var _mercator = require("./mercator");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy);
    return [(0, _math.atan2)(x, (0, _math.abs)(fy)) / n * (0, _math.sign)(fy), 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math":"sEgP","./conic":"FzMl","./mercator":"Yvwi"}],"xN4O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index":"t1yD"}],"wKng":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math");

var _conic = require("./conic");

var _equirectangular = require("./equirectangular");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(gy)) / n * (0, _math.sign)(gy), g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math":"sEgP","./conic":"FzMl","./equirectangular":"xN4O"}],"svXP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"t1yD","../math.js":"sEgP"}],"bmsS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math");

var _azimuthal = require("./azimuthal");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math":"sEgP","./azimuthal":"/4FJ","./index":"t1yD"}],"LapZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle"));

var _identity = _interopRequireDefault(require("../identity"));

var _transform = require("../transform");

var _fit = require("./fit");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity.default : (0, _transform.transformer)({
    point: function (x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity.default,
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  postclip = _identity.default,
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    },
    postclip: function (_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    },
    clipExtent: function (_) {
      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function (_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function (extent, object) {
      return (0, _fit.fitExtent)(projection, extent, object);
    },
    fitSize: function (size, object) {
      return (0, _fit.fitSize)(projection, size, object);
    },
    fitWidth: function (width, object) {
      return (0, _fit.fitWidth)(projection, width, object);
    },
    fitHeight: function (height, object) {
      return (0, _fit.fitHeight)(projection, height, object);
    }
  };
}
},{"../clip/rectangle":"E6SH","../identity":"nPOL","../transform":"ubFV","./fit":"Ty3O"}],"yWpl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index"));

var _math = require("../math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index":"t1yD","../math":"sEgP"}],"H7pW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math");

var _azimuthal = require("./azimuthal");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math":"sEgP","./azimuthal":"/4FJ","./index":"t1yD"}],"bNxf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math");

var _azimuthal = require("./azimuthal");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math":"sEgP","./azimuthal":"/4FJ","./index":"t1yD"}],"BGbj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math");

var _mercator = require("./mercator");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math":"sEgP","./mercator":"Yvwi"}],"LMxt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area"));

var _bounds = _interopRequireDefault(require("./bounds"));

var _centroid = _interopRequireDefault(require("./centroid"));

var _circle = _interopRequireDefault(require("./circle"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian"));

var _circle2 = _interopRequireDefault(require("./clip/circle"));

var _extent = _interopRequireDefault(require("./clip/extent"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle"));

var _contains = _interopRequireDefault(require("./contains"));

var _distance = _interopRequireDefault(require("./distance"));

var _graticule = _interopRequireWildcard(require("./graticule"));

var _interpolate = _interopRequireDefault(require("./interpolate"));

var _length = _interopRequireDefault(require("./length"));

var _index = _interopRequireDefault(require("./path/index"));

var _albers = _interopRequireDefault(require("./projection/albers"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic"));

var _identity = _interopRequireDefault(require("./projection/identity"));

var _index2 = _interopRequireWildcard(require("./projection/index"));

var _mercator = _interopRequireWildcard(require("./projection/mercator"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator"));

var _rotation = _interopRequireDefault(require("./rotation"));

var _stream = _interopRequireDefault(require("./stream"));

var _transform = _interopRequireDefault(require("./transform"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area":"dpXv","./bounds":"4wXR","./centroid":"pQGp","./circle":"dbGM","./clip/antimeridian":"CWnN","./clip/circle":"1uul","./clip/extent":"Pttt","./clip/rectangle":"E6SH","./contains":"bl0/","./distance":"IoFW","./graticule":"+fWg","./interpolate":"PyvU","./length":"rgN/","./path/index":"01A7","./projection/albers":"HUYT","./projection/albersUsa":"WyCU","./projection/azimuthalEqualArea":"c9jZ","./projection/azimuthalEquidistant":"DPfU","./projection/conicConformal":"QZ/H","./projection/conicEqualArea":"uvEu","./projection/conicEquidistant":"wKng","./projection/equalEarth":"svXP","./projection/equirectangular":"xN4O","./projection/gnomonic":"bmsS","./projection/identity":"LapZ","./projection/index":"t1yD","./projection/mercator":"Yvwi","./projection/naturalEarth1":"yWpl","./projection/orthographic":"H7pW","./projection/stereographic":"bNxf","./projection/transverseMercator":"BGbj","./rotation":"KwdP","./stream":"XBFK","./transform":"ubFV"}],"brcY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"7jJj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"YN75":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
}
},{}],"b04E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
}
},{}],"oHKJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
}
},{}],"Btd4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"q7tv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"5x0Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"fOge":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"chHE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
}
},{}],"+Res":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"gBUX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"LCo+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count"));

var _each = _interopRequireDefault(require("./each"));

var _eachBefore = _interopRequireDefault(require("./eachBefore"));

var _eachAfter = _interopRequireDefault(require("./eachAfter"));

var _sum = _interopRequireDefault(require("./sum"));

var _sort = _interopRequireDefault(require("./sort"));

var _path = _interopRequireDefault(require("./path"));

var _ancestors = _interopRequireDefault(require("./ancestors"));

var _descendants = _interopRequireDefault(require("./descendants"));

var _leaves = _interopRequireDefault(require("./leaves"));

var _links = _interopRequireDefault(require("./links"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy
};
},{"./count":"7jJj","./each":"YN75","./eachBefore":"b04E","./eachAfter":"oHKJ","./sum":"Btd4","./sort":"q7tv","./path":"5x0Y","./ancestors":"fOge","./descendants":"chHE","./leaves":"+Res","./links":"gBUX"}],"Wl9w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = shuffle;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"ZzhU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(_array.slice.call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array":"Wl9w"}],"efS5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _enclose = _interopRequireDefault(require("./enclose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"./enclose":"ZzhU"}],"OleL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"k/YM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"aVuj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings");

var _accessors = require("../accessors");

var _constant = _interopRequireWildcard(require("../constant"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings":"efS5","../accessors":"OleL","../constant":"k/YM"}],"PETl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"L3aV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"h/+W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round"));

var _dice = _interopRequireDefault(require("./treemap/dice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round":"PETl","./treemap/dice":"L3aV"}],"bJDQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors");

var _index = require("./hierarchy/index");

var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors":"OleL","./hierarchy/index":"LCo+"}],"7nrL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index":"LCo+"}],"RVbL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"jyLZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice"));

var _slice = _interopRequireDefault(require("./slice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice":"L3aV","./slice":"RVbL"}],"3cC5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round"));

var _squarify = _interopRequireDefault(require("./squarify"));

var _accessors = require("../accessors");

var _constant = _interopRequireWildcard(require("../constant"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round":"PETl","./squarify":"jyLZ","../accessors":"OleL","../constant":"k/YM"}],"cDuG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"dACy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice"));

var _slice = _interopRequireDefault(require("./slice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice":"L3aV","./slice":"RVbL"}],"GrWc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice"));

var _slice = _interopRequireDefault(require("./slice"));

var _squarify = require("./squarify");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else (0, _slice.default)(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice":"L3aV","./slice":"RVbL","./squarify":"jyLZ"}],"wNQE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster"));

var _index = _interopRequireDefault(require("./hierarchy/index"));

var _index2 = _interopRequireDefault(require("./pack/index"));

var _siblings = _interopRequireDefault(require("./pack/siblings"));

var _enclose = _interopRequireDefault(require("./pack/enclose"));

var _partition = _interopRequireDefault(require("./partition"));

var _stratify = _interopRequireDefault(require("./stratify"));

var _tree = _interopRequireDefault(require("./tree"));

var _index3 = _interopRequireDefault(require("./treemap/index"));

var _binary = _interopRequireDefault(require("./treemap/binary"));

var _dice = _interopRequireDefault(require("./treemap/dice"));

var _slice = _interopRequireDefault(require("./treemap/slice"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice"));

var _squarify = _interopRequireDefault(require("./treemap/squarify"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster":"brcY","./hierarchy/index":"LCo+","./pack/index":"aVuj","./pack/siblings":"efS5","./pack/enclose":"ZzhU","./partition":"h/+W","./stratify":"bJDQ","./tree":"7nrL","./treemap/index":"3cC5","./treemap/binary":"cDuG","./treemap/dice":"L3aV","./treemap/slice":"RVbL","./treemap/sliceDice":"dACy","./treemap/squarify":"jyLZ","./treemap/resquarify":"GrWc"}],"xGSp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"5ySB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"1Q4L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"tgjV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross":"1Q4L"}],"pcph":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"naEA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
}
},{}],"QnuL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area"));

var _centroid = _interopRequireDefault(require("./centroid"));

var _hull = _interopRequireDefault(require("./hull"));

var _contains = _interopRequireDefault(require("./contains"));

var _length = _interopRequireDefault(require("./length"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area":"xGSp","./centroid":"5ySB","./hull":"tgjV","./contains":"pcph","./length":"naEA"}],"uDia":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Math.random();
}
},{}],"hmOZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia"}],"pjsZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia"}],"lZpB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _normal = _interopRequireDefault(require("./normal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal.default.source(source).apply(this, arguments);

    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia","./normal":"pjsZ"}],"DMHS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) sum += source();

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia"}],"g+l6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall.default.source(source)(n);

    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia","./irwinHall":"DMHS"}],"gEmS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"uDia"}],"4WQ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform"));

var _normal = _interopRequireDefault(require("./normal"));

var _logNormal = _interopRequireDefault(require("./logNormal"));

var _bates = _interopRequireDefault(require("./bates"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

var _exponential = _interopRequireDefault(require("./exponential"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform":"hmOZ","./normal":"pjsZ","./logNormal":"lZpB","./bates":"g+l6","./irwinHall":"DMHS","./exponential":"gEmS"}],"aZlr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}
},{}],"lLkj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var map = array.map;
exports.map = map;
var slice = array.slice;
exports.slice = slice;
},{}],"ELIM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _d3Collection = require("d3-collection");

var _array = require("./array");

var _init = require("./init");

var implicit = {
  name: "implicit"
};
exports.implicit = implicit;

function ordinal() {
  var index = (0, _d3Collection.map)(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = (0, _d3Collection.map)();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-collection":"qqV1","./array":"lLkj","./init":"aZlr"}],"rJZF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init");

var _ordinal = _interopRequireDefault(require("./ordinal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"cBuZ","./init":"aZlr","./ordinal":"ELIM"}],"zRWI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return +x;
}
},{}],"ZpMB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array.slice.call(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}
},{"d3-array":"cBuZ","d3-interpolate":"mkGF","./array":"lLkj","./constant":"5O/Y","./number":"zRWI"}],"m0SA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function _default(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"cBuZ","d3-format":"4gWe"}],"VMtl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = (0, _d3Array.tickIncrement)(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"cBuZ","./continuous":"ZpMB","./init":"aZlr","./tickFormat":"m0SA"}],"eP89":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _array = require("./array");

var _linear = require("./linear");

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array.map.call(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./array":"lLkj","./linear":"VMtl","./number":"zRWI"}],"gRJQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"X3YW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice"));

var _continuous = require("./continuous");

var _init = require("./init");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"cBuZ","d3-format":"4gWe","./nice":"gRJQ","./continuous":"ZpMB","./init":"aZlr"}],"Prec":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear":"VMtl","./continuous":"ZpMB","./init":"aZlr"}],"/yse":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear":"VMtl","./continuous":"ZpMB","./init":"aZlr"}],"fsZk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantile)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./array":"lLkj","./init":"aZlr"}],"8Z2c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _array = require("./array");

var _linear = require("./linear");

var _init = require("./init");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array.slice.call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"cBuZ","./array":"lLkj","./linear":"VMtl","./init":"aZlr"}],"odYE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./array":"lLkj","./init":"aZlr"}],"gsab":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"r4Yr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"gsab"}],"EMi+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
var durationSecond = 1e3;
exports.durationSecond = durationSecond;
var durationMinute = 6e4;
exports.durationMinute = durationMinute;
var durationHour = 36e5;
exports.durationHour = durationHour;
var durationDay = 864e5;
exports.durationDay = durationDay;
var durationWeek = 6048e5;
exports.durationWeek = durationWeek;
},{}],"K4G6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"sObl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"wPv4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"bZ++":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay;
}, function (date) {
  return date.getDate() - 1;
});
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"6SUb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"XpbA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"gsab"}],"djmh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"gsab"}],"c3Ah":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"sGav":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"ns65":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"/HsO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"KWFc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"gsab"}],"LM11":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"gsab"}],"F00f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"gsab","./millisecond.js":"r4Yr","./second.js":"K4G6","./minute.js":"sObl","./hour.js":"wPv4","./day.js":"bZ++","./week.js":"6SUb","./month.js":"XpbA","./year.js":"djmh","./utcMinute.js":"c3Ah","./utcHour.js":"sGav","./utcDay.js":"ns65","./utcWeek.js":"/HsO","./utcMonth.js":"KWFc","./utcYear.js":"LM11"}],"rf9h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newYear(y) {
  return {
    y: y,
    m: 0,
    d: 1,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, newDate) {
    return function (string) {
      var d = newYear(1900),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newYear(d.y)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = newDate(newYear(d.y)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return newDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", localDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier, utcDate);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) map[names[i].toLowerCase()] = i;

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d), d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d), d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d), d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d), d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"F00f"}],"LmVV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale":"rf9h"}],"UFnF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale":"LmVV"}],"hAdq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat");

var _defaultLocale = require("./defaultLocale");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat":"UFnF","./defaultLocale":"LmVV"}],"+7zs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale"));

var _locale = _interopRequireDefault(require("./locale"));

var _isoFormat = _interopRequireDefault(require("./isoFormat"));

var _isoParse = _interopRequireDefault(require("./isoParse"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale":"LmVV","./locale":"rf9h","./isoFormat":"UFnF","./isoParse":"hAdq"}],"QHrh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _array = require("./array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _nice = _interopRequireDefault(require("./nice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0, _d3Array.bisector)(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = (0, _d3Array.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0, _d3Array.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array.map.call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function _default() {
  return _init.initRange.apply(calendar(_d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3Time.timeMillisecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-array":"cBuZ","d3-time":"F00f","d3-time-format":"+7zs","./array":"lLkj","./continuous":"ZpMB","./init":"aZlr","./nice":"gRJQ"}],"D6Mr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _time = require("./time");

var _d3TimeFormat = require("d3-time-format");

var _d3Time = require("d3-time");

var _init = require("./init");

function _default() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3Time.utcMillisecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"./time":"QHrh","d3-time-format":"+7zs","d3-time":"F00f","./init":"aZlr"}],"O1DZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"ZpMB","./init":"aZlr","./linear":"VMtl","./log":"X3YW","./symlog":"Prec","./pow":"/yse"}],"Y40z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous");

var _init = require("./init");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./continuous":"ZpMB","./init":"aZlr"}],"shE4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _sequential = require("./sequential");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"ZpMB","./init":"aZlr","./linear":"VMtl","./log":"X3YW","./sequential":"O1DZ","./symlog":"Prec","./pow":"/yse"}],"zt+a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band"));

var _identity = _interopRequireDefault(require("./identity"));

var _linear = _interopRequireDefault(require("./linear"));

var _log = _interopRequireDefault(require("./log"));

var _symlog = _interopRequireDefault(require("./symlog"));

var _ordinal = _interopRequireWildcard(require("./ordinal"));

var _pow = _interopRequireWildcard(require("./pow"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _quantize = _interopRequireDefault(require("./quantize"));

var _threshold = _interopRequireDefault(require("./threshold"));

var _time = _interopRequireDefault(require("./time"));

var _utcTime = _interopRequireDefault(require("./utcTime"));

var _sequential = _interopRequireWildcard(require("./sequential"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile"));

var _diverging = _interopRequireWildcard(require("./diverging"));

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band":"rJZF","./identity":"eP89","./linear":"VMtl","./log":"X3YW","./symlog":"Prec","./ordinal":"ELIM","./pow":"/yse","./quantile":"fsZk","./quantize":"8Z2c","./threshold":"odYE","./time":"QHrh","./utcTime":"D6Mr","./sequential":"O1DZ","./sequentialQuantile":"Y40z","./diverging":"shE4","./tickFormat":"m0SA"}],"e9Ar":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"PcKk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"2TXT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"MCH8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"bH6q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"2GbC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"SQbk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"/J0n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"rdh9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"7/o5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"n6R9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"tFWC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _default(scheme) {
  return (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);
}
},{"d3-interpolate":"mkGF"}],"kmpN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Hn8a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"cCiT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"k6z3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"75sN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"mrMT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"uyGf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Dt8k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"eSjI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"L6xI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"JRrn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"j/1f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"nT+z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"3B5M":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"NAcy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"DZXx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"aT++":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"et2z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"lF8J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"aI9y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"JWLI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"b4OA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"NKRR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"jAVD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Emw5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"wB2L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"wV9s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"5w3g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"Spoc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"pM5F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"dT4l":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"4TJ2"}],"Wgpo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"kmxq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"e9Ar"}],"zd6o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"PcKk","./categorical/Accent.js":"2TXT","./categorical/Dark2.js":"MCH8","./categorical/Paired.js":"bH6q","./categorical/Pastel1.js":"2GbC","./categorical/Pastel2.js":"SQbk","./categorical/Set1.js":"/J0n","./categorical/Set2.js":"rdh9","./categorical/Set3.js":"7/o5","./categorical/Tableau10.js":"n6R9","./diverging/BrBG.js":"kmpN","./diverging/PRGn.js":"Hn8a","./diverging/PiYG.js":"cCiT","./diverging/PuOr.js":"k6z3","./diverging/RdBu.js":"75sN","./diverging/RdGy.js":"mrMT","./diverging/RdYlBu.js":"uyGf","./diverging/RdYlGn.js":"Dt8k","./diverging/Spectral.js":"eSjI","./sequential-multi/BuGn.js":"L6xI","./sequential-multi/BuPu.js":"JRrn","./sequential-multi/GnBu.js":"j/1f","./sequential-multi/OrRd.js":"nT+z","./sequential-multi/PuBuGn.js":"3B5M","./sequential-multi/PuBu.js":"NAcy","./sequential-multi/PuRd.js":"DZXx","./sequential-multi/RdPu.js":"aT++","./sequential-multi/YlGnBu.js":"et2z","./sequential-multi/YlGn.js":"lF8J","./sequential-multi/YlOrBr.js":"aI9y","./sequential-multi/YlOrRd.js":"JWLI","./sequential-single/Blues.js":"b4OA","./sequential-single/Greens.js":"NKRR","./sequential-single/Greys.js":"jAVD","./sequential-single/Purples.js":"Emw5","./sequential-single/Reds.js":"wB2L","./sequential-single/Oranges.js":"wV9s","./sequential-multi/cividis.js":"5w3g","./sequential-multi/cubehelix.js":"Spoc","./sequential-multi/rainbow.js":"pM5F","./sequential-multi/sinebow.js":"dT4l","./sequential-multi/turbo.js":"Wgpo","./sequential-multi/viridis.js":"kmxq"}],"D3Ln":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"9R8v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"TV07":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"dz42","./constant":"D3Ln","./math":"9R8v"}],"4VCF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"aLIe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"Ume/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant"));

var _linear = _interopRequireDefault(require("./curve/linear"));

var _point = require("./point");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"dz42","./constant":"D3Ln","./curve/linear":"4VCF","./point":"aLIe"}],"UWil":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant"));

var _linear = _interopRequireDefault(require("./curve/linear"));

var _line = _interopRequireDefault(require("./line"));

var _point = require("./point");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = _point.x,
      x1 = null,
      y0 = (0, _constant.default)(0),
      y1 = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"dz42","./constant":"D3Ln","./curve/linear":"4VCF","./line":"Ume/","./point":"aLIe"}],"7Rov":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"5OJY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _descending = _interopRequireDefault(require("./descending"));

var _identity = _interopRequireDefault(require("./identity"));

var _math = require("./math");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./constant":"D3Ln","./descending":"wjXp","./identity":"7Rov","./math":"9R8v"}],"m9TD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear":"4VCF"}],"p8dR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial"));

var _line = _interopRequireDefault(require("./line"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial":"m9TD","./line":"Ume/"}],"7HIq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial"));

var _area = _interopRequireDefault(require("./area"));

var _lineRadial = require("./lineRadial");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial":"m9TD","./area":"UWil","./lineRadial":"p8dR"}],"wQOf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"CMsX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array");

var _constant = _interopRequireDefault(require("../constant"));

var _point = require("../point");

var _pointRadial = _interopRequireDefault(require("../pointRadial"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"dz42","../array":"rv5q","../constant":"D3Ln","../point":"aLIe","../pointRadial":"wQOf"}],"NEs3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math":"9R8v"}],"57OD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"nSnU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"3SkC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math":"9R8v"}],"lQ43":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"Z5S+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"JWBh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"XBPQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle"));

var _cross = _interopRequireDefault(require("./symbol/cross"));

var _diamond = _interopRequireDefault(require("./symbol/diamond"));

var _star = _interopRequireDefault(require("./symbol/star"));

var _square = _interopRequireDefault(require("./symbol/square"));

var _triangle = _interopRequireDefault(require("./symbol/triangle"));

var _wye = _interopRequireDefault(require("./symbol/wye"));

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default() {
  var type = (0, _constant.default)(_circle.default),
      size = (0, _constant.default)(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"dz42","./symbol/circle":"NEs3","./symbol/cross":"57OD","./symbol/diamond":"nSnU","./symbol/star":"3SkC","./symbol/square":"lQ43","./symbol/triangle":"Z5S+","./symbol/wye":"JWBh","./constant":"D3Ln"}],"XakR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"WkDE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop"));

var _basis = require("./basis");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop":"BhKh","./basis":"XakR"}],"+5Gg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis":"XakR"}],"eh91":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis":"XakR"}],"fNTp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"euEz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop"));

var _cardinal = require("./cardinal");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop":"BhKh","./cardinal":"fNTp"}],"it46":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal":"fNTp"}],"oWDJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math");

var _cardinal = require("./cardinal");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math":"9R8v","./cardinal":"fNTp"}],"41Cs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed");

var _noop = _interopRequireDefault(require("../noop"));

var _catmullRom = require("./catmullRom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed":"euEz","../noop":"BhKh","./catmullRom":"oWDJ"}],"Vf6b":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen");

var _catmullRom = require("./catmullRom");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen":"it46","./catmullRom":"oWDJ"}],"QDqS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop":"BhKh"}],"7Vae":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"0T3B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"UYn4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"x5Mk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"0IgC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"S7q8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _none = _interopRequireDefault(require("./offset/none"));

var _none2 = _interopRequireDefault(require("./order/none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array":"rv5q","./constant":"D3Ln","./offset/none":"x5Mk","./order/none":"0IgC"}],"2jY6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none":"x5Mk"}],"P+6Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = yp;
      }
    }
  }
}
},{}],"sf4d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none":"x5Mk"}],"EH71":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none":"x5Mk"}],"zyBr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none":"0IgC"}],"4koe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none":"0IgC"}],"i2th":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending":"4koe"}],"msEL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance"));

var _ascending = require("./ascending");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance":"zyBr","./ascending":"4koe"}],"w5Iz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none":"0IgC"}],"pW+U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc"));

var _area = _interopRequireDefault(require("./area"));

var _line = _interopRequireDefault(require("./line"));

var _pie = _interopRequireDefault(require("./pie"));

var _areaRadial = _interopRequireDefault(require("./areaRadial"));

var _lineRadial = _interopRequireDefault(require("./lineRadial"));

var _pointRadial = _interopRequireDefault(require("./pointRadial"));

var _index = require("./link/index");

var _symbol = _interopRequireWildcard(require("./symbol"));

var _circle = _interopRequireDefault(require("./symbol/circle"));

var _cross = _interopRequireDefault(require("./symbol/cross"));

var _diamond = _interopRequireDefault(require("./symbol/diamond"));

var _square = _interopRequireDefault(require("./symbol/square"));

var _star = _interopRequireDefault(require("./symbol/star"));

var _triangle = _interopRequireDefault(require("./symbol/triangle"));

var _wye = _interopRequireDefault(require("./symbol/wye"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen"));

var _basis = _interopRequireDefault(require("./curve/basis"));

var _bundle = _interopRequireDefault(require("./curve/bundle"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed"));

var _linear = _interopRequireDefault(require("./curve/linear"));

var _monotone = require("./curve/monotone");

var _natural = _interopRequireDefault(require("./curve/natural"));

var _step = _interopRequireWildcard(require("./curve/step"));

var _stack = _interopRequireDefault(require("./stack"));

var _expand = _interopRequireDefault(require("./offset/expand"));

var _diverging = _interopRequireDefault(require("./offset/diverging"));

var _none = _interopRequireDefault(require("./offset/none"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle"));

var _appearance = _interopRequireDefault(require("./order/appearance"));

var _ascending = _interopRequireDefault(require("./order/ascending"));

var _descending = _interopRequireDefault(require("./order/descending"));

var _insideOut = _interopRequireDefault(require("./order/insideOut"));

var _none2 = _interopRequireDefault(require("./order/none"));

var _reverse = _interopRequireDefault(require("./order/reverse"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc":"TV07","./area":"UWil","./line":"Ume/","./pie":"5OJY","./areaRadial":"7HIq","./lineRadial":"p8dR","./pointRadial":"wQOf","./link/index":"CMsX","./symbol":"XBPQ","./symbol/circle":"NEs3","./symbol/cross":"57OD","./symbol/diamond":"nSnU","./symbol/square":"lQ43","./symbol/star":"3SkC","./symbol/triangle":"Z5S+","./symbol/wye":"JWBh","./curve/basisClosed":"WkDE","./curve/basisOpen":"+5Gg","./curve/basis":"XakR","./curve/bundle":"eh91","./curve/cardinalClosed":"euEz","./curve/cardinalOpen":"it46","./curve/cardinal":"fNTp","./curve/catmullRomClosed":"41Cs","./curve/catmullRomOpen":"Vf6b","./curve/catmullRom":"oWDJ","./curve/linearClosed":"QDqS","./curve/linear":"4VCF","./curve/monotone":"7Vae","./curve/natural":"0T3B","./curve/step":"UYn4","./stack":"S7q8","./offset/expand":"2jY6","./offset/diverging":"P+6Q","./offset/none":"x5Mk","./offset/silhouette":"sf4d","./offset/wiggle":"EH71","./order/appearance":"zyBr","./order/ascending":"4koe","./order/descending":"i2th","./order/insideOut":"msEL","./order/none":"0IgC","./order/reverse":"w5Iz"}],"mmRi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}
},{}],"cyhV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RedBlackNode = RedBlackNode;
exports.default = void 0;

function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function (after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) after = after.L;

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function (node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;

  return node;
}

var _default = RedBlackTree;
exports.default = _default;
},{}],"7Tkp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEdge = createEdge;
exports.createBorderEdge = createBorderEdge;
exports.setEdgeEnd = setEdgeEnd;
exports.clipEdges = clipEdges;

var _Diagram = require("./Diagram");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram.edges.push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);

  _Diagram.cells[left.index].halfedges.push(index);

  _Diagram.cells[right.index].halfedges.push(index);

  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.


function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram.edges.length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram.edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram.epsilon || Math.abs(edge[0][1] - edge[1][1]) > _Diagram.epsilon)) {
      delete _Diagram.edges[i];
    }
  }
}
},{"./Diagram":"Jn8D"}],"8zWB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCell = createCell;
exports.cellHalfedgeStart = cellHalfedgeStart;
exports.cellHalfedgeEnd = cellHalfedgeEnd;
exports.sortCellHalfedges = sortCellHalfedges;
exports.clipCells = clipCells;

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

function createCell(site) {
  return _Diagram.cells[site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram.cells.length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram.cells[i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram.edges[halfedges[j]]);

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];

      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram.cells.length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram.edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram.edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram.edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram.epsilon || Math.abs(endY - startY) > _Diagram.epsilon) {
          halfedges.splice(iHalfedge, 0, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, end, Math.abs(endX - x0) < _Diagram.epsilon && y1 - endY > _Diagram.epsilon ? [x0, Math.abs(startX - x0) < _Diagram.epsilon ? startY : y1] : Math.abs(endY - y1) < _Diagram.epsilon && x1 - endX > _Diagram.epsilon ? [Math.abs(startY - y1) < _Diagram.epsilon ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram.epsilon && endY - y0 > _Diagram.epsilon ? [x1, Math.abs(startX - x1) < _Diagram.epsilon ? startY : y0] : Math.abs(endY - y0) < _Diagram.epsilon && endX - x0 > _Diagram.epsilon ? [Math.abs(startY - y0) < _Diagram.epsilon ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram.cells[iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram.edges.push((0, _Edge.createBorderEdge)(site = cover.site, v00, v01)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v01, v11)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v11, v10)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram.cells[iCell];
      }
    }
  }
}
},{"./Edge":"7Tkp","./Diagram":"Jn8D"}],"Hzn+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachCircle = attachCircle;
exports.detachCircle = detachCircle;
exports.firstCircle = void 0;

var _RedBlackTree = require("./RedBlackTree");

var _Diagram = require("./Diagram");

var circlePool = [];
var firstCircle;
exports.firstCircle = firstCircle;

function Circle() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram.epsilon2) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram.circles._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram.circles.insert(before, circle);

  if (!before) exports.firstCircle = firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) exports.firstCircle = firstCircle = circle.N;

    _Diagram.circles.remove(circle);

    circlePool.push(circle);
    (0, _RedBlackTree.RedBlackNode)(circle);
    arc.circle = null;
  }
}
},{"./RedBlackTree":"cyhV","./Diagram":"Jn8D"}],"vrdo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeBeach = removeBeach;
exports.addBeach = addBeach;

var _RedBlackTree = require("./RedBlackTree");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

var beachPool = [];

function Beach() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  (0, _Circle.detachCircle)(beach);

  _Diagram.beaches.remove(beach);

  beachPool.push(beach);
  (0, _RedBlackTree.RedBlackNode)(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram.epsilon && Math.abs(y - lArc.circle.cy) < _Diagram.epsilon) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  (0, _Circle.detachCircle)(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram.epsilon && Math.abs(y - rArc.circle.cy) < _Diagram.epsilon) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  (0, _Circle.detachCircle)(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    (0, _Edge.setEdgeEnd)(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = (0, _Edge.createEdge)(lArc.site, rArc.site, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram.beaches._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram.epsilon) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram.epsilon) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram.epsilon) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram.epsilon) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  (0, _Cell.createCell)(site);
  var newArc = createBeach(site);

  _Diagram.beaches.insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    (0, _Circle.detachCircle)(lArc);
    rArc = createBeach(lArc.site);

    _Diagram.beaches.insert(newArc, rArc);

    newArc.edge = rArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    (0, _Circle.attachCircle)(lArc);
    (0, _Circle.attachCircle)(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  (0, _Circle.detachCircle)(lArc);
  (0, _Circle.detachCircle)(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  (0, _Edge.setEdgeEnd)(rArc.edge, lSite, rSite, vertex);
  newArc.edge = (0, _Edge.createEdge)(lSite, site, null, vertex);
  rArc.edge = (0, _Edge.createEdge)(site, rSite, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
},{"./RedBlackTree":"cyhV","./Cell":"8zWB","./Circle":"Hzn+","./Edge":"7Tkp","./Diagram":"Jn8D"}],"Jn8D":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Diagram;
exports.edges = exports.circles = exports.cells = exports.beaches = exports.epsilon2 = exports.epsilon = void 0;

var _Beach = require("./Beach");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _RedBlackTree = _interopRequireDefault(require("./RedBlackTree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var beaches;
exports.beaches = beaches;
var cells;
exports.cells = cells;
var circles;
exports.circles = circles;
var edges;
exports.edges = edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  exports.edges = edges = [];
  exports.cells = cells = new Array(sites.length);
  exports.beaches = beaches = new _RedBlackTree.default();
  exports.circles = circles = new _RedBlackTree.default();

  while (true) {
    circle = _Circle.firstCircle;

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        (0, _Beach.addBeach)(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      (0, _Beach.removeBeach)(circle.arc);
    } else {
      break;
    }
  }

  (0, _Cell.sortCellHalfedges)();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    (0, _Edge.clipEdges)(x0, y0, x1, y1);
    (0, _Cell.clipCells)(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  exports.beaches = beaches = exports.circles = circles = exports.edges = edges = exports.cells = cells = null;
}

Diagram.prototype = {
  constructor: Diagram,
  polygons: function () {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return (0, _Cell.cellHalfedgeStart)(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function () {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function () {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function (x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
},{"./Beach":"vrdo","./Cell":"8zWB","./Circle":"Hzn+","./Edge":"7Tkp","./RedBlackTree":"cyhV"}],"rzeD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _point = require("./point");

var _Diagram = _interopRequireWildcard(require("./Diagram"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      extent = null;

  function voronoi(data) {
    return new _Diagram.default(data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon, Math.round(y(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
}
},{"./constant":"5O/Y","./point":"mmRi","./Diagram":"Jn8D"}],"AKDj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _voronoi = _interopRequireDefault(require("./voronoi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./voronoi":"rzeD"}],"pmu8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}
},{}],"RGu5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"T0tZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta() {
  return -_d3Selection.event.deltaY * (_d3Selection.event.deltaMode === 1 ? 0.05 : _d3Selection.event.deltaMode ? 1 : 0.002);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p);
  };

  zoom.scaleTo = function (selection, k, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p);
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.mouse)(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments, true),
        v = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.mouse)(this),
        x0 = _d3Selection.event.clientX,
        y0 = _d3Selection.event.clientY;
    (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved() {
      (0, _noevent.default)();

      if (!g.moved) {
        var dx = _d3Selection.event.clientX - x0,
            dy = _d3Selection.event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.mouse)(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(_d3Selection.event.view, g.moved);
      (0, _noevent.default)();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.mouse)(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (_d3Selection.event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    (0, _noevent.default)();
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0);else (0, _d3Selection.select)(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.touches,
        n = touches.length,
        g = gesture(this, arguments, _d3Selection.event.changedTouches.length === n),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);
    g.taps = 0;

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
}
},{"d3-dispatch":"UU/c","d3-drag":"LrBi","d3-interpolate":"mkGF","d3-selection":"lm1C","d3-transition":"Fcbi","./constant.js":"5O/Y","./event.js":"pmu8","./transform.js":"RGu5","./noevent.js":"DCEg"}],"uzwd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"T0tZ","./transform.js":"RGu5"}],"BG5c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Collection = require("d3-collection");

Object.keys(_d3Collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Collection[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Voronoi = require("d3-voronoi");

Object.keys(_d3Voronoi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Voronoi[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"hADF","d3-array":"cBuZ","d3-axis":"y9Kr","d3-brush":"TNt0","d3-chord":"cf1+","d3-collection":"qqV1","d3-color":"4TJ2","d3-contour":"cfrl","d3-dispatch":"UU/c","d3-drag":"LrBi","d3-dsv":"mQVF","d3-ease":"CFyW","d3-fetch":"hNko","d3-force":"YpA1","d3-format":"4gWe","d3-geo":"LMxt","d3-hierarchy":"wNQE","d3-interpolate":"mkGF","d3-path":"dz42","d3-polygon":"QnuL","d3-quadtree":"oxc3","d3-random":"4WQ4","d3-scale":"zt+a","d3-scale-chromatic":"zd6o","d3-selection":"lm1C","d3-shape":"pW+U","d3-time":"F00f","d3-time-format":"+7zs","d3-timer":"CBES","d3-transition":"Fcbi","d3-voronoi":"AKDj","d3-zoom":"uzwd"}],"4673":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */

/*  */
var emptyObject = Object.freeze({}); // These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.

function isUndef(v) {
  return v === undefined || v === null;
}

function isDef(v) {
  return v !== undefined && v !== null;
}

function isTrue(v) {
  return v === true;
}

function isFalse(v) {
  return v === false;
}
/**
 * Check if value is primitive.
 */


function isPrimitive(value) {
  return typeof value === 'string' || typeof value === 'number' || // $flow-disable-line
  typeof value === 'symbol' || typeof value === 'boolean';
}
/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */


function isObject(obj) {
  return obj !== null && typeof obj === 'object';
}
/**
 * Get the raw type string of a value, e.g., [object Object].
 */


var _toString = Object.prototype.toString;

function toRawType(value) {
  return _toString.call(value).slice(8, -1);
}
/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */


function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function isRegExp(v) {
  return _toString.call(v) === '[object RegExp]';
}
/**
 * Check if val is a valid array index.
 */


function isValidArrayIndex(val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val);
}

function isPromise(val) {
  return isDef(val) && typeof val.then === 'function' && typeof val.catch === 'function';
}
/**
 * Convert a value to a string that is actually rendered.
 */


function toString(val) {
  return val == null ? '' : Array.isArray(val) || isPlainObject(val) && val.toString === _toString ? JSON.stringify(val, null, 2) : String(val);
}
/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */


function toNumber(val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n;
}
/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */


function makeMap(str, expectsLowerCase) {
  var map = Object.create(null);
  var list = str.split(',');

  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }

  return expectsLowerCase ? function (val) {
    return map[val.toLowerCase()];
  } : function (val) {
    return map[val];
  };
}
/**
 * Check if a tag is a built-in tag.
 */


var isBuiltInTag = makeMap('slot,component', true);
/**
 * Check if an attribute is a reserved attribute.
 */

var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
/**
 * Remove an item from an array.
 */

function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);

    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}
/**
 * Check whether an object has the property.
 */


var hasOwnProperty = Object.prototype.hasOwnProperty;

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
/**
 * Create a cached version of a pure function.
 */


function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}
/**
 * Camelize a hyphen-delimited string.
 */


var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
/**
 * Capitalize a string.
 */

var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * Hyphenate a camelCase string.
 */

var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});
/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */

function polyfillBind(fn, ctx) {
  function boundFn(a) {
    var l = arguments.length;
    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
  }

  boundFn._length = fn.length;
  return boundFn;
}

function nativeBind(fn, ctx) {
  return fn.bind(ctx);
}

var bind = Function.prototype.bind ? nativeBind : polyfillBind;
/**
 * Convert an Array-like object to a real Array.
 */

function toArray(list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);

  while (i--) {
    ret[i] = list[i + start];
  }

  return ret;
}
/**
 * Mix properties into target object.
 */


function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }

  return to;
}
/**
 * Merge an Array of Objects into a single Object.
 */


function toObject(arr) {
  var res = {};

  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }

  return res;
}
/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */


function noop(a, b, c) {}
/**
 * Always return false.
 */


var no = function (a, b, c) {
  return false;
};
/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */


var identity = function (_) {
  return _;
};
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */


function looseEqual(a, b) {
  if (a === b) {
    return true;
  }

  var isObjectA = isObject(a);
  var isObjectB = isObject(b);

  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);

      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i]);
        });
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime();
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key]);
        });
      } else {
        /* istanbul ignore next */
        return false;
      }
    } catch (e) {
      /* istanbul ignore next */
      return false;
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
}
/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */


function looseIndexOf(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) {
      return i;
    }
  }

  return -1;
}
/**
 * Ensure a function is called only once.
 */


function once(fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  };
}

var SSR_ATTR = 'data-server-rendered';
var ASSET_TYPES = ['component', 'directive', 'filter'];
var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured', 'serverPrefetch'];
/*  */

var config = {
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
};
/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */

var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
/**
 * Check if a string starts with $ or _
 */

function isReserved(str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F;
}
/**
 * Define a property.
 */


function def(obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}
/**
 * Parse simple path.
 */


var bailRE = new RegExp("[^" + unicodeRegExp.source + ".$_\\d]");

function parsePath(path) {
  if (bailRE.test(path)) {
    return;
  }

  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) {
        return;
      }

      obj = obj[segments[i]];
    }

    return obj;
  };
}
/*  */
// can we use __proto__?


var hasProto = '__proto__' in {}; // Browser environment sniffing

var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/); // Firefox has a "watch" function on Object.prototype...

var nativeWatch = {}.watch;
var supportsPassive = false;

if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', {
      get: function get() {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    }); // https://github.com/facebook/flow/issues/285

    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
} // this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV


var _isServer;

var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }

  return _isServer;
}; // detect devtools


var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
/* istanbul ignore next */

function isNative(Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
}

var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */
// $flow-disable-line


if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set =
  /*@__PURE__*/
  function () {
    function Set() {
      this.set = Object.create(null);
    }

    Set.prototype.has = function has(key) {
      return this.set[key] === true;
    };

    Set.prototype.add = function add(key) {
      this.set[key] = true;
    };

    Set.prototype.clear = function clear() {
      this.set = Object.create(null);
    };

    return Set;
  }();
}
/*  */


var warn = noop;
var tip = noop;
var generateComponentTrace = noop; // work around flow check

var formatComponentName = noop;

if ("production" !== 'production') {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;

  var classify = function (str) {
    return str.replace(classifyRE, function (c) {
      return c.toUpperCase();
    }).replace(/[-_]/g, '');
  };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && !config.silent) {
      console.error("[Vue warn]: " + msg + trace);
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && !config.silent) {
      console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>';
    }

    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;

    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
  };

  var repeat = function (str, n) {
    var res = '';

    while (n) {
      if (n % 2 === 1) {
        res += str;
      }

      if (n > 1) {
        str += str;
      }

      n >>= 1;
    }

    return res;
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;

      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];

          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue;
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }

        tree.push(vm);
        vm = vm.$parent;
      }

      return '\n\nfound in\n\n' + tree.map(function (vm, i) {
        return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
      }).join('\n');
    } else {
      return "\n\n(found in " + formatComponentName(vm) + ")";
    }
  };
}
/*  */


var uid = 0;
/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */

var Dep = function Dep() {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub(sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub(sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend() {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify() {
  // stabilize the subscriber list first
  var subs = this.subs.slice();

  if ("production" !== 'production' && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) {
      return a.id - b.id;
    });
  }

  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
}; // The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.


Dep.target = null;
var targetStack = [];

function pushTarget(target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget() {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}
/*  */


var VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = {
  child: {
    configurable: true
  }
}; // DEPRECATED: alias for componentInstance for backwards compat.

/* istanbul ignore next */

prototypeAccessors.child.get = function () {
  return this.componentInstance;
};

Object.defineProperties(VNode.prototype, prototypeAccessors);

var createEmptyVNode = function (text) {
  if (text === void 0) text = '';
  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node;
};

function createTextVNode(val) {
  return new VNode(undefined, undefined, undefined, String(val));
} // optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.


function cloneVNode(vnode) {
  var cloned = new VNode(vnode.tag, vnode.data, // #7975
  // clone children array to avoid mutating original in case of cloning
  // a child.
  vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned;
}
/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */


var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);
var methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];
/**
 * Intercept mutating methods and emit events
 */

methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator() {
    var args = [],
        len = arguments.length;

    while (len--) args[len] = arguments[len];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;

    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break;

      case 'splice':
        inserted = args.slice(2);
        break;
    }

    if (inserted) {
      ob.observeArray(inserted);
    } // notify change


    ob.dep.notify();
    return result;
  });
});
/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */

var shouldObserve = true;

function toggleObserving(value) {
  shouldObserve = value;
}
/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */


var Observer = function Observer(value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);

  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }

    this.observeArray(value);
  } else {
    this.walk(value);
  }
};
/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */


Observer.prototype.walk = function walk(obj) {
  var keys = Object.keys(obj);

  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};
/**
 * Observe a list of Array items.
 */


Observer.prototype.observeArray = function observeArray(items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
}; // helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */


function protoAugment(target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}
/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */

/* istanbul ignore next */


function copyAugment(target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}
/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */


function observe(value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return;
  }

  var ob;

  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
    ob = new Observer(value);
  }

  if (asRootData && ob) {
    ob.vmCount++;
  }

  return ob;
}
/**
 * Define a reactive property on an Object.
 */


function defineReactive$$1(obj, key, val, customSetter, shallow) {
  var dep = new Dep();
  var property = Object.getOwnPropertyDescriptor(obj, key);

  if (property && property.configurable === false) {
    return;
  } // cater for pre-defined getter/setters


  var getter = property && property.get;
  var setter = property && property.set;

  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter() {
      var value = getter ? getter.call(obj) : val;

      if (Dep.target) {
        dep.depend();

        if (childOb) {
          childOb.dep.depend();

          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }

      return value;
    },
    set: function reactiveSetter(newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */

      if (newVal === value || newVal !== newVal && value !== value) {
        return;
      }
      /* eslint-enable no-self-compare */


      if ("production" !== 'production' && customSetter) {
        customSetter();
      } // #7981: for accessor properties without setter


      if (getter && !setter) {
        return;
      }

      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }

      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}
/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */


function set(target, key, val) {
  if ("production" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot set reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }

  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "production" !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
    return val;
  }

  if (!ob) {
    target[key] = val;
    return val;
  }

  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val;
}
/**
 * Delete a property and trigger change if necessary.
 */


function del(target, key) {
  if ("production" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot delete reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "production" !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
    return;
  }

  if (!hasOwn(target, key)) {
    return;
  }

  delete target[key];

  if (!ob) {
    return;
  }

  ob.dep.notify();
}
/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */


function dependArray(value) {
  for (var e = void 0, i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();

    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}
/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */


var strats = config.optionMergeStrategies;
/**
 * Options with restrictions
 */

if ("production" !== 'production') {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
    }

    return defaultStrat(parent, child);
  };
}
/**
 * Helper that recursively merges two data objects together.
 */


function mergeData(to, from) {
  if (!from) {
    return to;
  }

  var key, toVal, fromVal;
  var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i]; // in case the object is already observed...

    if (key === '__ob__') {
      continue;
    }

    toVal = to[key];
    fromVal = from[key];

    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (toVal !== fromVal && isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }

  return to;
}
/**
 * Data
 */


function mergeDataOrFn(parentVal, childVal, vm) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal;
    }

    if (!parentVal) {
      return childVal;
    } // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.


    return function mergedDataFn() {
      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);
    };
  } else {
    return function mergedInstanceDataFn() {
      // instance merge
      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;
      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;

      if (instanceData) {
        return mergeData(instanceData, defaultData);
      } else {
        return defaultData;
      }
    };
  }
}

strats.data = function (parentVal, childVal, vm) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "production" !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
      return parentVal;
    }

    return mergeDataOrFn(parentVal, childVal);
  }

  return mergeDataOrFn(parentVal, childVal, vm);
};
/**
 * Hooks and props are merged as arrays.
 */


function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}

function dedupeHooks(hooks) {
  var res = [];

  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }

  return res;
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});
/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */

function mergeAssets(parentVal, childVal, vm, key) {
  var res = Object.create(parentVal || null);

  if (childVal) {
    "production" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal);
  } else {
    return res;
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});
/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */

strats.watch = function (parentVal, childVal, vm, key) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) {
    parentVal = undefined;
  }

  if (childVal === nativeWatch) {
    childVal = undefined;
  }
  /* istanbul ignore if */


  if (!childVal) {
    return Object.create(parentVal || null);
  }

  if ("production" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = {};
  extend(ret, parentVal);

  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];

    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }

    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
  }

  return ret;
};
/**
 * Other object hashes.
 */


strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {
  if (childVal && "production" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = Object.create(null);
  extend(ret, parentVal);

  if (childVal) {
    extend(ret, childVal);
  }

  return ret;
};

strats.provide = mergeDataOrFn;
/**
 * Default strategy.
 */

var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined ? parentVal : childVal;
};
/**
 * Validate component names
 */


function checkComponents(options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName(name) {
  if (!new RegExp("^[a-zA-Z][\\-\\.0-9_" + unicodeRegExp.source + "]*$").test(name)) {
    warn('Invalid component name: "' + name + '". Component names ' + 'should conform to valid custom element name in html5 specification.');
  }

  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);
  }
}
/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */


function normalizeProps(options, vm) {
  var props = options.props;

  if (!props) {
    return;
  }

  var res = {};
  var i, val, name;

  if (Array.isArray(props)) {
    i = props.length;

    while (i--) {
      val = props[i];

      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = {
          type: null
        };
      } else if ("production" !== 'production') {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val) ? val : {
        type: val
      };
    }
  } else if ("production" !== 'production') {
    warn("Invalid value for option \"props\": expected an Array or an Object, " + "but got " + toRawType(props) + ".", vm);
  }

  options.props = res;
}
/**
 * Normalize all injections into Object-based format
 */


function normalizeInject(options, vm) {
  var inject = options.inject;

  if (!inject) {
    return;
  }

  var normalized = options.inject = {};

  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = {
        from: inject[i]
      };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val) ? extend({
        from: key
      }, val) : {
        from: val
      };
    }
  } else if ("production" !== 'production') {
    warn("Invalid value for option \"inject\": expected an Array or an Object, " + "but got " + toRawType(inject) + ".", vm);
  }
}
/**
 * Normalize raw function directives into object format.
 */


function normalizeDirectives(options) {
  var dirs = options.directives;

  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];

      if (typeof def$$1 === 'function') {
        dirs[key] = {
          bind: def$$1,
          update: def$$1
        };
      }
    }
  }
}

function assertObjectType(name, value, vm) {
  if (!isPlainObject(value)) {
    warn("Invalid value for option \"" + name + "\": expected an Object, " + "but got " + toRawType(value) + ".", vm);
  }
}
/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */


function mergeOptions(parent, child, vm) {
  if ("production" !== 'production') {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child); // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.

  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }

    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;

  for (key in parent) {
    mergeField(key);
  }

  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }

  function mergeField(key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }

  return options;
}
/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */


function resolveAsset(options, type, id, warnMissing) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return;
  }

  var assets = options[type]; // check local registration variations first

  if (hasOwn(assets, id)) {
    return assets[id];
  }

  var camelizedId = camelize(id);

  if (hasOwn(assets, camelizedId)) {
    return assets[camelizedId];
  }

  var PascalCaseId = capitalize(camelizedId);

  if (hasOwn(assets, PascalCaseId)) {
    return assets[PascalCaseId];
  } // fallback to prototype chain


  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];

  if ("production" !== 'production' && warnMissing && !res) {
    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
  }

  return res;
}
/*  */


function validateProp(key, propOptions, propsData, vm) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key]; // boolean casting

  var booleanIndex = getTypeIndex(Boolean, prop.type);

  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);

      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  } // check default value


  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,
    // make sure to observe it.

    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }

  if ("production" !== 'production' && // skip validation for weex recycle-list child component props
  !false) {
    assertProp(prop, key, value, vm, absent);
  }

  return value;
}
/**
 * Get the default value of a prop.
 */


function getPropDefaultValue(vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined;
  }

  var def = prop.default; // warn against non-factory defaults for Object & Array

  if ("production" !== 'production' && isObject(def)) {
    warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
  } // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger


  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
    return vm._props[key];
  } // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context


  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
}
/**
 * Assert whether a prop is valid.
 */


function assertProp(prop, name, value, vm, absent) {
  if (prop.required && absent) {
    warn('Missing required prop: "' + name + '"', vm);
    return;
  }

  if (value == null && !prop.required) {
    return;
  }

  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];

  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }

    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(getInvalidTypeMessage(name, value, expectedTypes), vm);
    return;
  }

  var validator = prop.validator;

  if (validator) {
    if (!validator(value)) {
      warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType(value, type) {
  var valid;
  var expectedType = getType(type);

  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects

    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }

  return {
    valid: valid,
    expectedType: expectedType
  };
}
/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */


function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

function isSameType(a, b) {
  return getType(a) === getType(b);
}

function getTypeIndex(type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1;
  }

  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i;
    }
  }

  return -1;
}

function getInvalidTypeMessage(name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." + " Expected " + expectedTypes.map(capitalize).join(', ');
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType); // check if we need to specify expected value

  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }

  message += ", got " + receivedType + " "; // check if we need to specify received value

  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }

  return message;
}

function styleValue(value, type) {
  if (type === 'String') {
    return "\"" + value + "\"";
  } else if (type === 'Number') {
    return "" + Number(value);
  } else {
    return "" + value;
  }
}

function isExplicable(value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) {
    return value.toLowerCase() === elem;
  });
}

function isBoolean() {
  var args = [],
      len = arguments.length;

  while (len--) args[len] = arguments[len];

  return args.some(function (elem) {
    return elem.toLowerCase() === 'boolean';
  });
}
/*  */


function handleError(err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();

  try {
    if (vm) {
      var cur = vm;

      while (cur = cur.$parent) {
        var hooks = cur.$options.errorCaptured;

        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;

              if (capture) {
                return;
              }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }

    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling(handler, context, args, vm, info) {
  var res;

  try {
    res = args ? handler.apply(context, args) : handler.call(context);

    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) {
        return handleError(e, vm, info + " (Promise/async)");
      }); // issue #9511
      // avoid catch triggering multiple times when nested calls

      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }

  return res;
}

function globalHandleError(err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info);
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }

  logError(err, vm, info);
}

function logError(err, vm, info) {
  if ("production" !== 'production') {
    warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
  }
  /* istanbul ignore else */


  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err;
  }
}
/*  */


var isUsingMicroTask = false;
var callbacks = [];
var pending = false;

function flushCallbacks() {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;

  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
} // Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).


var timerFunc; // The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:

/* istanbul ignore next, $flow-disable-line */

if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();

  timerFunc = function () {
    p.then(flushCallbacks); // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.

    if (isIOS) {
      setTimeout(noop);
    }
  };

  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) || // PhantomJS and iOS 7.x
MutationObserver.toString() === '[object MutationObserverConstructor]')) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });

  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };

  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Techinically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick(cb, ctx) {
  var _resolve;

  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });

  if (!pending) {
    pending = true;
    timerFunc();
  } // $flow-disable-line


  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    });
  }
}
/*  */

/* not type checking this file because flow doesn't play well with Proxy */


var initProxy;

if ("production" !== 'production') {
  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn("Property or method \"" + key + "\" is not defined on the instance but " + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);
  };

  var warnReservedPrefix = function (target, key) {
    warn("Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " + 'properties starting with "$" or "_" are not proxied in the Vue instance to ' + 'prevent conflicts with Vue internals' + 'See: https://vuejs.org/v2/api/#data', target);
  };

  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set(target, key, value) {
        if (isBuiltInModifier(key)) {
          warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
          return false;
        } else {
          target[key] = value;
          return true;
        }
      }
    });
  }

  var hasHandler = {
    has: function has(target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data);

      if (!has && !isAllowed) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return has || !isAllowed;
    }
  };
  var getHandler = {
    get: function get(target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return target[key];
    }
  };

  initProxy = function initProxy(vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}
/*  */


var seenObjects = new _Set();
/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */

function traverse(val) {
  _traverse(val, seenObjects);

  seenObjects.clear();
}

function _traverse(val, seen) {
  var i, keys;
  var isA = Array.isArray(val);

  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {
    return;
  }

  if (val.__ob__) {
    var depId = val.__ob__.dep.id;

    if (seen.has(depId)) {
      return;
    }

    seen.add(depId);
  }

  if (isA) {
    i = val.length;

    while (i--) {
      _traverse(val[i], seen);
    }
  } else {
    keys = Object.keys(val);
    i = keys.length;

    while (i--) {
      _traverse(val[keys[i]], seen);
    }
  }
}

var mark;
var measure;

if ("production" !== 'production') {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */

  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
    mark = function (tag) {
      return perf.mark(tag);
    };

    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag); // perf.clearMeasures(name)
    };
  }
}
/*  */


var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first

  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  };
});

function createFnInvoker(fns, vm) {
  function invoker() {
    var arguments$1 = arguments;
    var fns = invoker.fns;

    if (Array.isArray(fns)) {
      var cloned = fns.slice();

      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler");
    }
  }

  invoker.fns = fns;
  return invoker;
}

function updateListeners(on, oldOn, add, remove$$1, createOnceHandler, vm) {
  var name, def$$1, cur, old, event;

  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);

    if (isUndef(cur)) {
      "production" !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }

      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }

      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }

  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}
/*  */


function mergeVNodeHook(def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }

  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook() {
    hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once
    // and prevent memory leak

    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}
/*  */


function extractPropsFromVNodeData(data, Ctor, tag) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;

  if (isUndef(propOptions)) {
    return;
  }

  var res = {};
  var attrs = data.attrs;
  var props = data.props;

  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);

      if ("production" !== 'production') {
        var keyInLowerCase = key.toLowerCase();

        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
          tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
        }
      }

      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
    }
  }

  return res;
}

function checkProp(res, hash, key, altKey, preserve) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];

      if (!preserve) {
        delete hash[key];
      }

      return true;
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];

      if (!preserve) {
        delete hash[altKey];
      }

      return true;
    }
  }

  return false;
}
/*  */
// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:
// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.


function simpleNormalizeChildren(children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children);
    }
  }

  return children;
} // 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.


function normalizeChildren(children) {
  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
}

function isTextNode(node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment);
}

function normalizeArrayChildren(children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;

  for (i = 0; i < children.length; i++) {
    c = children[i];

    if (isUndef(c) || typeof c === 'boolean') {
      continue;
    }

    lastIndex = res.length - 1;
    last = res[lastIndex]; //  nested

    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, (nestedIndex || '') + "_" + i); // merge adjacent text nodes

        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + c[0].text);
          c.shift();
        }

        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }

        res.push(c);
      }
    }
  }

  return res;
}
/*  */


function initProvide(vm) {
  var provide = vm.$options.provide;

  if (provide) {
    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
  }
}

function initInjections(vm) {
  var result = resolveInject(vm.$options.inject, vm);

  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if ("production" !== 'production') {
        defineReactive$$1(vm, key, result[key], function () {
          warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject(inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]; // #6574 in case the inject object is observed...

      if (key === '__ob__') {
        continue;
      }

      var provideKey = inject[key].from;
      var source = vm;

      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break;
        }

        source = source.$parent;
      }

      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;
        } else if ("production" !== 'production') {
          warn("Injection \"" + key + "\" not found", vm);
        }
      }
    }

    return result;
  }
}
/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */


function resolveSlots(children, context) {
  if (!children || !children.length) {
    return {};
  }

  var slots = {};

  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data; // remove slot attribute if the node is resolved as a Vue slot node

    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    } // named slots should only be respected if the vnode was rendered in the
    // same context.


    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {
      var name = data.slot;
      var slot = slots[name] || (slots[name] = []);

      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  } // ignore slots that contains only whitespace


  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }

  return slots;
}

function isWhitespace(node) {
  return node.isComment && !node.asyncFactory || node.text === ' ';
}
/*  */


function normalizeScopedSlots(slots, normalSlots, prevSlots) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;

  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized;
  } else if (isStable && prevSlots && prevSlots !== emptyObject && key === prevSlots.$key && !hasNormalSlots && !prevSlots.$hasNormal) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots;
  } else {
    res = {};

    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  } // expose normal slots on scopedSlots


  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  } // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error


  if (slots && Object.isExtensible(slots)) {
    slots._normalized = res;
  }

  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res;
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res) ? [res] // single vnode
    : normalizeChildren(res);
    return res && (res.length === 0 || res.length === 1 && res[0].isComment // #9658
    ) ? undefined : res;
  }; // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.


  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }

  return normalized;
}

function proxyNormalSlot(slots, key) {
  return function () {
    return slots[key];
  };
}
/*  */

/**
 * Runtime helper for rendering v-for lists.
 */


function renderList(val, render) {
  var ret, i, l, keys, key;

  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);

    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);

    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();

      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);

      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }

  if (!isDef(ret)) {
    ret = [];
  }

  ret._isVList = true;
  return ret;
}
/*  */

/**
 * Runtime helper for rendering <slot>
 */


function renderSlot(name, fallback, props, bindObject) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;

  if (scopedSlotFn) {
    // scoped slot
    props = props || {};

    if (bindObject) {
      if ("production" !== 'production' && !isObject(bindObject)) {
        warn('slot v-bind without argument expects an Object', this);
      }

      props = extend(extend({}, bindObject), props);
    }

    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;

  if (target) {
    return this.$createElement('template', {
      slot: target
    }, nodes);
  } else {
    return nodes;
  }
}
/*  */

/**
 * Runtime helper for resolving filters
 */


function resolveFilter(id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity;
}
/*  */


function isKeyNotMatch(expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1;
  } else {
    return expect !== actual;
  }
}
/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */


function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;

  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName);
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode);
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key;
  }
}
/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */


function bindObjectProps(data, tag, value, asProp, isSync) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }

      var hash;

      var loop = function (key) {
        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
        }

        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);

        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});

            on["update:" + key] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop(key);
    }
  }

  return data;
}
/*  */

/**
 * Runtime helper for rendering static trees.
 */


function renderStatic(index, isInFor) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index]; // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.

  if (tree && !isInFor) {
    return tree;
  } // otherwise, render a fresh tree.


  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates
  );
  markStatic(tree, "__static__" + index, false);
  return tree;
}
/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */


function markOnce(tree, index, key) {
  markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
  return tree;
}

function markStatic(tree, key, isOnce) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], key + "_" + i, isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode(node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}
/*  */


function bindObjectListeners(data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "production" !== 'production' && warn('v-on without argument expects an Object value', this);
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};

      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }

  return data;
}
/*  */


function resolveScopedSlots(fns, // see flow/vnode
res, // the following are added in 2.6
hasDynamicKeys, contentHashKey) {
  res = res || {
    $stable: !hasDynamicKeys
  };

  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];

    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }

      res[slot.key] = slot.fn;
    }
  }

  if (contentHashKey) {
    res.$key = contentHashKey;
  }

  return res;
}
/*  */


function bindDynamicKeys(baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];

    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ("production" !== 'production' && key !== '' && key !== null) {
      // null is a speical value for explicitly removing a binding
      warn("Invalid value for dynamic directive argument (expected string or null): " + key, this);
    }
  }

  return baseObj;
} // helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.


function prependModifier(value, symbol) {
  return typeof value === 'string' ? symbol + value : value;
}
/*  */


function installRenderHelpers(target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}
/*  */


function FunctionalRenderContext(data, props, children, parent, Ctor) {
  var this$1 = this;
  var options = Ctor.options; // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check

  var contextVm;

  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent); // $flow-disable-line

    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent; // $flow-disable-line

    parent = parent._original;
  }

  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;
  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);

  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(data.scopedSlots, this$1.$slots = resolveSlots(children, parent));
    }

    return this$1.$slots;
  };

  Object.defineProperty(this, 'scopedSlots', {
    enumerable: true,
    get: function get() {
      return normalizeScopedSlots(data.scopedSlots, this.slots());
    }
  }); // support for compiled functional template

  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options; // pre-resolve slots for renderSlot()

    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);

      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }

      return vnode;
    };
  } else {
    this._c = function (a, b, c, d) {
      return createElement(contextVm, a, b, c, d, needNormalization);
    };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;

  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) {
      mergeProps(props, data.attrs);
    }

    if (isDef(data.props)) {
      mergeProps(props, data.props);
    }
  }

  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);
  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext);
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);

    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }

    return res;
  }
}

function cloneAndMarkFunctionalResult(vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;

  if ("production" !== 'production') {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }

  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }

  return clone;
}

function mergeProps(to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}
/*  */

/*  */

/*  */

/*  */
// inline hooks to be invoked on component VNodes during patch


var componentVNodeHooks = {
  init: function init(vnode, hydrating) {
    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow

      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance);
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },
  prepatch: function prepatch(oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(child, options.propsData, // updated props
    options.listeners, // updated listeners
    vnode, // new parent vnode
    options.children // new children
    );
  },
  insert: function insert(vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }

    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  },
  destroy: function destroy(vnode) {
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  }
};
var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent(Ctor, data, context, children, tag) {
  if (isUndef(Ctor)) {
    return;
  }

  var baseCtor = context.$options._base; // plain options object: turn it into a constructor

  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  } // if at this stage it's not a constructor or an async component factory,
  // reject.


  if (typeof Ctor !== 'function') {
    if ("production" !== 'production') {
      warn("Invalid Component definition: " + String(Ctor), context);
    }

    return;
  } // async component


  var asyncFactory;

  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);

    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
    }
  }

  data = data || {}; // resolve constructor options in case global mixins are applied after
  // component constructor creation

  resolveConstructorOptions(Ctor); // transform component v-model data into props & events

  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  } // extract props


  var propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component

  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children);
  } // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners


  var listeners = data.on; // replace with listeners with .native modifier
  // so it gets processed during parent component patch.

  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot
    // work around flow
    var slot = data.slot;
    data = {};

    if (slot) {
      data.slot = slot;
    }
  } // install component management hooks onto the placeholder node


  installComponentHooks(data); // return a placeholder vnode

  var name = Ctor.options.name || tag;
  var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, {
    Ctor: Ctor,
    propsData: propsData,
    listeners: listeners,
    tag: tag,
    children: children
  }, asyncFactory);
  return vnode;
}

function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  }; // check inline-template render functions

  var inlineTemplate = vnode.data.inlineTemplate;

  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }

  return new vnode.componentOptions.Ctor(options);
}

function installComponentHooks(data) {
  var hooks = data.hook || (data.hook = {});

  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];

    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1(f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };

  merged._merged = true;
  return merged;
} // transform component v-model info (value and callback) into
// prop and event handler respectively.


function transformModel(options, data) {
  var prop = options.model && options.model.prop || 'value';
  var event = options.model && options.model.event || 'input';
  (data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;

  if (isDef(existing)) {
    if (Array.isArray(existing) ? existing.indexOf(callback) === -1 : existing !== callback) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}
/*  */


var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface
// without getting yelled at by flow

function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }

  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }

  return _createElement(context, tag, data, children, normalizationType);
}

function _createElement(context, tag, data, children, normalizationType) {
  if (isDef(data) && isDef(data.__ob__)) {
    "production" !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
    return createEmptyVNode();
  } // object syntax in v-bind


  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }

  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode();
  } // warn against non-primitive key


  if ("production" !== 'production' && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
    {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    }
  } // support single function children as default scoped slot


  if (Array.isArray(children) && typeof children[0] === 'function') {
    data = data || {};
    data.scopedSlots = {
      default: children[0]
    };
    children.length = 0;
  }

  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }

  var vnode, ns;

  if (typeof tag === 'string') {
    var Ctor;
    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);

    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(tag, data, children, undefined, undefined, context);
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }

  if (Array.isArray(vnode)) {
    return vnode;
  } else if (isDef(vnode)) {
    if (isDef(ns)) {
      applyNS(vnode, ns);
    }

    if (isDef(data)) {
      registerDeepBindings(data);
    }

    return vnode;
  } else {
    return createEmptyVNode();
  }
}

function applyNS(vnode, ns, force) {
  vnode.ns = ns;

  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }

  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];

      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {
        applyNS(child, ns, force);
      }
    }
  }
} // ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes


function registerDeepBindings(data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }

  if (isObject(data.class)) {
    traverse(data.class);
  }
}
/*  */


function initRender(vm) {
  vm._vnode = null; // the root of the child tree

  vm._staticTrees = null; // v-once cached trees

  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree

  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates

  vm._c = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, false);
  }; // normalization is always applied for the public version, used in
  // user-written render functions.


  vm.$createElement = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, true);
  }; // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated


  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */

  if ("production" !== 'production') {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

var currentRenderingInstance = null;

function renderMixin(Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this);
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(_parentVnode.data.scopedSlots, vm.$slots, vm.$scopedSlots);
    } // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.


    vm.$vnode = _parentVnode; // render self

    var vnode;

    try {
      // There's no need to maintain a stack becaues all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render"); // return error render result,
      // or previous vnode to prevent render error causing blank component

      /* istanbul ignore else */

      if ("production" !== 'production' && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    } // if the returned array contains only a single node, allow it


    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    } // return empty vnode in case the render function errored out


    if (!(vnode instanceof VNode)) {
      if ("production" !== 'production' && Array.isArray(vnode)) {
        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
      }

      vnode = createEmptyVNode();
    } // set parent


    vnode.parent = _parentVnode;
    return vnode;
  };
}
/*  */


function ensureCtor(comp, base) {
  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {
    comp = comp.default;
  }

  return isObject(comp) ? base.extend(comp) : comp;
}

function createAsyncPlaceholder(factory, data, context, children, tag) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = {
    data: data,
    context: context,
    children: children,
    tag: tag
  };
  return node;
}

function resolveAsyncComponent(factory, baseCtor) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp;
  }

  if (isDef(factory.resolved)) {
    return factory.resolved;
  }

  var owner = currentRenderingInstance;

  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp;
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null;
    owner.$on('hook:destroyed', function () {
      return remove(owners, owner);
    });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        owners[i].$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;

        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }

        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)

      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });
    var reject = once(function (reason) {
      "production" !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));

      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });
    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);

          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;

              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;

            if (isUndef(factory.resolved)) {
              reject("production" !== 'production' ? "timeout (" + res.timeout + "ms)" : null);
            }
          }, res.timeout);
        }
      }
    }

    sync = false; // return in case resolved synchronously

    return factory.loading ? factory.loadingComp : factory.resolved;
  }
}
/*  */


function isAsyncPlaceholder(node) {
  return node.isComment && node.asyncFactory;
}
/*  */


function getFirstComponentChild(children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];

      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c;
      }
    }
  }
}
/*  */

/*  */


function initEvents(vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false; // init parent attached events

  var listeners = vm.$options._parentListeners;

  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add(event, fn) {
  target.$on(event, fn);
}

function remove$1(event, fn) {
  target.$off(event, fn);
}

function createOnceHandler(event, fn) {
  var _target = target;
  return function onceHandler() {
    var res = fn.apply(null, arguments);

    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  };
}

function updateComponentListeners(vm, listeners, oldListeners) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin(Vue) {
  var hookRE = /^hook:/;

  Vue.prototype.$on = function (event, fn) {
    var vm = this;

    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup

      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }

    return vm;
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;

    function on() {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }

    on.fn = fn;
    vm.$on(event, on);
    return vm;
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this; // all

    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm;
    } // array of events


    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }

      return vm;
    } // specific event


    var cbs = vm._events[event];

    if (!cbs) {
      return vm;
    }

    if (!fn) {
      vm._events[event] = null;
      return vm;
    } // specific handler


    var cb;
    var i = cbs.length;

    while (i--) {
      cb = cbs[i];

      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break;
      }
    }

    return vm;
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;

    if ("production" !== 'production') {
      var lowerCaseEvent = event.toLowerCase();

      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
      }
    }

    var cbs = vm._events[event];

    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";

      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }

    return vm;
  };
}
/*  */


var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  };
}

function initLifecycle(vm) {
  var options = vm.$options; // locate first non-abstract parent

  var parent = options.parent;

  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }

    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;
  vm.$children = [];
  vm.$refs = {};
  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin(Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.

    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false
      /* removeOnly */
      );
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }

    restoreActiveInstance(); // update __vue__ reference

    if (prevEl) {
      prevEl.__vue__ = null;
    }

    if (vm.$el) {
      vm.$el.__vue__ = vm;
    } // if parent is an HOC, update its $el as well


    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    } // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.

  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;

    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;

    if (vm._isBeingDestroyed) {
      return;
    }

    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true; // remove self from parent

    var parent = vm.$parent;

    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    } // teardown watchers


    if (vm._watcher) {
      vm._watcher.teardown();
    }

    var i = vm._watchers.length;

    while (i--) {
      vm._watchers[i].teardown();
    } // remove reference from data ob
    // frozen object may not have observer.


    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    } // call the last hook...


    vm._isDestroyed = true; // invoke destroy hooks on current rendered tree

    vm.__patch__(vm._vnode, null); // fire destroyed hook


    callHook(vm, 'destroyed'); // turn off all instance listeners.

    vm.$off(); // remove __vue__ reference

    if (vm.$el) {
      vm.$el.__vue__ = null;
    } // release circular reference (#6759)


    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent(vm, el, hydrating) {
  vm.$el = el;

  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;

    if ("production" !== 'production') {
      /* istanbul ignore if */
      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
      } else {
        warn('Failed to mount component: template or render function not defined.', vm);
      }
    }
  }

  callHook(vm, 'beforeMount');
  var updateComponent;
  /* istanbul ignore if */

  if ("production" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;
      mark(startTag);

      var vnode = vm._render();

      mark(endTag);
      measure("vue " + name + " render", startTag, endTag);
      mark(startTag);

      vm._update(vnode, hydrating);

      mark(endTag);
      measure("vue " + name + " patch", startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  } // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined


  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true
  /* isRenderWatcher */
  );
  hydrating = false; // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook

  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }

  return vm;
}

function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
  if ("production" !== 'production') {
    isUpdatingChildComponent = true;
  } // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.
  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.


  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(newScopedSlots && !newScopedSlots.$stable || oldScopedSlots !== emptyObject && !oldScopedSlots.$stable || newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key); // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.

  var needsForceUpdate = !!(renderChildren || // has new static slots
  vm.$options._renderChildren || // has old static slots
  hasDynamicScopedSlot);
  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) {
    // update child tree's parent
    vm._vnode.parent = parentVnode;
  }

  vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render

  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject; // update props

  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];

    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?

      props[key] = validateProp(key, propOptions, propsData, vm);
    }

    toggleObserving(true); // keep a copy of raw propsData

    vm.$options.propsData = propsData;
  } // update listeners


  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners); // resolve slots + force update if has children

  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if ("production" !== 'production') {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree(vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) {
      return true;
    }
  }

  return false;
}

function activateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = false;

    if (isInInactiveTree(vm)) {
      return;
    }
  } else if (vm._directInactive) {
    return;
  }

  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;

    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'activated');
  }
}

function deactivateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = true;

    if (isInInactiveTree(vm)) {
      return;
    }
  }

  if (!vm._inactive) {
    vm._inactive = true;

    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'deactivated');
  }
}

function callHook(vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";

  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }

  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }

  popTarget();
}
/*  */


var MAX_UPDATE_COUNT = 100;
var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;
/**
 * Reset the scheduler's state.
 */

function resetSchedulerState() {
  index = queue.length = activatedChildren.length = 0;
  has = {};

  if ("production" !== 'production') {
    circular = {};
  }

  waiting = flushing = false;
} // Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.


var currentFlushTimestamp = 0; // Async edge case fix requires storing an event listener's attach timestamp.

var getNow = Date.now; // Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)

if (inBrowser && !isIE) {
  var performance = window.performance;

  if (performance && typeof performance.now === 'function' && getNow() > document.createEvent('Event').timeStamp) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () {
      return performance.now();
    };
  }
}
/**
 * Flush both queues and run the watchers.
 */


function flushSchedulerQueue() {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id; // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.

  queue.sort(function (a, b) {
    return a.id - b.id;
  }); // do not cache length because more watchers might be pushed
  // as we run existing watchers

  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];

    if (watcher.before) {
      watcher.before();
    }

    id = watcher.id;
    has[id] = null;
    watcher.run(); // in dev build, check and stop circular updates.

    if ("production" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;

      if (circular[id] > MAX_UPDATE_COUNT) {
        warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
        break;
      }
    }
  } // keep copies of post queues before resetting state


  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();
  resetSchedulerState(); // call component updated and activated hooks

  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue); // devtool hook

  /* istanbul ignore if */

  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks(queue) {
  var i = queue.length;

  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;

    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}
/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */


function queueActivatedComponent(vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks(queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true
    /* true */
    );
  }
}
/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */


function queueWatcher(watcher) {
  var id = watcher.id;

  if (has[id] == null) {
    has[id] = true;

    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;

      while (i > index && queue[i].id > watcher.id) {
        i--;
      }

      queue.splice(i + 1, 0, watcher);
    } // queue the flush


    if (!waiting) {
      waiting = true;

      if ("production" !== 'production' && !config.async) {
        flushSchedulerQueue();
        return;
      }

      nextTick(flushSchedulerQueue);
    }
  }
}
/*  */


var uid$2 = 0;
/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */

var Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {
  this.vm = vm;

  if (isRenderWatcher) {
    vm._watcher = this;
  }

  vm._watchers.push(this); // options


  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }

  this.cb = cb;
  this.id = ++uid$2; // uid for batching

  this.active = true;
  this.dirty = this.lazy; // for lazy watchers

  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression = "production" !== 'production' ? expOrFn.toString() : ''; // parse expression for getter

  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);

    if (!this.getter) {
      this.getter = noop;
      "production" !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
    }
  }

  this.value = this.lazy ? undefined : this.get();
};
/**
 * Evaluate the getter, and re-collect dependencies.
 */


Watcher.prototype.get = function get() {
  pushTarget(this);
  var value;
  var vm = this.vm;

  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
    } else {
      throw e;
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }

    popTarget();
    this.cleanupDeps();
  }

  return value;
};
/**
 * Add a dependency to this directive.
 */


Watcher.prototype.addDep = function addDep(dep) {
  var id = dep.id;

  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);

    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};
/**
 * Clean up for dependency collection.
 */


Watcher.prototype.cleanupDeps = function cleanupDeps() {
  var i = this.deps.length;

  while (i--) {
    var dep = this.deps[i];

    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }

  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};
/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */


Watcher.prototype.update = function update() {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};
/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */


Watcher.prototype.run = function run() {
  if (this.active) {
    var value = this.get();

    if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
    // when the value is the same, because the value may
    // have mutated.
    isObject(value) || this.deep) {
      // set new value
      var oldValue = this.value;
      this.value = value;

      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};
/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */


Watcher.prototype.evaluate = function evaluate() {
  this.value = this.get();
  this.dirty = false;
};
/**
 * Depend on all deps collected by this watcher.
 */


Watcher.prototype.depend = function depend() {
  var i = this.deps.length;

  while (i--) {
    this.deps[i].depend();
  }
};
/**
 * Remove self from all dependencies' subscriber list.
 */


Watcher.prototype.teardown = function teardown() {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }

    var i = this.deps.length;

    while (i--) {
      this.deps[i].removeSub(this);
    }

    this.active = false;
  }
};
/*  */


var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };

  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState(vm) {
  vm._watchers = [];
  var opts = vm.$options;

  if (opts.props) {
    initProps(vm, opts.props);
  }

  if (opts.methods) {
    initMethods(vm, opts.methods);
  }

  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true
    /* asRootData */
    );
  }

  if (opts.computed) {
    initComputed(vm, opts.computed);
  }

  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps(vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.

  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent; // root instance props should be converted

  if (!isRoot) {
    toggleObserving(false);
  }

  var loop = function (key) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */

    if ("production" !== 'production') {
      var hyphenatedKey = hyphenate(key);

      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {
        warn("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop.", vm);
      }

      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    } // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.


    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop(key);

  toggleObserving(true);
}

function initData(vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};

  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
  } // proxy data on instance


  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;

  while (i--) {
    var key = keys[i];

    if ("production" !== 'production') {
      if (methods && hasOwn(methods, key)) {
        warn("Method \"" + key + "\" has already been defined as a data property.", vm);
      }
    }

    if (props && hasOwn(props, key)) {
      "production" !== 'production' && warn("The data property \"" + key + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  } // observe data


  observe(data, true
  /* asRootData */
  );
}

function getData(data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();

  try {
    return data.call(vm, vm);
  } catch (e) {
    handleError(e, vm, "data()");
    return {};
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = {
  lazy: true
};

function initComputed(vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR

  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;

    if ("production" !== 'production' && getter == null) {
      warn("Getter is missing for computed property \"" + key + "\".", vm);
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
    } // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.


    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if ("production" !== 'production') {
      if (key in vm.$data) {
        warn("The computed property \"" + key + "\" is already defined in data.", vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
      }
    }
  }
}

function defineComputed(target, key, userDef) {
  var shouldCache = !isServerRendering();

  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : createGetterInvoker(userDef.get) : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }

  if ("production" !== 'production' && sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn("Computed property \"" + key + "\" was assigned to but it has no setter.", this);
    };
  }

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter(key) {
  return function computedGetter() {
    var watcher = this._computedWatchers && this._computedWatchers[key];

    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }

      if (Dep.target) {
        watcher.depend();
      }

      return watcher.value;
    }
  };
}

function createGetterInvoker(fn) {
  return function computedGetter() {
    return fn.call(this, this);
  };
}

function initMethods(vm, methods) {
  var props = vm.$options.props;

  for (var key in methods) {
    if ("production" !== 'production') {
      if (typeof methods[key] !== 'function') {
        warn("Method \"" + key + "\" has type \"" + typeof methods[key] + "\" in the component definition. " + "Did you reference the function correctly?", vm);
      }

      if (props && hasOwn(props, key)) {
        warn("Method \"" + key + "\" has already been defined as a prop.", vm);
      }

      if (key in vm && isReserved(key)) {
        warn("Method \"" + key + "\" conflicts with an existing Vue instance method. " + "Avoid defining component methods that start with _ or $.");
      }
    }

    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch(vm, watch) {
  for (var key in watch) {
    var handler = watch[key];

    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher(vm, expOrFn, handler, options) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }

  if (typeof handler === 'string') {
    handler = vm[handler];
  }

  return vm.$watch(expOrFn, handler, options);
}

function stateMixin(Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};

  dataDef.get = function () {
    return this._data;
  };

  var propsDef = {};

  propsDef.get = function () {
    return this._props;
  };

  if ("production" !== 'production') {
    dataDef.set = function () {
      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
    };

    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }

  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);
  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (expOrFn, cb, options) {
    var vm = this;

    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options);
    }

    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);

    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, "callback for immediate watcher \"" + watcher.expression + "\"");
      }
    }

    return function unwatchFn() {
      watcher.teardown();
    };
  };
}
/*  */


var uid$3 = 0;

function initMixin(Vue) {
  Vue.prototype._init = function (options) {
    var vm = this; // a uid

    vm._uid = uid$3++;
    var startTag, endTag;
    /* istanbul ignore if */

    if ("production" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + vm._uid;
      endTag = "vue-perf-end:" + vm._uid;
      mark(startTag);
    } // a flag to avoid this being observed


    vm._isVue = true; // merge options

    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
    }
    /* istanbul ignore else */


    if ("production" !== 'production') {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    } // expose real self


    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props

    initState(vm);
    initProvide(vm); // resolve provide after data/props

    callHook(vm, 'created');
    /* istanbul ignore if */

    if ("production" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure("vue " + vm._name + " init", startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent(vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.

  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions(Ctor) {
  var options = Ctor.options;

  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;

    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)

      var modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options

      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }

      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);

      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }

  return options;
}

function resolveModifiedOptions(Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;

  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) {
        modified = {};
      }

      modified[key] = latest[key];
    }
  }

  return modified;
}

function Vue(options) {
  if ("production" !== 'production' && !(this instanceof Vue)) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }

  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);
/*  */

function initUse(Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);

    if (installedPlugins.indexOf(plugin) > -1) {
      return this;
    } // additional parameters


    var args = toArray(arguments, 1);
    args.unshift(this);

    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }

    installedPlugins.push(plugin);
    return this;
  };
}
/*  */


function initMixin$1(Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this;
  };
}
/*  */


function initExtend(Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;
  /**
   * Class inheritance
   */

  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});

    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId];
    }

    var name = extendOptions.name || Super.options.name;

    if ("production" !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent(options) {
      this._init(options);
    };

    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(Super.options, extendOptions);
    Sub['super'] = Super; // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.

    if (Sub.options.props) {
      initProps$1(Sub);
    }

    if (Sub.options.computed) {
      initComputed$1(Sub);
    } // allow further extension/mixin/plugin usage


    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use; // create asset registers, so extended classes
    // can have their private assets too.

    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    }); // enable recursive self-lookup

    if (name) {
      Sub.options.components[name] = Sub;
    } // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.


    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options); // cache constructor

    cachedCtors[SuperId] = Sub;
    return Sub;
  };
}

function initProps$1(Comp) {
  var props = Comp.options.props;

  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1(Comp) {
  var computed = Comp.options.computed;

  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}
/*  */


function initAssetRegisters(Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (id, definition) {
      if (!definition) {
        return this.options[type + 's'][id];
      } else {
        /* istanbul ignore if */
        if ("production" !== 'production' && type === 'component') {
          validateComponentName(id);
        }

        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }

        if (type === 'directive' && typeof definition === 'function') {
          definition = {
            bind: definition,
            update: definition
          };
        }

        this.options[type + 's'][id] = definition;
        return definition;
      }
    };
  });
}
/*  */


function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function matches(pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1;
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1;
  } else if (isRegExp(pattern)) {
    return pattern.test(name);
  }
  /* istanbul ignore next */


  return false;
}

function pruneCache(keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;

  for (var key in cache) {
    var cachedNode = cache[key];

    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);

      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry(cache, key, keys, current) {
  var cached$$1 = cache[key];

  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }

  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];
var KeepAlive = {
  name: 'keep-alive',
  abstract: true,
  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },
  created: function created() {
    this.cache = Object.create(null);
    this.keys = [];
  },
  destroyed: function destroyed() {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },
  mounted: function mounted() {
    var this$1 = this;
    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) {
        return matches(val, name);
      });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) {
        return !matches(val, name);
      });
    });
  },
  render: function render() {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;

    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;

      if ( // not included
      include && (!name || !matches(include, name)) || // excluded
      exclude && name && matches(exclude, name)) {
        return vnode;
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null // same constructor may get registered as different local components
      // so cid alone is not enough (#3269)
      ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;

      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance; // make current key freshest

        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key); // prune oldest entry

        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }

    return vnode || slot && slot[0];
  }
};
var builtInComponents = {
  KeepAlive: KeepAlive
};
/*  */

function initGlobalAPI(Vue) {
  // config
  var configDef = {};

  configDef.get = function () {
    return config;
  };

  if ("production" !== 'production') {
    configDef.set = function () {
      warn('Do not replace the Vue.config object, set individual fields instead.');
    };
  }

  Object.defineProperty(Vue, 'config', configDef); // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.

  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };
  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick; // 2.6 explicit observable API

  Vue.observable = function (obj) {
    observe(obj);
    return obj;
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  }); // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.

  Vue.options._base = Vue;
  extend(Vue.options.components, builtInComponents);
  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);
Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});
Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get() {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext;
  }
}); // expose FunctionalRenderContext for ssr runtime helper installation

Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});
Vue.version = '2.6.10';
/*  */
// these are reserved for web because they are directly compiled away
// during template compilation

var isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding

var acceptValue = makeMap('input,textarea,option,select,progress');

var mustUseProp = function (tag, type, attr) {
  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false' ? 'false' // allow arbitrary string value for contenteditable
  : key === 'contenteditable' && isValidContentEditableValue(value) ? value : 'true';
};

var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');
var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : '';
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false;
};
/*  */


function genClassForVnode(vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;

  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;

    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }

  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }

  return renderClass(data.staticClass, data.class);
}

function mergeClassData(child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class) ? [child.class, parent.class] : parent.class
  };
}

function renderClass(staticClass, dynamicClass) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass));
  }
  /* istanbul ignore next */


  return '';
}

function concat(a, b) {
  return a ? b ? a + ' ' + b : a : b || '';
}

function stringifyClass(value) {
  if (Array.isArray(value)) {
    return stringifyArray(value);
  }

  if (isObject(value)) {
    return stringifyObject(value);
  }

  if (typeof value === 'string') {
    return value;
  }
  /* istanbul ignore next */


  return '';
}

function stringifyArray(value) {
  var res = '';
  var stringified;

  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) {
        res += ' ';
      }

      res += stringified;
    }
  }

  return res;
}

function stringifyObject(value) {
  var res = '';

  for (var key in value) {
    if (value[key]) {
      if (res) {
        res += ' ';
      }

      res += key;
    }
  }

  return res;
}
/*  */


var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};
var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may
// contain child elements.

var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag);
};

function getTagNamespace(tag) {
  if (isSVG(tag)) {
    return 'svg';
  } // basic support for MathML
  // note it doesn't support other MathML elements being component roots


  if (tag === 'math') {
    return 'math';
  }
}

var unknownElementCache = Object.create(null);

function isUnknownElement(tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true;
  }

  if (isReservedTag(tag)) {
    return false;
  }

  tag = tag.toLowerCase();
  /* istanbul ignore if */

  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag];
  }

  var el = document.createElement(tag);

  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
  } else {
    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');
/*  */

/**
 * Query an element selector if it's not an element already.
 */

function query(el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);

    if (!selected) {
      "production" !== 'production' && warn('Cannot find element: ' + el);
      return document.createElement('div');
    }

    return selected;
  } else {
    return el;
  }
}
/*  */


function createElement$1(tagName, vnode) {
  var elm = document.createElement(tagName);

  if (tagName !== 'select') {
    return elm;
  } // false or null will remove the attribute but undefined will not


  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }

  return elm;
}

function createElementNS(namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName);
}

function createTextNode(text) {
  return document.createTextNode(text);
}

function createComment(text) {
  return document.createComment(text);
}

function insertBefore(parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild(node, child) {
  node.removeChild(child);
}

function appendChild(node, child) {
  node.appendChild(child);
}

function parentNode(node) {
  return node.parentNode;
}

function nextSibling(node) {
  return node.nextSibling;
}

function tagName(node) {
  return node.tagName;
}

function setTextContent(node, text) {
  node.textContent = text;
}

function setStyleScope(node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps =
/*#__PURE__*/
Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});
/*  */

var ref = {
  create: function create(_, vnode) {
    registerRef(vnode);
  },
  update: function update(oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy(vnode) {
    registerRef(vnode, true);
  }
};

function registerRef(vnode, isRemoval) {
  var key = vnode.data.ref;

  if (!isDef(key)) {
    return;
  }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;

  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}
/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */


var emptyNode = new VNode('', {}, []);
var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode(a, b) {
  return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
}

function sameInputType(a, b) {
  if (a.tag !== 'input') {
    return true;
  }

  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);
}

function createKeyToOldIdx(children, beginIdx, endIdx) {
  var i, key;
  var map = {};

  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;

    if (isDef(key)) {
      map[key] = i;
    }
  }

  return map;
}

function createPatchFunction(backend) {
  var i, j;
  var cbs = {};
  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];

    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt(elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
  }

  function createRmCb(childElm, listeners) {
    function remove$$1() {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }

    remove$$1.listeners = listeners;
    return remove$$1;
  }

  function removeNode(el) {
    var parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text

    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1(vnode, inVPre) {
    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {
      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;
    })) && config.isUnknownElement(vnode.tag);
  }

  var creatingElmInVPre = 0;

  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check

    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return;
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;

    if (isDef(tag)) {
      if ("production" !== 'production') {
        if (data && data.pre) {
          creatingElmInVPre++;
        }

        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
        }
      }

      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
      setScope(vnode);
      /* istanbul ignore if */

      {
        createChildren(vnode, children, insertedVnodeQueue);

        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }

        insert(parentElm, vnode.elm, refElm);
      }

      if ("production" !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;

    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;

      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false
        /* hydrating */
        );
      } // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.


      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);

        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }

        return true;
      }
    }
  }

  function initComponent(vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }

    vnode.elm = vnode.componentInstance.$el;

    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode); // make sure to invoke the insert hook

      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i; // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.

    var innerNode = vnode;

    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;

      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }

        insertedVnodeQueue.push(innerNode);
        break;
      }
    } // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself


    insert(parentElm, vnode.elm, refElm);
  }

  function insert(parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren(vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if ("production" !== 'production') {
        checkDuplicateKeys(children);
      }

      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable(vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }

    return isDef(vnode.tag);
  }

  function invokeCreateHooks(vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }

    i = vnode.data.hook; // Reuse variable

    if (isDef(i)) {
      if (isDef(i.create)) {
        i.create(emptyNode, vnode);
      }

      if (isDef(i.insert)) {
        insertedVnodeQueue.push(vnode);
      }
    }
  } // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.


  function setScope(vnode) {
    var i;

    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;

      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }

        ancestor = ancestor.parent;
      }
    } // for slot content they should also get the scopeId from the host instance.


    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook(vnode) {
    var i, j;
    var data = vnode.data;

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) {
        i(vnode);
      }

      for (i = 0; i < cbs.destroy.length; ++i) {
        cbs.destroy[i](vnode);
      }
    }

    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];

      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else {
          // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook(vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;

      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      } // recursively invoke hooks on child component root node


      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }

      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }

      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions

    var canMove = !removeOnly;

    if ("production" !== 'production') {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) {
        // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) {
        // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) {
          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
        }

        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);

        if (isUndef(idxInOld)) {
          // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];

          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }

        newStartVnode = newCh[++newStartIdx];
      }
    }

    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys(children) {
    var seenKeys = {};

    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;

      if (isDef(key)) {
        if (seenKeys[key]) {
          warn("Duplicate keys detected: '" + key + "'. This may cause an update error.", vnode.context);
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld(node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];

      if (isDef(c) && sameVnode(node, c)) {
        return i;
      }
    }
  }

  function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {
    if (oldVnode === vnode) {
      return;
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }

      return;
    } // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.


    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
      vnode.componentInstance = oldVnode.componentInstance;
      return;
    }

    var i;
    var data = vnode.data;

    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;

    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) {
        cbs.update[i](oldVnode, vnode);
      }

      if (isDef(i = data.hook) && isDef(i = i.update)) {
        i(oldVnode, vnode);
      }
    }

    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) {
          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
        }
      } else if (isDef(ch)) {
        if ("production" !== 'production') {
          checkDuplicateKeys(ch);
        }

        if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }

        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
        i(oldVnode, vnode);
      }
    }
  }

  function invokeInsertHook(vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false; // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).

  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.

  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || data && data.pre;
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true;
    } // assert node match


    if ("production" !== 'production') {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false;
      }
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) {
        i(vnode, true
        /* hydrating */
        );
      }

      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true;
      }
    }

    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ("production" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }

              return false;
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;

            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break;
              }

              childNode = childNode.nextSibling;
            } // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.


            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ("production" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }

              return false;
            }
          }
        }
      }

      if (isDef(data)) {
        var fullInvoke = false;

        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break;
          }
        }

        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }

    return true;
  }

  function assertNodeMatch(node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3);
    }
  }

  return function patch(oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) {
        invokeDestroyHook(oldVnode);
      }

      return;
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);

      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }

          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode;
            } else if ("production" !== 'production') {
              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
            }
          } // either not server-rendered, or hydration failed.
          // create an empty node and replace it


          oldVnode = emptyNodeAt(oldVnode);
        } // replacing existing element


        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm); // create new node

        createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
        // leaving transition. Only happens when combining transition +
        // keep-alive + HOCs. (#4590)
        oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively

        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);

          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }

            ancestor.elm = vnode.elm;

            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              } // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.


              var insert = ancestor.data.hook.insert;

              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }

            ancestor = ancestor.parent;
          }
        } // destroy old node


        if (isDef(parentElm)) {
          removeVnodes(parentElm, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm;
  };
}
/*  */


var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives(vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives(oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update(oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
  var dirsWithInsert = [];
  var dirsWithPostpatch = [];
  var key, oldDir, dir;

  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];

    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);

      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);

      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };

    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1(dirs, vm) {
  var res = Object.create(null);

  if (!dirs) {
    // $flow-disable-line
    return res;
  }

  var i, dir;

  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];

    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }

    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  } // $flow-disable-line


  return res;
}

function getRawDirName(dir) {
  return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
}

function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];

  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
    }
  }
}

var baseModules = [ref, directives];
/*  */

function updateAttrs(oldVnode, vnode) {
  var opts = vnode.componentOptions;

  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return;
  }

  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return;
  }

  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];

    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  } // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max

  /* istanbul ignore if */


  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }

  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr(el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr(el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.

    /* istanbul ignore if */
    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && value !== '' && !el.__ieph) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };

      el.addEventListener('input', blocker); // $flow-disable-line

      el.__ieph = true;
      /* IE placeholder patched */
    }

    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};
/*  */

function updateClass(oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
    return;
  }

  var cls = genClassForVnode(vnode); // handle transition classes

  var transitionClass = el._transitionClasses;

  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  } // set the class


  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};
/*  */

/*  */

/*  */

/*  */
// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.

var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';
/*  */
// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.

function normalizeEvents(on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  } // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4

  /* istanbul ignore if */


  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1(event, handler, capture) {
  var _target = target$1; // save current target element in closure

  return function onceHandler() {
    var res = handler.apply(null, arguments);

    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  };
} // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.


var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1(name, handler, capture, passive) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;

    handler = original._wrapper = function (e) {
      if ( // no bubbling, should always fire.
      // this is just a safety net in case event.timeStamp is unreliable in
      // certain weird environments...
      e.target === e.currentTarget || // event is fired after handler attachment
      e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations
      // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
      // #9681 QtWebEngine event.timeStamp is negative value
      e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page
      // electron/nw.js app, since event.timeStamp will be using a different
      // starting reference
      e.target.ownerDocument !== document) {
        return original.apply(this, arguments);
      }
    };
  }

  target$1.addEventListener(name, handler, supportsPassive ? {
    capture: capture,
    passive: passive
  } : capture);
}

function remove$2(name, handler, capture, _target) {
  (_target || target$1).removeEventListener(name, handler._wrapper || handler, capture);
}

function updateDOMListeners(oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return;
  }

  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};
/*  */

var svgContainer;

function updateDOMProps(oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return;
  }

  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key]; // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)

    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) {
        vnode.children.length = 0;
      }

      if (cur === oldProps[key]) {
        continue;
      } // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property


      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur; // avoid resetting cursor position when value is the same

      var strCur = isUndef(cur) ? '' : String(cur);

      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;

      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }

      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if ( // skip the update if old and new VDOM state is the same.
    // `value` is handled separately because the DOM value may be temporarily
    // out of sync with VDOM state due to focus, composition and modifiers.
    // This  #4521 by skipping the unnecesarry `checked` update.
    cur !== oldProps[key]) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
} // check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue(elm, checkVal) {
  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));
}

function isNotInFocusAndDirty(elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true; // #6157
  // work around IE bug when accessing document.activeElement in an iframe

  try {
    notInFocus = document.activeElement !== elm;
  } catch (e) {}

  return notInFocus && elm.value !== checkVal;
}

function isDirtyWithModifiers(elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime

  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }

    if (modifiers.trim) {
      return value.trim() !== newVal.trim();
    }
  }

  return value !== newVal;
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};
/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res;
}); // merge static and dynamic style data on the same vnode

function normalizeStyleData(data) {
  var style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it

  return data.staticStyle ? extend(data.staticStyle, style) : style;
} // normalize possible array / string values into Object


function normalizeStyleBinding(bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle);
  }

  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle);
  }

  return bindingStyle;
}
/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */


function getStyle(vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;

    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;

      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if (styleData = normalizeStyleData(vnode.data)) {
    extend(res, styleData);
  }

  var parentNode = vnode;

  while (parentNode = parentNode.parent) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }

  return res;
}
/*  */


var cssVarRE = /^--/;
var importantRE = /\s*!important$/;

var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);

    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];
var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);

  if (prop !== 'filter' && prop in emptyStyle) {
    return prop;
  }

  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);

  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;

    if (name in emptyStyle) {
      return name;
    }
  }
});

function updateStyle(oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
    return;
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData

  var oldStyle = oldStaticStyle || oldStyleBinding;
  var style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.

  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;
  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }

  for (name in newStyle) {
    cur = newStyle[name];

    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};
/*  */

var whitespaceRE = /\s+/;
/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */

function addClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.add(c);
      });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";

    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}
/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */


function removeClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.remove(c);
      });
    } else {
      el.classList.remove(cls);
    }

    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';

    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }

    cur = cur.trim();

    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}
/*  */


function resolveTransition(def$$1) {
  if (!def$$1) {
    return;
  }
  /* istanbul ignore else */


  if (typeof def$$1 === 'object') {
    var res = {};

    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }

    extend(res, def$$1);
    return res;
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1);
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: name + "-enter",
    enterToClass: name + "-enter-to",
    enterActiveClass: name + "-enter-active",
    leaveClass: name + "-leave",
    leaveToClass: name + "-leave-to",
    leaveActiveClass: name + "-leave-active"
  };
});
var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation'; // Transition property/event sniffing

var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';

if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }

  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
} // binding to window is necessary to make hot reload work in IE in strict mode


var raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :
/* istanbul ignore next */
function (fn) {
  return fn();
};

function nextFrame(fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass(el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);

  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass(el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }

  removeClass(el, cls);
}

function whenTransitionEnds(el, expectedType, cb) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;

  if (!type) {
    return cb();
  }

  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;

  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };

  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };

  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo(el, expectedType) {
  var styles = window.getComputedStyle(el); // JSDOM may return undefined for transition properties

  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);
  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */

  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }

  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  };
}

function getTimeout(delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i]);
  }));
} // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors


function toMs(s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}
/*  */


function enter(vnode, toggleDisplay) {
  var el = vnode.elm; // call leave callback now

  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;

    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data)) {
    return;
  }
  /* istanbul ignore if */


  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration; // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.

  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;

  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return;
  }

  var startClass = isAppear && appearClass ? appearClass : enterClass;
  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;
  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;
  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

  if ("production" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);
  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }

      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }

    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];

      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
        pendingNode.elm._leaveCb();
      }

      enterHook && enterHook(el, cb);
    });
  } // start enter transition


  beforeEnterHook && beforeEnterHook(el);

  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);

      if (!cb.cancelled) {
        addTransitionClass(el, toClass);

        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave(vnode, rm) {
  var el = vnode.elm; // call enter callback now

  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;

    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data) || el.nodeType !== 1) {
    return rm();
  }
  /* istanbul ignore if */


  if (isDef(el._leaveCb)) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;
  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);
  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

  if ("production" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }

    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }

      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }

    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave() {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return;
    } // record leaving element


    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
    }

    beforeLeave && beforeLeave(el);

    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);

        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);

          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }

    leave && leave(el, cb);

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
} // only used in dev mode


function checkDuration(val, name, vnode) {
  if (typeof val !== 'number') {
    warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
  } else if (isNaN(val)) {
    warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
  }
}

function isValidDuration(val) {
  return typeof val === 'number' && !isNaN(val);
}
/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */


function getHookArgumentsLength(fn) {
  if (isUndef(fn)) {
    return false;
  }

  var invokerFns = fn.fns;

  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
  } else {
    return (fn._length || fn.length) > 1;
  }
}

function _enter(_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1(vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};
var platformModules = [attrs, klass, events, domProps, style, transition];
/*  */
// the directive module should be applied last, after all
// built-in modules have been applied.

var modules = platformModules.concat(baseModules);
var patch = createPatchFunction({
  nodeOps: nodeOps,
  modules: modules
});
/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */

if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;

    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted(el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }

      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;

      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.

        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */

        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated(el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.

      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);

      if (curOptions.some(function (o, i) {
        return !looseEqual(o, prevOptions[i]);
      })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple ? binding.value.some(function (v) {
          return hasNoMatchingOption(v, curOptions);
        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);

        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected(el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */

  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected(el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;

  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
    return;
  }

  var selected, option;

  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];

    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;

      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }

        return;
      }
    }
  }

  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption(value, options) {
  return options.every(function (o) {
    return !looseEqual(o, value);
  });
}

function getValue(option) {
  return '_value' in option ? option._value : option.value;
}

function onCompositionStart(e) {
  e.target.composing = true;
}

function onCompositionEnd(e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) {
    return;
  }

  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger(el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}
/*  */
// recursively search for possible transition defined inside the component root


function locateNode(vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
}

var show = {
  bind: function bind(el, ref, vnode) {
    var value = ref.value;
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;

    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },
  update: function update(el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;
    /* istanbul ignore if */

    if (!value === !oldValue) {
      return;
    }

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;

    if (transition$$1) {
      vnode.data.show = true;

      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },
  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};
var platformDirectives = {
  model: directive,
  show: show
};
/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
}; // in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered

function getRealChild(vnode) {
  var compOptions = vnode && vnode.componentOptions;

  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children));
  } else {
    return vnode;
  }
}

function extractTransitionData(comp) {
  var data = {};
  var options = comp.$options; // props

  for (var key in options.propsData) {
    data[key] = comp[key];
  } // events.
  // extract listeners and pass them directly to the transition methods


  var listeners = options._parentListeners;

  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }

  return data;
}

function placeholder(h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    });
  }
}

function hasParentTransition(vnode) {
  while (vnode = vnode.parent) {
    if (vnode.data.transition) {
      return true;
    }
  }
}

function isSameChild(child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag;
}

var isNotTextNode = function (c) {
  return c.tag || isAsyncPlaceholder(c);
};

var isVShowDirective = function (d) {
  return d.name === 'show';
};

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,
  render: function render(h) {
    var this$1 = this;
    var children = this.$slots.default;

    if (!children) {
      return;
    } // filter out text nodes (possible whitespaces)


    children = children.filter(isNotTextNode);
    /* istanbul ignore if */

    if (!children.length) {
      return;
    } // warn multiple elements


    if ("production" !== 'production' && children.length > 1) {
      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
    }

    var mode = this.mode; // warn invalid mode

    if ("production" !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {
      warn('invalid <transition> mode: ' + mode, this.$parent);
    }

    var rawChild = children[0]; // if this is a component root node and the component's
    // parent container node also has transition, skip.

    if (hasParentTransition(this.$vnode)) {
      return rawChild;
    } // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive


    var child = getRealChild(rawChild);
    /* istanbul ignore if */

    if (!child) {
      return rawChild;
    }

    if (this._leaving) {
      return placeholder(h, rawChild);
    } // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.


    var id = "__transition-" + this._uid + "-";
    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;
    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild); // mark v-show
    // so that the transition module can hand over the control to the directive

    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data); // handle transition mode

      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild);
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild;
        }

        var delayedLeave;

        var performLeave = function () {
          delayedLeave();
        };

        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) {
          delayedLeave = leave;
        });
      }
    }

    return rawChild;
  }
};
/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);
delete props.mode;
var TransitionGroup = {
  props: props,
  beforeMount: function beforeMount() {
    var this$1 = this;
    var update = this._update;

    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1); // force removing pass

      this$1.__patch__(this$1._vnode, this$1.kept, false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
      );

      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },
  render: function render(h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];

      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c;
          (c.data || (c.data = {})).transition = transitionData;
        } else if ("production" !== 'production') {
          var opts = c.componentOptions;
          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
          warn("<transition-group> children must be keyed: <" + name + ">");
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];

      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();

        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }

      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children);
  },
  updated: function updated() {
    var children = this.prevChildren;
    var moveClass = this.moveClass || (this.name || 'v') + '-move';

    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return;
    } // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.


    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation); // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line

    this._reflow = document.body.offsetHeight;
    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
          if (e && e.target !== el) {
            return;
          }

          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },
  methods: {
    hasMove: function hasMove(el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false;
      }
      /* istanbul ignore if */


      if (this._hasMove) {
        return this._hasMove;
      } // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.


      var clone = el.cloneNode();

      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) {
          removeClass(clone, cls);
        });
      }

      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return this._hasMove = info.hasTransform;
    }
  }
};

function callPendingCbs(c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */


  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition(c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation(c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;

  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};
/*  */
// install platform specific utils

Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components

extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents); // install platform patch function

Vue.prototype.__patch__ = inBrowser ? patch : noop; // public mount method

Vue.prototype.$mount = function (el, hydrating) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating);
}; // devtools global hook

/* istanbul ignore next */


if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if ("production" !== 'production' && "production" !== 'test') {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }

    if ("production" !== 'production' && "production" !== 'test' && config.productionTip !== false && typeof console !== 'undefined') {
      console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
    }
  }, 0);
}
/*  */


var _default = Vue;
exports.default = _default;
},{}],"KA2S":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

},{}],"8m4e":[function(require,module,exports) {
module.exports = require("regenerator-runtime");

},{"regenerator-runtime":"KA2S"}],"2fws":[function(require,module,exports) {
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;
},{}],"IKrb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d = require("d3");

//
//
//
//
var _default = {
  name: 'DummyRegion',
  props: {
    d: _d.GeoPath
  }
};
exports.default = _default;
        var $99ea80 = exports.default || module.exports;
      
      if (typeof $99ea80 === 'function') {
        $99ea80 = $99ea80.options;
      }
    
        /* template */
        Object.assign($99ea80, (function () {
          var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('path',{staticClass:"region",attrs:{"d":_vm.d}})}
var staticRenderFns = []

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-99ea80",
            functional: undefined
          };
        })());
      
},{"d3":"BG5c"}],"e7Sb":[function(require,module,exports) {
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;
},{}],"nyVk":[function(require,module,exports) {
function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;
},{}],"yJnk":[function(require,module,exports) {
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;
},{}],"xw6J":[function(require,module,exports) {
var arrayWithHoles = require("./arrayWithHoles");

var iterableToArrayLimit = require("./iterableToArrayLimit");

var nonIterableRest = require("./nonIterableRest");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;
},{"./arrayWithHoles":"e7Sb","./iterableToArrayLimit":"nyVk","./nonIterableRest":"yJnk"}],"g5I+":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"n6wC":[function(require,module,exports) {
var define;
var process = require("process");
var global = arguments[3];
//! AlaSQL v0.5.1 | © 2014-2018 Andrey Gershun & Mathias Rangel Wulff | License: MIT
"use strict";

!function (e, t) {
  "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? module.exports = t() : e.alasql = t();
}(this, function () {
  var gi = function (e, t, r, n) {
    if (t = t || [], "function" != typeof importScripts && gi.webworker) {
      var a = gi.lastid++;
      return gi.buffer[a] = r, void gi.webworker.postMessage({
        id: a,
        sql: e,
        params: t
      });
    }

    return 0 === arguments.length ? new D.Select({
      columns: [new D.Column({
        columnid: "*"
      })],
      from: [new D.ParamValue({
        param: 0
      })]
    }) : 1 === arguments.length && e.constructor === Array ? gi.promise(e) : ("function" == typeof t && (n = r, r = t, t = []), "object" != typeof t && (t = [t]), "string" == typeof e && "#" === e[0] && "object" == typeof document ? e = document.querySelector(e).textContent : "object" == typeof e && e instanceof HTMLElement ? e = e.textContent : "function" == typeof e && (e = e.toString(), e = (/\/\*([\S\s]+)\*\//m.exec(e) || ["", "Function given as SQL. Plese Provide SQL string or have a /* ... */ syle comment with SQL in the function."])[1]), gi.exec(e, t, r, n));
  };

  gi.version = "0.5.1", gi.debug = void 0;

  function W() {
    return null;
  }

  var t = function () {
    function e(e, t, r, n) {
      for (r = r || {}, n = e.length; n--; r[e[n]] = t);

      return r;
    }

    var t = [2, 13],
        r = [1, 104],
        n = [1, 102],
        a = [1, 103],
        s = [1, 6],
        i = [1, 42],
        o = [1, 79],
        u = [1, 76],
        c = [1, 94],
        l = [1, 93],
        h = [1, 69],
        d = [1, 101],
        f = [1, 85],
        p = [1, 64],
        b = [1, 71],
        E = [1, 84],
        g = [1, 66],
        m = [1, 70],
        v = [1, 68],
        S = [1, 61],
        T = [1, 74],
        A = [1, 62],
        y = [1, 67],
        N = [1, 83],
        C = [1, 77],
        R = [1, 86],
        O = [1, 87],
        w = [1, 81],
        I = [1, 82],
        x = [1, 80],
        D = [1, 88],
        k = [1, 89],
        L = [1, 90],
        $ = [1, 91],
        M = [1, 92],
        U = [1, 98],
        _ = [1, 65],
        F = [1, 78],
        P = [1, 72],
        q = [1, 96],
        G = [1, 97],
        V = [1, 63],
        B = [1, 73],
        j = [1, 108],
        H = [1, 107],
        J = [10, 306, 602, 764],
        Y = [10, 306, 310, 602, 764],
        W = [1, 115],
        X = [1, 116],
        K = [1, 117],
        Q = [1, 118],
        z = [1, 119],
        Z = [130, 353, 410],
        ee = [1, 127],
        te = [1, 126],
        re = [1, 134],
        ne = [1, 164],
        ae = [1, 175],
        se = [1, 178],
        ie = [1, 173],
        oe = [1, 181],
        ue = [1, 185],
        ce = [1, 160],
        le = [1, 182],
        he = [1, 169],
        de = [1, 171],
        fe = [1, 174],
        pe = [1, 183],
        be = [1, 166],
        Ee = [1, 193],
        ge = [1, 188],
        me = [1, 189],
        ve = [1, 194],
        Se = [1, 195],
        Te = [1, 196],
        Ae = [1, 197],
        ye = [1, 198],
        Ne = [1, 199],
        Ce = [1, 200],
        Re = [1, 201],
        Oe = [1, 202],
        we = [1, 176],
        Ie = [1, 177],
        xe = [1, 179],
        De = [1, 180],
        ke = [1, 186],
        Le = [1, 192],
        $e = [1, 184],
        Me = [1, 187],
        Ue = [1, 172],
        _e = [1, 170],
        Fe = [1, 191],
        Pe = [1, 203],
        qe = [2, 4, 5],
        Ge = [2, 471],
        Ve = [1, 206],
        Be = [1, 211],
        je = [1, 220],
        He = [1, 216],
        Je = [10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 183, 198, 232, 245, 247, 306, 310, 602, 764],
        Ye = [2, 4, 5, 10, 72, 76, 77, 78, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 183, 185, 187, 198, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 310, 420, 424, 602, 764],
        We = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Xe = [1, 249],
        Ke = [1, 256],
        Qe = [1, 265],
        ze = [1, 270],
        Ze = [1, 269],
        et = [2, 4, 5, 10, 72, 77, 78, 93, 98, 107, 118, 128, 131, 132, 137, 143, 145, 149, 152, 154, 156, 162, 168, 169, 179, 180, 181, 183, 198, 232, 245, 247, 265, 266, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 306, 310, 312, 317, 420, 424, 602, 764],
        tt = [2, 162],
        rt = [1, 281],
        nt = [10, 74, 78, 306, 310, 505, 602, 764],
        at = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 193, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 302, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 344, 356, 368, 369, 370, 373, 374, 386, 389, 396, 400, 401, 402, 403, 404, 405, 406, 408, 409, 417, 418, 420, 424, 426, 433, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 514, 515, 516, 517, 602, 764],
        st = [2, 4, 5, 10, 53, 72, 89, 124, 146, 156, 189, 266, 267, 290, 306, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 517, 602, 764],
        it = [1, 562],
        ot = [1, 564],
        ut = [2, 503],
        ct = [1, 569],
        lt = [1, 580],
        ht = [1, 583],
        dt = [1, 584],
        ft = [10, 78, 89, 132, 137, 146, 189, 296, 306, 310, 470, 602, 764],
        pt = [10, 74, 306, 310, 602, 764],
        bt = [2, 567],
        Et = [1, 602],
        gt = [2, 4, 5, 156],
        mt = [1, 640],
        vt = [1, 612],
        St = [1, 646],
        Tt = [1, 647],
        At = [1, 620],
        yt = [1, 631],
        Nt = [1, 618],
        Ct = [1, 626],
        Rt = [1, 619],
        Ot = [1, 627],
        wt = [1, 629],
        It = [1, 621],
        xt = [1, 622],
        Dt = [1, 641],
        kt = [1, 638],
        Lt = [1, 639],
        $t = [1, 615],
        Mt = [1, 617],
        Ut = [1, 609],
        _t = [1, 610],
        Ft = [1, 611],
        Pt = [1, 613],
        qt = [1, 614],
        Gt = [1, 616],
        Vt = [1, 623],
        Bt = [1, 624],
        jt = [1, 628],
        Ht = [1, 630],
        Jt = [1, 632],
        Yt = [1, 633],
        Wt = [1, 634],
        Xt = [1, 635],
        Kt = [1, 636],
        Qt = [1, 642],
        zt = [1, 643],
        Zt = [1, 644],
        er = [1, 645],
        tr = [2, 287],
        rr = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        nr = [2, 359],
        ar = [1, 668],
        sr = [1, 678],
        ir = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        or = [1, 694],
        ur = [1, 703],
        cr = [1, 702],
        lr = [2, 4, 5, 10, 72, 74, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764],
        hr = [10, 72, 74, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764],
        dr = [2, 202],
        fr = [1, 725],
        pr = [10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 183, 232, 245, 247, 306, 310, 602, 764],
        br = [2, 163],
        Er = [1, 728],
        gr = [2, 4, 5, 112],
        mr = [1, 741],
        vr = [1, 760],
        Sr = [1, 740],
        Tr = [1, 739],
        Ar = [1, 734],
        yr = [1, 735],
        Nr = [1, 737],
        Cr = [1, 738],
        Rr = [1, 742],
        Or = [1, 743],
        wr = [1, 744],
        Ir = [1, 745],
        xr = [1, 746],
        Dr = [1, 747],
        kr = [1, 748],
        Lr = [1, 749],
        $r = [1, 750],
        Mr = [1, 751],
        Ur = [1, 752],
        _r = [1, 753],
        Fr = [1, 754],
        Pr = [1, 755],
        qr = [1, 756],
        Gr = [1, 757],
        Vr = [1, 759],
        Br = [1, 761],
        jr = [1, 762],
        Hr = [1, 763],
        Jr = [1, 764],
        Yr = [1, 765],
        Wr = [1, 766],
        Xr = [1, 767],
        Kr = [1, 770],
        Qr = [1, 771],
        zr = [1, 772],
        Zr = [1, 773],
        en = [1, 774],
        tn = [1, 775],
        rn = [1, 776],
        nn = [1, 777],
        an = [1, 778],
        sn = [1, 779],
        on = [1, 780],
        un = [1, 781],
        cn = [74, 89, 189],
        ln = [10, 74, 78, 154, 187, 230, 297, 306, 310, 343, 356, 368, 369, 373, 374, 602, 764],
        hn = [1, 798],
        dn = [10, 74, 78, 300, 306, 310, 602, 764],
        fn = [1, 799],
        pn = [1, 805],
        bn = [1, 806],
        En = [1, 810],
        gn = [10, 74, 78, 306, 310, 602, 764],
        mn = [2, 4, 5, 77, 131, 132, 137, 143, 145, 149, 152, 154, 156, 179, 180, 181, 265, 266, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 312, 317, 420, 424],
        vn = [10, 72, 78, 93, 98, 107, 118, 128, 162, 168, 169, 183, 198, 232, 245, 247, 306, 310, 602, 764],
        Sn = [2, 4, 5, 10, 72, 77, 78, 93, 98, 107, 118, 128, 131, 132, 137, 143, 145, 149, 152, 154, 156, 162, 164, 168, 169, 179, 180, 181, 183, 185, 187, 195, 198, 232, 245, 247, 265, 266, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 306, 310, 312, 317, 420, 424, 602, 764],
        Tn = [2, 4, 5, 132, 296],
        An = [1, 844],
        yn = [10, 74, 76, 78, 306, 310, 602, 764],
        Nn = [2, 738],
        Cn = [10, 74, 76, 78, 132, 139, 141, 145, 152, 306, 310, 420, 424, 602, 764],
        Rn = [2, 1161],
        On = [10, 74, 76, 78, 139, 141, 145, 152, 306, 310, 420, 424, 602, 764],
        wn = [10, 74, 76, 78, 139, 141, 145, 306, 310, 420, 424, 602, 764],
        In = [10, 74, 78, 139, 141, 306, 310, 602, 764],
        xn = [10, 78, 89, 132, 146, 189, 296, 306, 310, 470, 602, 764],
        Dn = [335, 338, 339],
        kn = [2, 764],
        Ln = [1, 869],
        $n = [1, 870],
        Mn = [1, 871],
        Un = [1, 872],
        _n = [1, 881],
        Fn = [1, 880],
        Pn = [164, 166, 334],
        qn = [2, 444],
        Gn = [1, 936],
        Vn = [2, 4, 5, 77, 131, 156, 290, 291, 292, 293],
        Bn = [1, 951],
        jn = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Hn = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Jn = [2, 375],
        Yn = [1, 958],
        Wn = [306, 308, 310],
        Xn = [74, 300],
        Kn = [74, 300, 426],
        Qn = [1, 965],
        zn = [2, 4, 5, 10, 53, 72, 74, 76, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Zn = [74, 426],
        ea = [1, 978],
        ta = [1, 977],
        ra = [1, 984],
        na = [10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 232, 245, 247, 306, 310, 602, 764],
        aa = [1, 1010],
        sa = [10, 72, 78, 306, 310, 602, 764],
        ia = [1, 1016],
        oa = [1, 1017],
        ua = [1, 1018],
        ca = [2, 4, 5, 10, 72, 74, 76, 77, 78, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 198, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 310, 420, 424, 602, 764],
        la = [1, 1068],
        ha = [1, 1067],
        da = [1, 1081],
        fa = [1, 1080],
        pa = [1, 1088],
        ba = [10, 72, 74, 78, 93, 98, 107, 118, 128, 162, 168, 169, 183, 198, 232, 245, 247, 306, 310, 602, 764],
        Ea = [1, 1119],
        ga = [10, 78, 89, 146, 189, 306, 310, 470, 602, 764],
        ma = [1, 1139],
        va = [1, 1138],
        Sa = [1, 1137],
        Ta = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Aa = [1, 1153],
        ya = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Na = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 315, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Ca = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Ra = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        Oa = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 314, 320, 321, 322, 323, 324, 325, 326, 330, 331, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        wa = [2, 406],
        Ia = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 107, 118, 122, 128, 129, 130, 131, 132, 134, 135, 137, 143, 145, 146, 148, 149, 150, 152, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 314, 330, 331, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        xa = [2, 285],
        Da = [2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764],
        ka = [10, 78, 306, 310, 602, 764],
        La = [1, 1189],
        $a = [10, 77, 78, 143, 145, 152, 181, 302, 306, 310, 420, 424, 602, 764],
        Ma = [10, 74, 78, 306, 308, 310, 464, 602, 764],
        Ua = [1, 1200],
        _a = [10, 72, 78, 118, 128, 162, 168, 169, 232, 245, 247, 306, 310, 602, 764],
        Fa = [10, 72, 74, 78, 93, 98, 118, 128, 162, 168, 169, 183, 198, 232, 245, 247, 306, 310, 602, 764],
        Pa = [2, 4, 5, 72, 76, 77, 78, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 185, 187, 280, 281, 282, 283, 284, 285, 286, 287, 288, 420, 424],
        qa = [2, 4, 5, 72, 74, 76, 77, 78, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 185, 187, 280, 281, 282, 283, 284, 285, 286, 287, 288, 420, 424],
        Ga = [2, 1085],
        Va = [2, 4, 5, 72, 74, 76, 77, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 185, 187, 280, 281, 282, 283, 284, 285, 286, 287, 288, 420, 424],
        Ba = [1, 1252],
        ja = [10, 74, 78, 128, 306, 308, 310, 464, 602, 764],
        Ha = [115, 116, 124],
        Ja = [2, 584],
        Ya = [1, 1280],
        Wa = [76, 139],
        Xa = [2, 724],
        Ka = [1, 1297],
        Qa = [1, 1298],
        za = [2, 4, 5, 10, 53, 72, 76, 89, 124, 146, 156, 189, 230, 266, 267, 290, 306, 310, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 517, 602, 764],
        Za = [2, 330],
        es = [1, 1322],
        ts = [1, 1336],
        rs = [1, 1338],
        ns = [2, 487],
        as = [74, 78],
        ss = [10, 306, 308, 310, 464, 602, 764],
        is = [10, 72, 78, 118, 162, 168, 169, 232, 245, 247, 306, 310, 602, 764],
        os = [1, 1354],
        us = [1, 1358],
        cs = [1, 1359],
        ls = [1, 1361],
        hs = [1, 1362],
        ds = [1, 1363],
        fs = [1, 1364],
        ps = [1, 1365],
        bs = [1, 1366],
        Es = [1, 1367],
        gs = [1, 1368],
        ms = [10, 72, 74, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 245, 247, 306, 310, 602, 764],
        vs = [1, 1393],
        Ss = [10, 72, 78, 118, 162, 168, 169, 245, 247, 306, 310, 602, 764],
        Ts = [10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 245, 247, 306, 310, 602, 764],
        As = [1, 1490],
        ys = [1, 1492],
        Ns = [2, 4, 5, 77, 143, 145, 152, 156, 181, 290, 291, 292, 293, 302, 420, 424],
        Cs = [1, 1506],
        Rs = [10, 72, 74, 78, 162, 168, 169, 245, 247, 306, 310, 602, 764],
        Os = [1, 1524],
        ws = [1, 1526],
        Is = [1, 1527],
        xs = [1, 1523],
        Ds = [1, 1522],
        ks = [1, 1521],
        Ls = [1, 1528],
        $s = [1, 1518],
        Ms = [1, 1519],
        Us = [1, 1520],
        _s = [1, 1545],
        Fs = [2, 4, 5, 10, 53, 72, 89, 124, 146, 156, 189, 266, 267, 290, 306, 310, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 517, 602, 764],
        Ps = [1, 1556],
        qs = [1, 1564],
        Gs = [1, 1563],
        Vs = [10, 72, 78, 162, 168, 169, 245, 247, 306, 310, 602, 764],
        Bs = [10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764],
        js = [2, 4, 5, 10, 72, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764],
        Hs = [1, 1621],
        Js = [1, 1623],
        Ys = [1, 1620],
        Ws = [1, 1622],
        Xs = [187, 193, 368, 369, 370, 373],
        Ks = [2, 515],
        Qs = [1, 1628],
        zs = [1, 1647],
        Zs = [10, 72, 78, 162, 168, 169, 306, 310, 602, 764],
        ei = [1, 1657],
        ti = [1, 1658],
        ri = [1, 1659],
        ni = [1, 1678],
        ai = [4, 10, 243, 306, 310, 343, 356, 602, 764],
        si = [1, 1726],
        ii = [10, 72, 74, 78, 118, 162, 168, 169, 239, 245, 247, 306, 310, 602, 764],
        oi = [2, 4, 5, 77],
        ui = [1, 1820],
        ci = [1, 1832],
        li = [1, 1851],
        hi = [10, 72, 78, 162, 168, 169, 306, 310, 415, 602, 764],
        di = [10, 74, 78, 230, 306, 310, 602, 764],
        fi = {
      trace: function () {},
      yy: {},
      symbols_: {
        error: 2,
        Literal: 3,
        LITERAL: 4,
        BRALITERAL: 5,
        NonReserved: 6,
        LiteralWithSpaces: 7,
        main: 8,
        Statements: 9,
        EOF: 10,
        Statements_group0: 11,
        AStatement: 12,
        ExplainStatement: 13,
        EXPLAIN: 14,
        QUERY: 15,
        PLAN: 16,
        Statement: 17,
        AlterTable: 18,
        AttachDatabase: 19,
        Call: 20,
        CreateDatabase: 21,
        CreateIndex: 22,
        CreateGraph: 23,
        CreateTable: 24,
        CreateView: 25,
        CreateEdge: 26,
        CreateVertex: 27,
        Declare: 28,
        Delete: 29,
        DetachDatabase: 30,
        DropDatabase: 31,
        DropIndex: 32,
        DropTable: 33,
        DropView: 34,
        If: 35,
        Insert: 36,
        Merge: 37,
        Reindex: 38,
        RenameTable: 39,
        Select: 40,
        ShowCreateTable: 41,
        ShowColumns: 42,
        ShowDatabases: 43,
        ShowIndex: 44,
        ShowTables: 45,
        TruncateTable: 46,
        WithSelect: 47,
        CreateTrigger: 48,
        DropTrigger: 49,
        BeginTransaction: 50,
        CommitTransaction: 51,
        RollbackTransaction: 52,
        EndTransaction: 53,
        UseDatabase: 54,
        Update: 55,
        JavaScript: 56,
        Source: 57,
        Assert: 58,
        While: 59,
        Continue: 60,
        Break: 61,
        BeginEnd: 62,
        Print: 63,
        Require: 64,
        SetVariable: 65,
        ExpressionStatement: 66,
        AddRule: 67,
        Query: 68,
        Echo: 69,
        CreateFunction: 70,
        CreateAggregate: 71,
        WITH: 72,
        WithTablesList: 73,
        COMMA: 74,
        WithTable: 75,
        AS: 76,
        LPAR: 77,
        RPAR: 78,
        SelectClause: 79,
        Select_option0: 80,
        IntoClause: 81,
        FromClause: 82,
        Select_option1: 83,
        WhereClause: 84,
        GroupClause: 85,
        OrderClause: 86,
        LimitClause: 87,
        UnionClause: 88,
        SEARCH: 89,
        Select_repetition0: 90,
        Select_option2: 91,
        PivotClause: 92,
        PIVOT: 93,
        Expression: 94,
        FOR: 95,
        PivotClause_option0: 96,
        PivotClause_option1: 97,
        UNPIVOT: 98,
        IN: 99,
        ColumnsList: 100,
        PivotClause_option2: 101,
        PivotClause2: 102,
        AsList: 103,
        AsLiteral: 104,
        AsPart: 105,
        RemoveClause: 106,
        REMOVE: 107,
        RemoveClause_option0: 108,
        RemoveColumnsList: 109,
        RemoveColumn: 110,
        Column: 111,
        LIKE: 112,
        StringValue: 113,
        ArrowDot: 114,
        ARROW: 115,
        DOT: 116,
        SearchSelector: 117,
        ORDER: 118,
        BY: 119,
        OrderExpressionsList: 120,
        SearchSelector_option0: 121,
        DOTDOT: 122,
        CARET: 123,
        EQ: 124,
        SearchSelector_repetition_plus0: 125,
        SearchSelector_repetition_plus1: 126,
        SearchSelector_option1: 127,
        WHERE: 128,
        OF: 129,
        CLASS: 130,
        NUMBER: 131,
        STRING: 132,
        SLASH: 133,
        VERTEX: 134,
        EDGE: 135,
        EXCLAMATION: 136,
        SHARP: 137,
        MODULO: 138,
        GT: 139,
        LT: 140,
        GTGT: 141,
        LTLT: 142,
        DOLLAR: 143,
        Json: 144,
        AT: 145,
        SET: 146,
        SetColumnsList: 147,
        TO: 148,
        VALUE: 149,
        ROW: 150,
        ExprList: 151,
        COLON: 152,
        PlusStar: 153,
        NOT: 154,
        SearchSelector_repetition2: 155,
        IF: 156,
        SearchSelector_repetition3: 157,
        Aggregator: 158,
        SearchSelector_repetition4: 159,
        SearchSelector_group0: 160,
        SearchSelector_repetition5: 161,
        UNION: 162,
        SearchSelectorList: 163,
        ALL: 164,
        SearchSelector_repetition6: 165,
        ANY: 166,
        SearchSelector_repetition7: 167,
        INTERSECT: 168,
        EXCEPT: 169,
        AND: 170,
        OR: 171,
        PATH: 172,
        RETURN: 173,
        ResultColumns: 174,
        REPEAT: 175,
        SearchSelector_repetition8: 176,
        SearchSelectorList_repetition0: 177,
        SearchSelectorList_repetition1: 178,
        PLUS: 179,
        STAR: 180,
        QUESTION: 181,
        SearchFrom: 182,
        FROM: 183,
        SelectModifier: 184,
        DISTINCT: 185,
        TopClause: 186,
        UNIQUE: 187,
        SelectClause_option0: 188,
        SELECT: 189,
        COLUMN: 190,
        MATRIX: 191,
        TEXTSTRING: 192,
        INDEX: 193,
        RECORDSET: 194,
        TOP: 195,
        NumValue: 196,
        TopClause_option0: 197,
        INTO: 198,
        Table: 199,
        FuncValue: 200,
        ParamValue: 201,
        VarValue: 202,
        FromTablesList: 203,
        JoinTablesList: 204,
        ApplyClause: 205,
        CROSS: 206,
        APPLY: 207,
        OUTER: 208,
        FromTable: 209,
        FromTable_option0: 210,
        FromTable_option1: 211,
        INDEXED: 212,
        INSERTED: 213,
        FromString: 214,
        JoinTable: 215,
        JoinMode: 216,
        JoinTableAs: 217,
        OnClause: 218,
        JoinTableAs_option0: 219,
        JoinTableAs_option1: 220,
        JoinModeMode: 221,
        NATURAL: 222,
        JOIN: 223,
        INNER: 224,
        LEFT: 225,
        RIGHT: 226,
        FULL: 227,
        SEMI: 228,
        ANTI: 229,
        ON: 230,
        USING: 231,
        GROUP: 232,
        GroupExpressionsList: 233,
        HavingClause: 234,
        GroupExpression: 235,
        GROUPING: 236,
        ROLLUP: 237,
        CUBE: 238,
        HAVING: 239,
        CORRESPONDING: 240,
        OrderExpression: 241,
        DIRECTION: 242,
        COLLATE: 243,
        NOCASE: 244,
        LIMIT: 245,
        OffsetClause: 246,
        OFFSET: 247,
        LimitClause_option0: 248,
        FETCH: 249,
        LimitClause_option1: 250,
        LimitClause_option2: 251,
        LimitClause_option3: 252,
        ResultColumn: 253,
        Star: 254,
        AggrValue: 255,
        Op: 256,
        LogicValue: 257,
        NullValue: 258,
        ExistsValue: 259,
        CaseValue: 260,
        CastClause: 261,
        ArrayValue: 262,
        NewClause: 263,
        Expression_group0: 264,
        CURRENT_TIMESTAMP: 265,
        JAVASCRIPT: 266,
        CREATE: 267,
        FUNCTION: 268,
        AGGREGATE: 269,
        NEW: 270,
        CAST: 271,
        ColumnType: 272,
        CONVERT: 273,
        PrimitiveValue: 274,
        OverClause: 275,
        OVER: 276,
        OverPartitionClause: 277,
        OverOrderByClause: 278,
        PARTITION: 279,
        SUM: 280,
        COUNT: 281,
        MIN: 282,
        MAX: 283,
        AVG: 284,
        FIRST: 285,
        LAST: 286,
        AGGR: 287,
        ARRAY: 288,
        FuncValue_option0: 289,
        REPLACE: 290,
        DATEADD: 291,
        DATEDIFF: 292,
        INTERVAL: 293,
        TRUE: 294,
        FALSE: 295,
        NSTRING: 296,
        NULL: 297,
        EXISTS: 298,
        ARRAYLBRA: 299,
        RBRA: 300,
        ParamValue_group0: 301,
        BRAQUESTION: 302,
        CASE: 303,
        WhensList: 304,
        ElseClause: 305,
        END: 306,
        When: 307,
        WHEN: 308,
        THEN: 309,
        ELSE: 310,
        REGEXP: 311,
        TILDA: 312,
        GLOB: 313,
        ESCAPE: 314,
        NOT_LIKE: 315,
        BARBAR: 316,
        MINUS: 317,
        AMPERSAND: 318,
        BAR: 319,
        GE: 320,
        LE: 321,
        EQEQ: 322,
        EQEQEQ: 323,
        NE: 324,
        NEEQEQ: 325,
        NEEQEQEQ: 326,
        CondOp: 327,
        AllSome: 328,
        ColFunc: 329,
        BETWEEN: 330,
        NOT_BETWEEN: 331,
        IS: 332,
        DOUBLECOLON: 333,
        SOME: 334,
        UPDATE: 335,
        SetColumn: 336,
        SetColumn_group0: 337,
        DELETE: 338,
        INSERT: 339,
        Into: 340,
        Values: 341,
        ValuesListsList: 342,
        DEFAULT: 343,
        VALUES: 344,
        ValuesList: 345,
        Value: 346,
        DateValue: 347,
        TemporaryClause: 348,
        TableClass: 349,
        IfNotExists: 350,
        CreateTableDefClause: 351,
        CreateTableOptionsClause: 352,
        TABLE: 353,
        CreateTableOptions: 354,
        CreateTableOption: 355,
        IDENTITY: 356,
        TEMP: 357,
        ColumnDefsList: 358,
        ConstraintsList: 359,
        Constraint: 360,
        ConstraintName: 361,
        PrimaryKey: 362,
        ForeignKey: 363,
        UniqueKey: 364,
        IndexKey: 365,
        Check: 366,
        CONSTRAINT: 367,
        CHECK: 368,
        PRIMARY: 369,
        KEY: 370,
        PrimaryKey_option0: 371,
        ColsList: 372,
        FOREIGN: 373,
        REFERENCES: 374,
        ForeignKey_option0: 375,
        OnForeignKeyClause: 376,
        ParColsList: 377,
        OnDeleteClause: 378,
        OnUpdateClause: 379,
        NO: 380,
        ACTION: 381,
        UniqueKey_option0: 382,
        UniqueKey_option1: 383,
        ColumnDef: 384,
        ColumnConstraintsClause: 385,
        ColumnConstraints: 386,
        SingularColumnType: 387,
        NumberMax: 388,
        ENUM: 389,
        MAXNUM: 390,
        ColumnConstraintsList: 391,
        ColumnConstraint: 392,
        ParLiteral: 393,
        ColumnConstraint_option0: 394,
        ColumnConstraint_option1: 395,
        DROP: 396,
        DropTable_group0: 397,
        IfExists: 398,
        TablesList: 399,
        ALTER: 400,
        RENAME: 401,
        ADD: 402,
        MODIFY: 403,
        ATTACH: 404,
        DATABASE: 405,
        DETACH: 406,
        AsClause: 407,
        USE: 408,
        SHOW: 409,
        VIEW: 410,
        CreateView_option0: 411,
        CreateView_option1: 412,
        SubqueryRestriction: 413,
        READ: 414,
        ONLY: 415,
        OPTION: 416,
        SOURCE: 417,
        ASSERT: 418,
        JsonObject: 419,
        ATLBRA: 420,
        JsonArray: 421,
        JsonValue: 422,
        JsonPrimitiveValue: 423,
        LCUR: 424,
        JsonPropertiesList: 425,
        RCUR: 426,
        JsonElementsList: 427,
        JsonProperty: 428,
        OnOff: 429,
        SetPropsList: 430,
        AtDollar: 431,
        SetProp: 432,
        OFF: 433,
        COMMIT: 434,
        TRANSACTION: 435,
        ROLLBACK: 436,
        BEGIN: 437,
        ElseStatement: 438,
        WHILE: 439,
        CONTINUE: 440,
        BREAK: 441,
        PRINT: 442,
        REQUIRE: 443,
        StringValuesList: 444,
        PluginsList: 445,
        Plugin: 446,
        ECHO: 447,
        DECLARE: 448,
        DeclaresList: 449,
        DeclareItem: 450,
        TRUNCATE: 451,
        MERGE: 452,
        MergeInto: 453,
        MergeUsing: 454,
        MergeOn: 455,
        MergeMatchedList: 456,
        OutputClause: 457,
        MergeMatched: 458,
        MergeNotMatched: 459,
        MATCHED: 460,
        MergeMatchedAction: 461,
        MergeNotMatchedAction: 462,
        TARGET: 463,
        OUTPUT: 464,
        CreateVertex_option0: 465,
        CreateVertex_option1: 466,
        CreateVertex_option2: 467,
        CreateVertexSet: 468,
        SharpValue: 469,
        CONTENT: 470,
        CreateEdge_option0: 471,
        GRAPH: 472,
        GraphList: 473,
        GraphVertexEdge: 474,
        GraphElement: 475,
        GraphVertexEdge_option0: 476,
        GraphVertexEdge_option1: 477,
        GraphElementVar: 478,
        GraphVertexEdge_option2: 479,
        GraphVertexEdge_option3: 480,
        GraphVertexEdge_option4: 481,
        GraphVar: 482,
        GraphAsClause: 483,
        GraphAtClause: 484,
        GraphElement2: 485,
        GraphElement2_option0: 486,
        GraphElement2_option1: 487,
        GraphElement2_option2: 488,
        GraphElement2_option3: 489,
        GraphElement_option0: 490,
        GraphElement_option1: 491,
        GraphElement_option2: 492,
        SharpLiteral: 493,
        GraphElement_option3: 494,
        GraphElement_option4: 495,
        GraphElement_option5: 496,
        ColonLiteral: 497,
        DeleteVertex: 498,
        DeleteVertex_option0: 499,
        DeleteEdge: 500,
        DeleteEdge_option0: 501,
        DeleteEdge_option1: 502,
        DeleteEdge_option2: 503,
        Term: 504,
        COLONDASH: 505,
        TermsList: 506,
        QUESTIONDASH: 507,
        CALL: 508,
        TRIGGER: 509,
        BeforeAfter: 510,
        InsertDeleteUpdate: 511,
        CreateTrigger_option0: 512,
        CreateTrigger_option1: 513,
        BEFORE: 514,
        AFTER: 515,
        INSTEAD: 516,
        REINDEX: 517,
        A: 518,
        ABSENT: 519,
        ABSOLUTE: 520,
        ACCORDING: 521,
        ADA: 522,
        ADMIN: 523,
        ALWAYS: 524,
        ASC: 525,
        ASSERTION: 526,
        ASSIGNMENT: 527,
        ATTRIBUTE: 528,
        ATTRIBUTES: 529,
        BASE64: 530,
        BERNOULLI: 531,
        BLOCKED: 532,
        BOM: 533,
        BREADTH: 534,
        C: 535,
        CASCADE: 536,
        CATALOG: 537,
        CATALOG_NAME: 538,
        CHAIN: 539,
        CHARACTERISTICS: 540,
        CHARACTERS: 541,
        CHARACTER_SET_CATALOG: 542,
        CHARACTER_SET_NAME: 543,
        CHARACTER_SET_SCHEMA: 544,
        CLASS_ORIGIN: 545,
        COBOL: 546,
        COLLATION: 547,
        COLLATION_CATALOG: 548,
        COLLATION_NAME: 549,
        COLLATION_SCHEMA: 550,
        COLUMNS: 551,
        COLUMN_NAME: 552,
        COMMAND_FUNCTION: 553,
        COMMAND_FUNCTION_CODE: 554,
        COMMITTED: 555,
        CONDITION_NUMBER: 556,
        CONNECTION: 557,
        CONNECTION_NAME: 558,
        CONSTRAINTS: 559,
        CONSTRAINT_CATALOG: 560,
        CONSTRAINT_NAME: 561,
        CONSTRAINT_SCHEMA: 562,
        CONSTRUCTOR: 563,
        CONTROL: 564,
        CURSOR_NAME: 565,
        DATA: 566,
        DATETIME_INTERVAL_CODE: 567,
        DATETIME_INTERVAL_PRECISION: 568,
        DB: 569,
        DEFAULTS: 570,
        DEFERRABLE: 571,
        DEFERRED: 572,
        DEFINED: 573,
        DEFINER: 574,
        DEGREE: 575,
        DEPTH: 576,
        DERIVED: 577,
        DESC: 578,
        DESCRIPTOR: 579,
        DIAGNOSTICS: 580,
        DISPATCH: 581,
        DOCUMENT: 582,
        DOMAIN: 583,
        DYNAMIC_FUNCTION: 584,
        DYNAMIC_FUNCTION_CODE: 585,
        EMPTY: 586,
        ENCODING: 587,
        ENFORCED: 588,
        EXCLUDE: 589,
        EXCLUDING: 590,
        EXPRESSION: 591,
        FILE: 592,
        FINAL: 593,
        FLAG: 594,
        FOLLOWING: 595,
        FORTRAN: 596,
        FOUND: 597,
        FS: 598,
        G: 599,
        GENERAL: 600,
        GENERATED: 601,
        GO: 602,
        GOTO: 603,
        GRANTED: 604,
        HEX: 605,
        HIERARCHY: 606,
        ID: 607,
        IGNORE: 608,
        IMMEDIATE: 609,
        IMMEDIATELY: 610,
        IMPLEMENTATION: 611,
        INCLUDING: 612,
        INCREMENT: 613,
        INDENT: 614,
        INITIALLY: 615,
        INPUT: 616,
        INSTANCE: 617,
        INSTANTIABLE: 618,
        INTEGRITY: 619,
        INVOKER: 620,
        ISOLATION: 621,
        K: 622,
        KEY_MEMBER: 623,
        KEY_TYPE: 624,
        LENGTH: 625,
        LEVEL: 626,
        LIBRARY: 627,
        LINK: 628,
        LOCATION: 629,
        LOCATOR: 630,
        M: 631,
        MAP: 632,
        MAPPING: 633,
        MAXVALUE: 634,
        MESSAGE_LENGTH: 635,
        MESSAGE_OCTET_LENGTH: 636,
        MESSAGE_TEXT: 637,
        MINVALUE: 638,
        MORE: 639,
        MUMPS: 640,
        NAME: 641,
        NAMES: 642,
        NAMESPACE: 643,
        NESTING: 644,
        NEXT: 645,
        NFC: 646,
        NFD: 647,
        NFKC: 648,
        NFKD: 649,
        NIL: 650,
        NORMALIZED: 651,
        NULLABLE: 652,
        NULLS: 653,
        OBJECT: 654,
        OCTETS: 655,
        OPTIONS: 656,
        ORDERING: 657,
        ORDINALITY: 658,
        OTHERS: 659,
        OVERRIDING: 660,
        P: 661,
        PAD: 662,
        PARAMETER_MODE: 663,
        PARAMETER_NAME: 664,
        PARAMETER_ORDINAL_POSITION: 665,
        PARAMETER_SPECIFIC_CATALOG: 666,
        PARAMETER_SPECIFIC_NAME: 667,
        PARAMETER_SPECIFIC_SCHEMA: 668,
        PARTIAL: 669,
        PASCAL: 670,
        PASSING: 671,
        PASSTHROUGH: 672,
        PERMISSION: 673,
        PLACING: 674,
        PLI: 675,
        PRECEDING: 676,
        PRESERVE: 677,
        PRIOR: 678,
        PRIVILEGES: 679,
        PUBLIC: 680,
        RECOVERY: 681,
        RELATIVE: 682,
        REPEATABLE: 683,
        REQUIRING: 684,
        RESPECT: 685,
        RESTART: 686,
        RESTORE: 687,
        RESTRICT: 688,
        RETURNED_CARDINALITY: 689,
        RETURNED_LENGTH: 690,
        RETURNED_OCTET_LENGTH: 691,
        RETURNED_SQLSTATE: 692,
        RETURNING: 693,
        ROLE: 694,
        ROUTINE: 695,
        ROUTINE_CATALOG: 696,
        ROUTINE_NAME: 697,
        ROUTINE_SCHEMA: 698,
        ROW_COUNT: 699,
        SCALE: 700,
        SCHEMA: 701,
        SCHEMA_NAME: 702,
        SCOPE_CATALOG: 703,
        SCOPE_NAME: 704,
        SCOPE_SCHEMA: 705,
        SECTION: 706,
        SECURITY: 707,
        SELECTIVE: 708,
        SELF: 709,
        SEQUENCE: 710,
        SERIALIZABLE: 711,
        SERVER: 712,
        SERVER_NAME: 713,
        SESSION: 714,
        SETS: 715,
        SIMPLE: 716,
        SIZE: 717,
        SPACE: 718,
        SPECIFIC_NAME: 719,
        STANDALONE: 720,
        STATE: 721,
        STATEMENT: 722,
        STRIP: 723,
        STRUCTURE: 724,
        STYLE: 725,
        SUBCLASS_ORIGIN: 726,
        T: 727,
        TABLE_NAME: 728,
        TEMPORARY: 729,
        TIES: 730,
        TOKEN: 731,
        TOP_LEVEL_COUNT: 732,
        TRANSACTIONS_COMMITTED: 733,
        TRANSACTIONS_ROLLED_BACK: 734,
        TRANSACTION_ACTIVE: 735,
        TRANSFORM: 736,
        TRANSFORMS: 737,
        TRIGGER_CATALOG: 738,
        TRIGGER_NAME: 739,
        TRIGGER_SCHEMA: 740,
        TYPE: 741,
        UNBOUNDED: 742,
        UNCOMMITTED: 743,
        UNDER: 744,
        UNLINK: 745,
        UNNAMED: 746,
        UNTYPED: 747,
        URI: 748,
        USAGE: 749,
        USER_DEFINED_TYPE_CATALOG: 750,
        USER_DEFINED_TYPE_CODE: 751,
        USER_DEFINED_TYPE_NAME: 752,
        USER_DEFINED_TYPE_SCHEMA: 753,
        VALID: 754,
        VERSION: 755,
        WHITESPACE: 756,
        WORK: 757,
        WRAPPER: 758,
        WRITE: 759,
        XMLDECLARATION: 760,
        XMLSCHEMA: 761,
        YES: 762,
        ZONE: 763,
        SEMICOLON: 764,
        PERCENT: 765,
        ROWS: 766,
        FuncValue_option0_group0: 767,
        $accept: 0,
        $end: 1
      },
      terminals_: {
        2: "error",
        4: "LITERAL",
        5: "BRALITERAL",
        10: "EOF",
        14: "EXPLAIN",
        15: "QUERY",
        16: "PLAN",
        53: "EndTransaction",
        72: "WITH",
        74: "COMMA",
        76: "AS",
        77: "LPAR",
        78: "RPAR",
        89: "SEARCH",
        93: "PIVOT",
        95: "FOR",
        98: "UNPIVOT",
        99: "IN",
        107: "REMOVE",
        112: "LIKE",
        115: "ARROW",
        116: "DOT",
        118: "ORDER",
        119: "BY",
        122: "DOTDOT",
        123: "CARET",
        124: "EQ",
        128: "WHERE",
        129: "OF",
        130: "CLASS",
        131: "NUMBER",
        132: "STRING",
        133: "SLASH",
        134: "VERTEX",
        135: "EDGE",
        136: "EXCLAMATION",
        137: "SHARP",
        138: "MODULO",
        139: "GT",
        140: "LT",
        141: "GTGT",
        142: "LTLT",
        143: "DOLLAR",
        145: "AT",
        146: "SET",
        148: "TO",
        149: "VALUE",
        150: "ROW",
        152: "COLON",
        154: "NOT",
        156: "IF",
        162: "UNION",
        164: "ALL",
        166: "ANY",
        168: "INTERSECT",
        169: "EXCEPT",
        170: "AND",
        171: "OR",
        172: "PATH",
        173: "RETURN",
        175: "REPEAT",
        179: "PLUS",
        180: "STAR",
        181: "QUESTION",
        183: "FROM",
        185: "DISTINCT",
        187: "UNIQUE",
        189: "SELECT",
        190: "COLUMN",
        191: "MATRIX",
        192: "TEXTSTRING",
        193: "INDEX",
        194: "RECORDSET",
        195: "TOP",
        198: "INTO",
        206: "CROSS",
        207: "APPLY",
        208: "OUTER",
        212: "INDEXED",
        213: "INSERTED",
        222: "NATURAL",
        223: "JOIN",
        224: "INNER",
        225: "LEFT",
        226: "RIGHT",
        227: "FULL",
        228: "SEMI",
        229: "ANTI",
        230: "ON",
        231: "USING",
        232: "GROUP",
        236: "GROUPING",
        237: "ROLLUP",
        238: "CUBE",
        239: "HAVING",
        240: "CORRESPONDING",
        242: "DIRECTION",
        243: "COLLATE",
        244: "NOCASE",
        245: "LIMIT",
        247: "OFFSET",
        249: "FETCH",
        265: "CURRENT_TIMESTAMP",
        266: "JAVASCRIPT",
        267: "CREATE",
        268: "FUNCTION",
        269: "AGGREGATE",
        270: "NEW",
        271: "CAST",
        273: "CONVERT",
        276: "OVER",
        279: "PARTITION",
        280: "SUM",
        281: "COUNT",
        282: "MIN",
        283: "MAX",
        284: "AVG",
        285: "FIRST",
        286: "LAST",
        287: "AGGR",
        288: "ARRAY",
        290: "REPLACE",
        291: "DATEADD",
        292: "DATEDIFF",
        293: "INTERVAL",
        294: "TRUE",
        295: "FALSE",
        296: "NSTRING",
        297: "NULL",
        298: "EXISTS",
        299: "ARRAYLBRA",
        300: "RBRA",
        302: "BRAQUESTION",
        303: "CASE",
        306: "END",
        308: "WHEN",
        309: "THEN",
        310: "ELSE",
        311: "REGEXP",
        312: "TILDA",
        313: "GLOB",
        314: "ESCAPE",
        315: "NOT_LIKE",
        316: "BARBAR",
        317: "MINUS",
        318: "AMPERSAND",
        319: "BAR",
        320: "GE",
        321: "LE",
        322: "EQEQ",
        323: "EQEQEQ",
        324: "NE",
        325: "NEEQEQ",
        326: "NEEQEQEQ",
        330: "BETWEEN",
        331: "NOT_BETWEEN",
        332: "IS",
        333: "DOUBLECOLON",
        334: "SOME",
        335: "UPDATE",
        338: "DELETE",
        339: "INSERT",
        343: "DEFAULT",
        344: "VALUES",
        347: "DateValue",
        353: "TABLE",
        356: "IDENTITY",
        357: "TEMP",
        367: "CONSTRAINT",
        368: "CHECK",
        369: "PRIMARY",
        370: "KEY",
        373: "FOREIGN",
        374: "REFERENCES",
        380: "NO",
        381: "ACTION",
        386: "ColumnConstraints",
        389: "ENUM",
        390: "MAXNUM",
        396: "DROP",
        400: "ALTER",
        401: "RENAME",
        402: "ADD",
        403: "MODIFY",
        404: "ATTACH",
        405: "DATABASE",
        406: "DETACH",
        408: "USE",
        409: "SHOW",
        410: "VIEW",
        414: "READ",
        415: "ONLY",
        416: "OPTION",
        417: "SOURCE",
        418: "ASSERT",
        420: "ATLBRA",
        424: "LCUR",
        426: "RCUR",
        433: "OFF",
        434: "COMMIT",
        435: "TRANSACTION",
        436: "ROLLBACK",
        437: "BEGIN",
        439: "WHILE",
        440: "CONTINUE",
        441: "BREAK",
        442: "PRINT",
        443: "REQUIRE",
        447: "ECHO",
        448: "DECLARE",
        451: "TRUNCATE",
        452: "MERGE",
        460: "MATCHED",
        463: "TARGET",
        464: "OUTPUT",
        470: "CONTENT",
        472: "GRAPH",
        505: "COLONDASH",
        507: "QUESTIONDASH",
        508: "CALL",
        509: "TRIGGER",
        514: "BEFORE",
        515: "AFTER",
        516: "INSTEAD",
        517: "REINDEX",
        518: "A",
        519: "ABSENT",
        520: "ABSOLUTE",
        521: "ACCORDING",
        522: "ADA",
        523: "ADMIN",
        524: "ALWAYS",
        525: "ASC",
        526: "ASSERTION",
        527: "ASSIGNMENT",
        528: "ATTRIBUTE",
        529: "ATTRIBUTES",
        530: "BASE64",
        531: "BERNOULLI",
        532: "BLOCKED",
        533: "BOM",
        534: "BREADTH",
        535: "C",
        536: "CASCADE",
        537: "CATALOG",
        538: "CATALOG_NAME",
        539: "CHAIN",
        540: "CHARACTERISTICS",
        541: "CHARACTERS",
        542: "CHARACTER_SET_CATALOG",
        543: "CHARACTER_SET_NAME",
        544: "CHARACTER_SET_SCHEMA",
        545: "CLASS_ORIGIN",
        546: "COBOL",
        547: "COLLATION",
        548: "COLLATION_CATALOG",
        549: "COLLATION_NAME",
        550: "COLLATION_SCHEMA",
        551: "COLUMNS",
        552: "COLUMN_NAME",
        553: "COMMAND_FUNCTION",
        554: "COMMAND_FUNCTION_CODE",
        555: "COMMITTED",
        556: "CONDITION_NUMBER",
        557: "CONNECTION",
        558: "CONNECTION_NAME",
        559: "CONSTRAINTS",
        560: "CONSTRAINT_CATALOG",
        561: "CONSTRAINT_NAME",
        562: "CONSTRAINT_SCHEMA",
        563: "CONSTRUCTOR",
        564: "CONTROL",
        565: "CURSOR_NAME",
        566: "DATA",
        567: "DATETIME_INTERVAL_CODE",
        568: "DATETIME_INTERVAL_PRECISION",
        569: "DB",
        570: "DEFAULTS",
        571: "DEFERRABLE",
        572: "DEFERRED",
        573: "DEFINED",
        574: "DEFINER",
        575: "DEGREE",
        576: "DEPTH",
        577: "DERIVED",
        578: "DESC",
        579: "DESCRIPTOR",
        580: "DIAGNOSTICS",
        581: "DISPATCH",
        582: "DOCUMENT",
        583: "DOMAIN",
        584: "DYNAMIC_FUNCTION",
        585: "DYNAMIC_FUNCTION_CODE",
        586: "EMPTY",
        587: "ENCODING",
        588: "ENFORCED",
        589: "EXCLUDE",
        590: "EXCLUDING",
        591: "EXPRESSION",
        592: "FILE",
        593: "FINAL",
        594: "FLAG",
        595: "FOLLOWING",
        596: "FORTRAN",
        597: "FOUND",
        598: "FS",
        599: "G",
        600: "GENERAL",
        601: "GENERATED",
        602: "GO",
        603: "GOTO",
        604: "GRANTED",
        605: "HEX",
        606: "HIERARCHY",
        607: "ID",
        608: "IGNORE",
        609: "IMMEDIATE",
        610: "IMMEDIATELY",
        611: "IMPLEMENTATION",
        612: "INCLUDING",
        613: "INCREMENT",
        614: "INDENT",
        615: "INITIALLY",
        616: "INPUT",
        617: "INSTANCE",
        618: "INSTANTIABLE",
        619: "INTEGRITY",
        620: "INVOKER",
        621: "ISOLATION",
        622: "K",
        623: "KEY_MEMBER",
        624: "KEY_TYPE",
        625: "LENGTH",
        626: "LEVEL",
        627: "LIBRARY",
        628: "LINK",
        629: "LOCATION",
        630: "LOCATOR",
        631: "M",
        632: "MAP",
        633: "MAPPING",
        634: "MAXVALUE",
        635: "MESSAGE_LENGTH",
        636: "MESSAGE_OCTET_LENGTH",
        637: "MESSAGE_TEXT",
        638: "MINVALUE",
        639: "MORE",
        640: "MUMPS",
        641: "NAME",
        642: "NAMES",
        643: "NAMESPACE",
        644: "NESTING",
        645: "NEXT",
        646: "NFC",
        647: "NFD",
        648: "NFKC",
        649: "NFKD",
        650: "NIL",
        651: "NORMALIZED",
        652: "NULLABLE",
        653: "NULLS",
        654: "OBJECT",
        655: "OCTETS",
        656: "OPTIONS",
        657: "ORDERING",
        658: "ORDINALITY",
        659: "OTHERS",
        660: "OVERRIDING",
        661: "P",
        662: "PAD",
        663: "PARAMETER_MODE",
        664: "PARAMETER_NAME",
        665: "PARAMETER_ORDINAL_POSITION",
        666: "PARAMETER_SPECIFIC_CATALOG",
        667: "PARAMETER_SPECIFIC_NAME",
        668: "PARAMETER_SPECIFIC_SCHEMA",
        669: "PARTIAL",
        670: "PASCAL",
        671: "PASSING",
        672: "PASSTHROUGH",
        673: "PERMISSION",
        674: "PLACING",
        675: "PLI",
        676: "PRECEDING",
        677: "PRESERVE",
        678: "PRIOR",
        679: "PRIVILEGES",
        680: "PUBLIC",
        681: "RECOVERY",
        682: "RELATIVE",
        683: "REPEATABLE",
        684: "REQUIRING",
        685: "RESPECT",
        686: "RESTART",
        687: "RESTORE",
        688: "RESTRICT",
        689: "RETURNED_CARDINALITY",
        690: "RETURNED_LENGTH",
        691: "RETURNED_OCTET_LENGTH",
        692: "RETURNED_SQLSTATE",
        693: "RETURNING",
        694: "ROLE",
        695: "ROUTINE",
        696: "ROUTINE_CATALOG",
        697: "ROUTINE_NAME",
        698: "ROUTINE_SCHEMA",
        699: "ROW_COUNT",
        700: "SCALE",
        701: "SCHEMA",
        702: "SCHEMA_NAME",
        703: "SCOPE_CATALOG",
        704: "SCOPE_NAME",
        705: "SCOPE_SCHEMA",
        706: "SECTION",
        707: "SECURITY",
        708: "SELECTIVE",
        709: "SELF",
        710: "SEQUENCE",
        711: "SERIALIZABLE",
        712: "SERVER",
        713: "SERVER_NAME",
        714: "SESSION",
        715: "SETS",
        716: "SIMPLE",
        717: "SIZE",
        718: "SPACE",
        719: "SPECIFIC_NAME",
        720: "STANDALONE",
        721: "STATE",
        722: "STATEMENT",
        723: "STRIP",
        724: "STRUCTURE",
        725: "STYLE",
        726: "SUBCLASS_ORIGIN",
        727: "T",
        728: "TABLE_NAME",
        729: "TEMPORARY",
        730: "TIES",
        731: "TOKEN",
        732: "TOP_LEVEL_COUNT",
        733: "TRANSACTIONS_COMMITTED",
        734: "TRANSACTIONS_ROLLED_BACK",
        735: "TRANSACTION_ACTIVE",
        736: "TRANSFORM",
        737: "TRANSFORMS",
        738: "TRIGGER_CATALOG",
        739: "TRIGGER_NAME",
        740: "TRIGGER_SCHEMA",
        741: "TYPE",
        742: "UNBOUNDED",
        743: "UNCOMMITTED",
        744: "UNDER",
        745: "UNLINK",
        746: "UNNAMED",
        747: "UNTYPED",
        748: "URI",
        749: "USAGE",
        750: "USER_DEFINED_TYPE_CATALOG",
        751: "USER_DEFINED_TYPE_CODE",
        752: "USER_DEFINED_TYPE_NAME",
        753: "USER_DEFINED_TYPE_SCHEMA",
        754: "VALID",
        755: "VERSION",
        756: "WHITESPACE",
        757: "WORK",
        758: "WRAPPER",
        759: "WRITE",
        760: "XMLDECLARATION",
        761: "XMLSCHEMA",
        762: "YES",
        763: "ZONE",
        764: "SEMICOLON",
        765: "PERCENT",
        766: "ROWS"
      },
      productions_: [0, [3, 1], [3, 1], [3, 2], [7, 1], [7, 2], [8, 2], [9, 3], [9, 1], [9, 1], [13, 2], [13, 4], [12, 1], [17, 0], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [17, 1], [47, 3], [73, 3], [73, 1], [75, 5], [40, 10], [40, 4], [92, 8], [92, 11], [102, 4], [104, 2], [104, 1], [103, 3], [103, 1], [105, 1], [105, 3], [106, 3], [109, 3], [109, 1], [110, 1], [110, 2], [114, 1], [114, 1], [117, 1], [117, 5], [117, 5], [117, 1], [117, 2], [117, 1], [117, 2], [117, 2], [117, 3], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 1], [117, 1], [117, 1], [117, 1], [117, 1], [117, 1], [117, 2], [117, 2], [117, 2], [117, 1], [117, 1], [117, 1], [117, 1], [117, 1], [117, 1], [117, 2], [117, 3], [117, 4], [117, 3], [117, 1], [117, 4], [117, 2], [117, 2], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 5], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 4], [117, 6], [163, 3], [163, 1], [153, 1], [153, 1], [153, 1], [182, 2], [79, 4], [79, 4], [79, 4], [79, 3], [184, 1], [184, 2], [184, 2], [184, 2], [184, 2], [184, 2], [184, 2], [184, 2], [186, 3], [186, 4], [186, 0], [81, 0], [81, 2], [81, 2], [81, 2], [81, 2], [81, 2], [82, 2], [82, 3], [82, 5], [82, 0], [205, 6], [205, 7], [205, 6], [205, 7], [203, 1], [203, 3], [209, 4], [209, 5], [209, 3], [209, 3], [209, 2], [209, 3], [209, 1], [209, 3], [209, 2], [209, 3], [209, 1], [209, 1], [209, 2], [209, 3], [209, 1], [209, 1], [209, 2], [209, 3], [209, 1], [209, 2], [209, 3], [214, 1], [199, 3], [199, 1], [204, 2], [204, 2], [204, 1], [204, 1], [215, 3], [217, 1], [217, 2], [217, 3], [217, 3], [217, 2], [217, 3], [217, 4], [217, 5], [217, 1], [217, 2], [217, 3], [217, 1], [217, 2], [217, 3], [216, 1], [216, 2], [221, 1], [221, 2], [221, 2], [221, 3], [221, 2], [221, 3], [221, 2], [221, 3], [221, 2], [221, 2], [221, 2], [218, 2], [218, 2], [218, 0], [84, 0], [84, 2], [85, 0], [85, 4], [233, 1], [233, 3], [235, 5], [235, 4], [235, 4], [235, 1], [234, 0], [234, 2], [88, 0], [88, 2], [88, 3], [88, 2], [88, 2], [88, 3], [88, 4], [88, 3], [88, 3], [86, 0], [86, 3], [120, 1], [120, 3], [241, 1], [241, 2], [241, 3], [241, 4], [87, 0], [87, 3], [87, 8], [246, 0], [246, 2], [174, 3], [174, 1], [253, 3], [253, 2], [253, 3], [253, 2], [253, 3], [253, 2], [253, 1], [254, 5], [254, 3], [254, 1], [111, 5], [111, 3], [111, 3], [111, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 1], [94, 3], [94, 3], [94, 3], [94, 1], [94, 1], [56, 1], [70, 5], [71, 5], [263, 2], [263, 2], [261, 6], [261, 8], [261, 6], [261, 8], [274, 1], [274, 1], [274, 1], [274, 1], [274, 1], [274, 1], [274, 1], [255, 5], [255, 6], [255, 6], [275, 0], [275, 4], [275, 4], [275, 5], [277, 3], [278, 3], [158, 1], [158, 1], [158, 1], [158, 1], [158, 1], [158, 1], [158, 1], [158, 1], [158, 1], [200, 5], [200, 3], [200, 4], [200, 4], [200, 8], [200, 8], [200, 8], [200, 8], [200, 3], [151, 1], [151, 3], [196, 1], [257, 1], [257, 1], [113, 1], [113, 1], [258, 1], [202, 2], [259, 4], [262, 3], [201, 2], [201, 2], [201, 1], [201, 1], [260, 5], [260, 4], [304, 2], [304, 1], [307, 4], [305, 2], [305, 0], [256, 3], [256, 3], [256, 3], [256, 3], [256, 5], [256, 3], [256, 5], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 5], [256, 3], [256, 3], [256, 3], [256, 5], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [256, 6], [256, 6], [256, 3], [256, 3], [256, 2], [256, 2], [256, 2], [256, 2], [256, 2], [256, 3], [256, 5], [256, 6], [256, 5], [256, 6], [256, 4], [256, 5], [256, 3], [256, 4], [256, 3], [256, 4], [256, 3], [256, 3], [256, 3], [256, 3], [256, 3], [329, 1], [329, 1], [329, 4], [327, 1], [327, 1], [327, 1], [327, 1], [327, 1], [327, 1], [328, 1], [328, 1], [328, 1], [55, 6], [55, 4], [147, 1], [147, 3], [336, 3], [336, 4], [29, 5], [29, 3], [36, 5], [36, 4], [36, 7], [36, 6], [36, 5], [36, 4], [36, 5], [36, 8], [36, 7], [36, 4], [36, 6], [36, 7], [341, 1], [341, 1], [340, 0], [340, 1], [342, 3], [342, 1], [342, 1], [342, 5], [342, 3], [342, 3], [345, 1], [345, 3], [346, 1], [346, 1], [346, 1], [346, 1], [346, 1], [346, 1], [100, 1], [100, 3], [24, 9], [24, 5], [349, 1], [349, 1], [352, 0], [352, 1], [354, 2], [354, 1], [355, 1], [355, 3], [355, 3], [355, 3], [348, 0], [348, 1], [350, 0], [350, 3], [351, 3], [351, 1], [351, 2], [359, 1], [359, 3], [360, 2], [360, 2], [360, 2], [360, 2], [360, 2], [361, 0], [361, 2], [366, 4], [362, 6], [363, 9], [377, 3], [376, 0], [376, 2], [378, 4], [379, 4], [364, 6], [365, 5], [365, 5], [372, 1], [372, 1], [372, 3], [372, 3], [358, 1], [358, 3], [384, 3], [384, 2], [384, 1], [387, 6], [387, 4], [387, 1], [387, 4], [272, 2], [272, 1], [388, 1], [388, 1], [385, 0], [385, 1], [391, 2], [391, 1], [393, 3], [392, 2], [392, 5], [392, 3], [392, 6], [392, 1], [392, 2], [392, 4], [392, 2], [392, 1], [392, 2], [392, 1], [392, 1], [392, 3], [392, 5], [33, 4], [399, 3], [399, 1], [398, 0], [398, 2], [18, 6], [18, 6], [18, 6], [18, 8], [18, 6], [39, 5], [19, 4], [19, 7], [19, 6], [19, 9], [30, 3], [21, 4], [21, 6], [21, 9], [21, 6], [407, 0], [407, 2], [54, 3], [54, 2], [31, 4], [31, 5], [31, 5], [22, 8], [22, 9], [32, 3], [43, 2], [43, 4], [43, 3], [43, 5], [45, 2], [45, 4], [45, 4], [45, 6], [42, 4], [42, 6], [44, 4], [44, 6], [41, 4], [41, 6], [25, 11], [25, 8], [413, 3], [413, 3], [413, 5], [34, 4], [66, 2], [57, 2], [58, 2], [58, 2], [58, 4], [144, 4], [144, 2], [144, 2], [144, 2], [144, 2], [144, 1], [144, 2], [144, 2], [422, 1], [422, 1], [423, 1], [423, 1], [423, 1], [423, 1], [423, 1], [423, 1], [423, 1], [423, 3], [419, 3], [419, 4], [419, 2], [421, 2], [421, 3], [421, 1], [425, 3], [425, 1], [428, 3], [428, 3], [428, 3], [427, 3], [427, 1], [65, 4], [65, 3], [65, 4], [65, 5], [65, 5], [65, 6], [431, 1], [431, 1], [430, 3], [430, 2], [432, 1], [432, 1], [432, 3], [429, 1], [429, 1], [51, 2], [52, 2], [50, 2], [35, 4], [35, 3], [438, 2], [59, 3], [60, 1], [61, 1], [62, 3], [63, 2], [63, 2], [64, 2], [64, 2], [446, 1], [446, 1], [69, 2], [444, 3], [444, 1], [445, 3], [445, 1], [28, 2], [449, 1], [449, 3], [450, 3], [450, 4], [450, 5], [450, 6], [46, 3], [37, 6], [453, 1], [453, 2], [454, 2], [455, 2], [456, 2], [456, 2], [456, 1], [456, 1], [458, 4], [458, 6], [461, 1], [461, 3], [459, 5], [459, 7], [459, 7], [459, 9], [459, 7], [459, 9], [462, 3], [462, 6], [462, 3], [462, 6], [457, 0], [457, 2], [457, 5], [457, 4], [457, 7], [27, 6], [469, 2], [468, 0], [468, 2], [468, 2], [468, 1], [26, 8], [23, 3], [23, 4], [473, 3], [473, 1], [474, 3], [474, 7], [474, 6], [474, 3], [474, 4], [478, 1], [478, 1], [482, 2], [483, 3], [484, 2], [485, 4], [475, 4], [475, 3], [475, 2], [475, 1], [497, 2], [493, 2], [493, 2], [498, 4], [500, 6], [67, 3], [67, 2], [506, 3], [506, 1], [504, 1], [504, 4], [68, 2], [20, 2], [48, 9], [48, 8], [48, 9], [510, 0], [510, 1], [510, 1], [510, 1], [510, 2], [511, 1], [511, 1], [511, 1], [49, 3], [38, 2], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [11, 1], [11, 1], [80, 0], [80, 1], [83, 0], [83, 1], [90, 0], [90, 2], [91, 0], [91, 1], [96, 0], [96, 1], [97, 0], [97, 1], [101, 0], [101, 1], [108, 0], [108, 1], [121, 0], [121, 1], [125, 1], [125, 2], [126, 1], [126, 2], [127, 0], [127, 1], [155, 0], [155, 2], [157, 0], [157, 2], [159, 0], [159, 2], [160, 1], [160, 1], [161, 0], [161, 2], [165, 0], [165, 2], [167, 0], [167, 2], [176, 0], [176, 2], [177, 0], [177, 2], [178, 0], [178, 2], [188, 0], [188, 1], [197, 0], [197, 1], [210, 0], [210, 1], [211, 0], [211, 1], [219, 0], [219, 1], [220, 0], [220, 1], [248, 0], [248, 1], [250, 0], [250, 1], [251, 0], [251, 1], [252, 0], [252, 1], [264, 1], [264, 1], [767, 1], [767, 1], [289, 0], [289, 1], [301, 1], [301, 1], [337, 1], [337, 1], [371, 0], [371, 1], [375, 0], [375, 1], [382, 0], [382, 1], [383, 0], [383, 1], [394, 0], [394, 1], [395, 0], [395, 1], [397, 1], [397, 1], [411, 0], [411, 1], [412, 0], [412, 1], [465, 0], [465, 1], [466, 0], [466, 1], [467, 0], [467, 1], [471, 0], [471, 1], [476, 0], [476, 1], [477, 0], [477, 1], [479, 0], [479, 1], [480, 0], [480, 1], [481, 0], [481, 1], [486, 0], [486, 1], [487, 0], [487, 1], [488, 0], [488, 1], [489, 0], [489, 1], [490, 0], [490, 1], [491, 0], [491, 1], [492, 0], [492, 1], [494, 0], [494, 1], [495, 0], [495, 1], [496, 0], [496, 1], [499, 0], [499, 2], [501, 0], [501, 2], [502, 0], [502, 2], [503, 0], [503, 2], [512, 0], [512, 1], [513, 0], [513, 1]],
      performAction: function (e, t, r, n, a, s, i) {
        var o = s.length - 1;

        switch (a) {
          case 1:
            gi.options.casesensitive ? this.$ = s[o] : this.$ = s[o].toLowerCase();
            break;

          case 2:
            this.$ = mi(s[o].substr(1, s[o].length - 2));
            break;

          case 3:
            this.$ = s[o].toLowerCase();
            break;

          case 4:
            this.$ = s[o];
            break;

          case 5:
            this.$ = s[o] ? s[o - 1] + " " + s[o] : s[o - 1];
            break;

          case 6:
            return new n.Statements({
              statements: s[o - 1]
            });

          case 7:
            this.$ = s[o - 2], s[o] && s[o - 2].push(s[o]);
            break;

          case 8:
          case 9:
          case 70:
          case 80:
          case 85:
          case 143:
          case 177:
          case 205:
          case 206:
          case 242:
          case 261:
          case 273:
          case 354:
          case 372:
          case 451:
          case 474:
          case 475:
          case 479:
          case 487:
          case 528:
          case 529:
          case 566:
          case 649:
          case 659:
          case 683:
          case 685:
          case 687:
          case 701:
          case 702:
          case 732:
          case 756:
            this.$ = [s[o]];
            break;

          case 10:
          case 11:
            this.$ = s[o], s[o].explain = !0;
            break;

          case 12:
            this.$ = s[o], n.exists && (this.$.exists = n.exists), delete n.exists, n.queries && (this.$.queries = n.queries), delete n.queries;
            break;

          case 13:
          case 162:
          case 172:
          case 237:
          case 238:
          case 240:
          case 248:
          case 250:
          case 259:
          case 267:
          case 270:
          case 375:
          case 491:
          case 501:
          case 503:
          case 515:
          case 521:
          case 522:
          case 567:
            this.$ = void 0;
            break;

          case 68:
            this.$ = new n.WithSelect({
              withs: s[o - 1],
              select: s[o]
            });
            break;

          case 69:
          case 565:
            s[o - 2].push(s[o]), this.$ = s[o - 2];
            break;

          case 71:
            this.$ = {
              name: s[o - 4],
              select: s[o - 1]
            };
            break;

          case 72:
            n.extend(this.$, s[o - 9]), n.extend(this.$, s[o - 8]), n.extend(this.$, s[o - 7]), n.extend(this.$, s[o - 6]), n.extend(this.$, s[o - 5]), n.extend(this.$, s[o - 4]), n.extend(this.$, s[o - 3]), n.extend(this.$, s[o - 2]), n.extend(this.$, s[o - 1]), n.extend(this.$, s[o]), this.$ = s[o - 9];
            break;

          case 73:
            this.$ = new n.Search({
              selectors: s[o - 2],
              from: s[o]
            }), n.extend(this.$, s[o - 1]);
            break;

          case 74:
            this.$ = {
              pivot: {
                expr: s[o - 5],
                columnid: s[o - 3],
                inlist: s[o - 2],
                as: s[o]
              }
            };
            break;

          case 75:
            this.$ = {
              unpivot: {
                tocolumnid: s[o - 8],
                forcolumnid: s[o - 6],
                inlist: s[o - 3],
                as: s[o]
              }
            };
            break;

          case 76:
          case 520:
          case 549:
          case 585:
          case 619:
          case 636:
          case 637:
          case 640:
          case 662:
            this.$ = s[o - 1];
            break;

          case 77:
          case 78:
          case 86:
          case 147:
          case 185:
          case 247:
          case 280:
          case 288:
          case 289:
          case 290:
          case 291:
          case 292:
          case 293:
          case 294:
          case 295:
          case 296:
          case 297:
          case 298:
          case 299:
          case 300:
          case 301:
          case 304:
          case 305:
          case 320:
          case 321:
          case 322:
          case 323:
          case 324:
          case 325:
          case 374:
          case 440:
          case 441:
          case 442:
          case 443:
          case 444:
          case 445:
          case 516:
          case 542:
          case 546:
          case 548:
          case 623:
          case 624:
          case 625:
          case 626:
          case 627:
          case 628:
          case 632:
          case 634:
          case 635:
          case 644:
          case 660:
          case 661:
          case 723:
          case 738:
          case 739:
          case 741:
          case 742:
          case 748:
          case 749:
            this.$ = s[o];
            break;

          case 79:
          case 84:
          case 731:
          case 755:
            this.$ = s[o - 2], this.$.push(s[o]);
            break;

          case 81:
            this.$ = {
              expr: s[o]
            };
            break;

          case 82:
            this.$ = {
              expr: s[o - 2],
              as: s[o]
            };
            break;

          case 83:
            this.$ = {
              removecolumns: s[o]
            };
            break;

          case 87:
            this.$ = {
              like: s[o]
            };
            break;

          case 90:
          case 104:
            this.$ = {
              srchid: "PROP",
              args: [s[o]]
            };
            break;

          case 91:
            this.$ = {
              srchid: "ORDERBY",
              args: s[o - 1]
            };
            break;

          case 92:
            var u = s[o - 1];
            u = u || "ASC", this.$ = {
              srchid: "ORDERBY",
              args: [{
                expression: new n.Column({
                  columnid: "_"
                }),
                direction: u
              }]
            };
            break;

          case 93:
            this.$ = {
              srchid: "PARENT"
            };
            break;

          case 94:
            this.$ = {
              srchid: "APROP",
              args: [s[o]]
            };
            break;

          case 95:
            this.$ = {
              selid: "ROOT"
            };
            break;

          case 96:
            this.$ = {
              srchid: "EQ",
              args: [s[o]]
            };
            break;

          case 97:
            this.$ = {
              srchid: "LIKE",
              args: [s[o]]
            };
            break;

          case 98:
          case 99:
            this.$ = {
              selid: "WITH",
              args: s[o - 1]
            };
            break;

          case 100:
            this.$ = {
              srchid: s[o - 3].toUpperCase(),
              args: s[o - 1]
            };
            break;

          case 101:
            this.$ = {
              srchid: "WHERE",
              args: [s[o - 1]]
            };
            break;

          case 102:
            this.$ = {
              selid: "OF",
              args: [s[o - 1]]
            };
            break;

          case 103:
            this.$ = {
              srchid: "CLASS",
              args: [s[o - 1]]
            };
            break;

          case 105:
            this.$ = {
              srchid: "NAME",
              args: [s[o].substr(1, s[o].length - 2)]
            };
            break;

          case 106:
            this.$ = {
              srchid: "CHILD"
            };
            break;

          case 107:
            this.$ = {
              srchid: "VERTEX"
            };
            break;

          case 108:
            this.$ = {
              srchid: "EDGE"
            };
            break;

          case 109:
            this.$ = {
              srchid: "REF"
            };
            break;

          case 110:
            this.$ = {
              srchid: "SHARP",
              args: [s[o]]
            };
            break;

          case 111:
            this.$ = {
              srchid: "ATTR",
              args: void 0 === s[o] ? void 0 : [s[o]]
            };
            break;

          case 112:
            this.$ = {
              srchid: "ATTR"
            };
            break;

          case 113:
            this.$ = {
              srchid: "OUT"
            };
            break;

          case 114:
            this.$ = {
              srchid: "IN"
            };
            break;

          case 115:
            this.$ = {
              srchid: "OUTOUT"
            };
            break;

          case 116:
            this.$ = {
              srchid: "ININ"
            };
            break;

          case 117:
            this.$ = {
              srchid: "CONTENT"
            };
            break;

          case 118:
            this.$ = {
              srchid: "EX",
              args: [new n.Json({
                value: s[o]
              })]
            };
            break;

          case 119:
            this.$ = {
              srchid: "AT",
              args: [s[o]]
            };
            break;

          case 120:
            this.$ = {
              srchid: "AS",
              args: [s[o]]
            };
            break;

          case 121:
            this.$ = {
              srchid: "SET",
              args: s[o - 1]
            };
            break;

          case 122:
            this.$ = {
              selid: "TO",
              args: [s[o]]
            };
            break;

          case 123:
            this.$ = {
              srchid: "VALUE"
            };
            break;

          case 124:
            this.$ = {
              srchid: "ROW",
              args: s[o - 1]
            };
            break;

          case 125:
            this.$ = {
              srchid: "CLASS",
              args: [s[o]]
            };
            break;

          case 126:
            this.$ = {
              selid: s[o],
              args: [s[o - 1]]
            };
            break;

          case 127:
            this.$ = {
              selid: "NOT",
              args: s[o - 1]
            };
            break;

          case 128:
            this.$ = {
              selid: "IF",
              args: s[o - 1]
            };
            break;

          case 129:
            this.$ = {
              selid: s[o - 3],
              args: s[o - 1]
            };
            break;

          case 130:
            this.$ = {
              selid: "DISTINCT",
              args: s[o - 1]
            };
            break;

          case 131:
            this.$ = {
              selid: "UNION",
              args: s[o - 1]
            };
            break;

          case 132:
            this.$ = {
              selid: "UNIONALL",
              args: s[o - 1]
            };
            break;

          case 133:
            this.$ = {
              selid: "ALL",
              args: [s[o - 1]]
            };
            break;

          case 134:
            this.$ = {
              selid: "ANY",
              args: [s[o - 1]]
            };
            break;

          case 135:
            this.$ = {
              selid: "INTERSECT",
              args: s[o - 1]
            };
            break;

          case 136:
            this.$ = {
              selid: "EXCEPT",
              args: s[o - 1]
            };
            break;

          case 137:
            this.$ = {
              selid: "AND",
              args: s[o - 1]
            };
            break;

          case 138:
            this.$ = {
              selid: "OR",
              args: s[o - 1]
            };
            break;

          case 139:
            this.$ = {
              selid: "PATH",
              args: [s[o - 1]]
            };
            break;

          case 140:
            this.$ = {
              srchid: "RETURN",
              args: s[o - 1]
            };
            break;

          case 141:
            this.$ = {
              selid: "REPEAT",
              sels: s[o - 3],
              args: s[o - 1]
            };
            break;

          case 142:
            this.$ = s[o - 2], this.$.push(s[o]);
            break;

          case 144:
            this.$ = "PLUS";
            break;

          case 145:
            this.$ = "STAR";
            break;

          case 146:
            this.$ = "QUESTION";
            break;

          case 148:
          case 149:
            this.$ = new n.Select({
              columns: s[o],
              distinct: !0
            }), n.extend(this.$, s[o - 3]), n.extend(this.$, s[o - 1]);
            break;

          case 150:
            this.$ = new n.Select({
              columns: s[o],
              all: !0
            }), n.extend(this.$, s[o - 3]), n.extend(this.$, s[o - 1]);
            break;

          case 151:
            s[o] ? (this.$ = new n.Select({
              columns: s[o]
            }), n.extend(this.$, s[o - 2]), n.extend(this.$, s[o - 1])) : this.$ = new n.Select({
              columns: [new n.Column({
                columnid: "_"
              })],
              modifier: "COLUMN"
            });
            break;

          case 152:
            "SELECT" == s[o] ? this.$ = void 0 : this.$ = {
              modifier: s[o]
            };
            break;

          case 153:
            this.$ = {
              modifier: "VALUE"
            };
            break;

          case 154:
            this.$ = {
              modifier: "ROW"
            };
            break;

          case 155:
            this.$ = {
              modifier: "COLUMN"
            };
            break;

          case 156:
            this.$ = {
              modifier: "MATRIX"
            };
            break;

          case 157:
            this.$ = {
              modifier: "TEXTSTRING"
            };
            break;

          case 158:
            this.$ = {
              modifier: "INDEX"
            };
            break;

          case 159:
            this.$ = {
              modifier: "RECORDSET"
            };
            break;

          case 160:
            this.$ = {
              top: s[o - 1],
              percent: void 0 !== s[o] || void 0
            };
            break;

          case 161:
            this.$ = {
              top: s[o - 1]
            };
            break;

          case 163:
          case 330:
          case 523:
          case 524:
          case 724:
            this.$ = void 0;
            break;

          case 164:
          case 165:
          case 166:
          case 167:
            this.$ = {
              into: s[o]
            };
            break;

          case 168:
            var c = (h = (h = s[o]).substr(1, h.length - 2)).substr(-3).toUpperCase(),
                l = h.substr(-4).toUpperCase();
            "#" == h[0] ? this.$ = {
              into: new n.FuncValue({
                funcid: "HTML",
                args: [new n.StringValue({
                  value: h
                }), new n.Json({
                  value: {
                    headers: !0
                  }
                })]
              })
            } : "XLS" == c || "CSV" == c || "TAB" == c ? this.$ = {
              into: new n.FuncValue({
                funcid: c,
                args: [new n.StringValue({
                  value: h
                }), new n.Json({
                  value: {
                    headers: !0
                  }
                })]
              })
            } : "XLSX" != l && "JSON" != l || (this.$ = {
              into: new n.FuncValue({
                funcid: l,
                args: [new n.StringValue({
                  value: h
                }), new n.Json({
                  value: {
                    headers: !0
                  }
                })]
              })
            });
            break;

          case 169:
            this.$ = {
              from: s[o]
            };
            break;

          case 170:
            this.$ = {
              from: s[o - 1],
              joins: s[o]
            };
            break;

          case 171:
            this.$ = {
              from: s[o - 2],
              joins: s[o - 1]
            };
            break;

          case 173:
            this.$ = new n.Apply({
              select: s[o - 2],
              applymode: "CROSS",
              as: s[o]
            });
            break;

          case 174:
            this.$ = new n.Apply({
              select: s[o - 3],
              applymode: "CROSS",
              as: s[o]
            });
            break;

          case 175:
            this.$ = new n.Apply({
              select: s[o - 2],
              applymode: "OUTER",
              as: s[o]
            });
            break;

          case 176:
            this.$ = new n.Apply({
              select: s[o - 3],
              applymode: "OUTER",
              as: s[o]
            });
            break;

          case 178:
          case 243:
          case 452:
          case 530:
          case 531:
            this.$ = s[o - 2], s[o - 2].push(s[o]);
            break;

          case 179:
            this.$ = s[o - 2], this.$.as = s[o];
            break;

          case 180:
            this.$ = s[o - 3], this.$.as = s[o];
            break;

          case 181:
            this.$ = s[o - 1], this.$.as = "default";
            break;

          case 182:
            this.$ = new n.Json({
              value: s[o - 2]
            }), s[o - 2].as = s[o];
            break;

          case 183:
            this.$ = s[o - 1], s[o - 1].as = s[o];
            break;

          case 184:
            this.$ = s[o - 2], s[o - 2].as = s[o];
            break;

          case 186:
          case 638:
          case 641:
            this.$ = s[o - 2];
            break;

          case 187:
          case 191:
          case 195:
          case 198:
            this.$ = s[o - 1], s[o - 1].as = s[o];
            break;

          case 188:
          case 192:
          case 196:
          case 199:
            this.$ = s[o - 2], s[o - 2].as = s[o];
            break;

          case 189:
          case 190:
          case 194:
          case 197:
            this.$ = s[o], s[o].as = "default";
            break;

          case 193:
            this.$ = {
              inserted: !0
            };
            break;

          case 200:
            var h, d;
            c = (h = (h = s[o]).substr(1, h.length - 2)).substr(-3).toUpperCase(), l = h.substr(-4).toUpperCase();
            if ("#" == h[0]) d = new n.FuncValue({
              funcid: "HTML",
              args: [new n.StringValue({
                value: h
              }), new n.Json({
                value: {
                  headers: !0
                }
              })]
            });else if ("XLS" == c || "CSV" == c || "TAB" == c) d = new n.FuncValue({
              funcid: c,
              args: [new n.StringValue({
                value: h
              }), new n.Json({
                value: {
                  headers: !0
                }
              })]
            });else {
              if ("XLSX" != l && "JSON" != l) throw new Error("Unknown string in FROM clause");
              d = new n.FuncValue({
                funcid: l,
                args: [new n.StringValue({
                  value: h
                }), new n.Json({
                  value: {
                    headers: !0
                  }
                })]
              });
            }
            this.$ = d;
            break;

          case 201:
            "INFORMATION_SCHEMA" == s[o - 2] ? this.$ = new n.FuncValue({
              funcid: s[o - 2],
              args: [new n.StringValue({
                value: s[o]
              })]
            }) : this.$ = new n.Table({
              databaseid: s[o - 2],
              tableid: s[o]
            });
            break;

          case 202:
            this.$ = new n.Table({
              tableid: s[o]
            });
            break;

          case 203:
          case 204:
            this.$ = s[o - 1], s[o - 1].push(s[o]);
            break;

          case 207:
            this.$ = new n.Join(s[o - 2]), n.extend(this.$, s[o - 1]), n.extend(this.$, s[o]);
            break;

          case 208:
            this.$ = {
              table: s[o]
            };
            break;

          case 209:
            this.$ = {
              table: s[o - 1],
              as: s[o]
            };
            break;

          case 210:
            this.$ = {
              table: s[o - 2],
              as: s[o]
            };
            break;

          case 211:
            this.$ = {
              json: new n.Json({
                value: s[o - 2],
                as: s[o]
              })
            };
            break;

          case 212:
            this.$ = {
              param: s[o - 1],
              as: s[o]
            };
            break;

          case 213:
            this.$ = {
              param: s[o - 2],
              as: s[o]
            };
            break;

          case 214:
            this.$ = {
              select: s[o - 2],
              as: s[o]
            };
            break;

          case 215:
            this.$ = {
              select: s[o - 3],
              as: s[o]
            };
            break;

          case 216:
            this.$ = {
              func: s[o],
              as: "default"
            };
            break;

          case 217:
            this.$ = {
              func: s[o - 1],
              as: s[o]
            };
            break;

          case 218:
            this.$ = {
              func: s[o - 2],
              as: s[o]
            };
            break;

          case 219:
            this.$ = {
              variable: s[o],
              as: "default"
            };
            break;

          case 220:
            this.$ = {
              variable: s[o - 1],
              as: s[o]
            };
            break;

          case 221:
            this.$ = {
              variable: s[o - 2],
              as: s[o]
            };
            break;

          case 222:
            this.$ = {
              joinmode: s[o]
            };
            break;

          case 223:
            this.$ = {
              joinmode: s[o - 1],
              natural: !0
            };
            break;

          case 224:
          case 225:
            this.$ = "INNER";
            break;

          case 226:
          case 227:
            this.$ = "LEFT";
            break;

          case 228:
          case 229:
            this.$ = "RIGHT";
            break;

          case 230:
          case 231:
            this.$ = "OUTER";
            break;

          case 232:
            this.$ = "SEMI";
            break;

          case 233:
            this.$ = "ANTI";
            break;

          case 234:
            this.$ = "CROSS";
            break;

          case 235:
            this.$ = {
              on: s[o]
            };
            break;

          case 236:
          case 697:
            this.$ = {
              using: s[o]
            };
            break;

          case 239:
            this.$ = {
              where: new n.Expression({
                expression: s[o]
              })
            };
            break;

          case 241:
            this.$ = {
              group: s[o - 1]
            }, n.extend(this.$, s[o]);
            break;

          case 244:
            this.$ = new n.GroupExpression({
              type: "GROUPING SETS",
              group: s[o - 1]
            });
            break;

          case 245:
            this.$ = new n.GroupExpression({
              type: "ROLLUP",
              group: s[o - 1]
            });
            break;

          case 246:
            this.$ = new n.GroupExpression({
              type: "CUBE",
              group: s[o - 1]
            });
            break;

          case 249:
            this.$ = {
              having: s[o]
            };
            break;

          case 251:
            this.$ = {
              union: s[o]
            };
            break;

          case 252:
            this.$ = {
              unionall: s[o]
            };
            break;

          case 253:
            this.$ = {
              except: s[o]
            };
            break;

          case 254:
            this.$ = {
              intersect: s[o]
            };
            break;

          case 255:
            this.$ = {
              union: s[o],
              corresponding: !0
            };
            break;

          case 256:
            this.$ = {
              unionall: s[o],
              corresponding: !0
            };
            break;

          case 257:
            this.$ = {
              except: s[o],
              corresponding: !0
            };
            break;

          case 258:
            this.$ = {
              intersect: s[o],
              corresponding: !0
            };
            break;

          case 260:
            this.$ = {
              order: s[o]
            };
            break;

          case 262:
            this.$ = s[o - 2], s[o - 2].push(s[o]);
            break;

          case 263:
            this.$ = new n.Expression({
              expression: s[o],
              direction: "ASC"
            });
            break;

          case 264:
            this.$ = new n.Expression({
              expression: s[o - 1],
              direction: s[o].toUpperCase()
            });
            break;

          case 265:
            this.$ = new n.Expression({
              expression: s[o - 2],
              direction: "ASC",
              nocase: !0
            });
            break;

          case 266:
            this.$ = new n.Expression({
              expression: s[o - 3],
              direction: s[o].toUpperCase(),
              nocase: !0
            });
            break;

          case 268:
            this.$ = {
              limit: s[o - 1]
            }, n.extend(this.$, s[o]);
            break;

          case 269:
            this.$ = {
              limit: s[o - 2],
              offset: s[o - 6]
            };
            break;

          case 271:
            this.$ = {
              offset: s[o]
            };
            break;

          case 272:
          case 509:
          case 533:
          case 648:
          case 658:
          case 682:
          case 684:
          case 688:
            s[o - 2].push(s[o]), this.$ = s[o - 2];
            break;

          case 274:
          case 276:
          case 278:
            s[o - 2].as = s[o], this.$ = s[o - 2];
            break;

          case 275:
          case 277:
          case 279:
            s[o - 1].as = s[o], this.$ = s[o - 1];
            break;

          case 281:
            this.$ = new n.Column({
              columid: s[o],
              tableid: s[o - 2],
              databaseid: s[o - 4]
            });
            break;

          case 282:
            this.$ = new n.Column({
              columnid: s[o],
              tableid: s[o - 2]
            });
            break;

          case 283:
            this.$ = new n.Column({
              columnid: s[o]
            });
            break;

          case 284:
            this.$ = new n.Column({
              columnid: s[o],
              tableid: s[o - 2],
              databaseid: s[o - 4]
            });
            break;

          case 285:
          case 286:
            this.$ = new n.Column({
              columnid: s[o],
              tableid: s[o - 2]
            });
            break;

          case 287:
            this.$ = new n.Column({
              columnid: s[o]
            });
            break;

          case 302:
            this.$ = new n.DomainValueValue();
            break;

          case 303:
            this.$ = new n.Json({
              value: s[o]
            });
            break;

          case 306:
          case 307:
          case 308:
            n.queries || (n.queries = []), n.queries.push(s[o - 1]), s[o - 1].queriesidx = n.queries.length, this.$ = s[o - 1];
            break;

          case 309:
            this.$ = s[o];
            break;

          case 310:
            this.$ = new n.FuncValue({
              funcid: "CURRENT_TIMESTAMP"
            });
            break;

          case 311:
            this.$ = new n.JavaScript({
              value: s[o].substr(2, s[o].length - 4)
            });
            break;

          case 312:
            this.$ = new n.JavaScript({
              value: 'alasql.fn["' + s[o - 2] + '"] = ' + s[o].substr(2, s[o].length - 4)
            });
            break;

          case 313:
            this.$ = new n.JavaScript({
              value: 'alasql.aggr["' + s[o - 2] + '"] = ' + s[o].substr(2, s[o].length - 4)
            });
            break;

          case 314:
            this.$ = new n.FuncValue({
              funcid: s[o],
              newid: !0
            });
            break;

          case 315:
            this.$ = s[o], n.extend(this.$, {
              newid: !0
            });
            break;

          case 316:
            this.$ = new n.Convert({
              expression: s[o - 3]
            }), n.extend(this.$, s[o - 1]);
            break;

          case 317:
            this.$ = new n.Convert({
              expression: s[o - 5],
              style: s[o - 1]
            }), n.extend(this.$, s[o - 3]);
            break;

          case 318:
            this.$ = new n.Convert({
              expression: s[o - 1]
            }), n.extend(this.$, s[o - 3]);
            break;

          case 319:
            this.$ = new n.Convert({
              expression: s[o - 3],
              style: s[o - 1]
            }), n.extend(this.$, s[o - 5]);
            break;

          case 326:
            this.$ = new n.FuncValue({
              funcid: "CURRENT_TIMESTAMP"
            });
            break;

          case 327:
            1 < s[o - 2].length && ("MAX" == s[o - 4].toUpperCase() || "MIN" == s[o - 4].toUpperCase()) ? this.$ = new n.FuncValue({
              funcid: s[o - 4],
              args: s[o - 2]
            }) : this.$ = new n.AggrValue({
              aggregatorid: s[o - 4].toUpperCase(),
              expression: s[o - 2].pop(),
              over: s[o]
            });
            break;

          case 328:
            this.$ = new n.AggrValue({
              aggregatorid: s[o - 5].toUpperCase(),
              expression: s[o - 2],
              distinct: !0,
              over: s[o]
            });
            break;

          case 329:
            this.$ = new n.AggrValue({
              aggregatorid: s[o - 5].toUpperCase(),
              expression: s[o - 2],
              over: s[o]
            });
            break;

          case 331:
          case 332:
            this.$ = new n.Over(), n.extend(this.$, s[o - 1]);
            break;

          case 333:
            this.$ = new n.Over(), n.extend(this.$, s[o - 2]), n.extend(this.$, s[o - 1]);
            break;

          case 334:
            this.$ = {
              partition: s[o]
            };
            break;

          case 335:
            this.$ = {
              order: s[o]
            };
            break;

          case 336:
            this.$ = "SUM";
            break;

          case 337:
            this.$ = "COUNT";
            break;

          case 338:
            this.$ = "MIN";
            break;

          case 339:
          case 544:
            this.$ = "MAX";
            break;

          case 340:
            this.$ = "AVG";
            break;

          case 341:
            this.$ = "FIRST";
            break;

          case 342:
            this.$ = "LAST";
            break;

          case 343:
            this.$ = "AGGR";
            break;

          case 344:
            this.$ = "ARRAY";
            break;

          case 345:
            var f = s[o - 4],
                p = s[o - 1];
            1 < p.length && ("MIN" == f.toUpperCase() || "MAX" == f.toUpperCase()) ? this.$ = new n.FuncValue({
              funcid: f,
              args: p
            }) : gi.aggr[s[o - 4]] ? this.$ = new n.AggrValue({
              aggregatorid: "REDUCE",
              funcid: f,
              expression: p.pop(),
              distinct: "DISTINCT" == s[o - 2]
            }) : this.$ = new n.FuncValue({
              funcid: f,
              args: p
            });
            break;

          case 346:
            this.$ = new n.FuncValue({
              funcid: s[o - 2]
            });
            break;

          case 347:
            this.$ = new n.FuncValue({
              funcid: "IIF",
              args: s[o - 1]
            });
            break;

          case 348:
            this.$ = new n.FuncValue({
              funcid: "REPLACE",
              args: s[o - 1]
            });
            break;

          case 349:
            this.$ = new n.FuncValue({
              funcid: "DATEADD",
              args: [new n.StringValue({
                value: s[o - 5]
              }), s[o - 3], s[o - 1]]
            });
            break;

          case 350:
            this.$ = new n.FuncValue({
              funcid: "DATEADD",
              args: [s[o - 5], s[o - 3], s[o - 1]]
            });
            break;

          case 351:
            this.$ = new n.FuncValue({
              funcid: "DATEDIFF",
              args: [new n.StringValue({
                value: s[o - 5]
              }), s[o - 3], s[o - 1]]
            });
            break;

          case 352:
            this.$ = new n.FuncValue({
              funcid: "DATEDIFF",
              args: [s[o - 5], s[o - 3], s[o - 1]]
            });
            break;

          case 353:
            this.$ = new n.FuncValue({
              funcid: "INTERVAL",
              args: [s[o - 1], new n.StringValue({
                value: s[o].toLowerCase()
              })]
            });
            break;

          case 355:
            s[o - 2].push(s[o]), this.$ = s[o - 2];
            break;

          case 356:
            this.$ = new n.NumValue({
              value: +s[o]
            });
            break;

          case 357:
            this.$ = new n.LogicValue({
              value: !0
            });
            break;

          case 358:
            this.$ = new n.LogicValue({
              value: !1
            });
            break;

          case 359:
            this.$ = new n.StringValue({
              value: s[o].substr(1, s[o].length - 2).replace(/(\\\')/g, "'").replace(/(\'\')/g, "'")
            });
            break;

          case 360:
            this.$ = new n.StringValue({
              value: s[o].substr(2, s[o].length - 3).replace(/(\\\')/g, "'").replace(/(\'\')/g, "'")
            });
            break;

          case 361:
            this.$ = new n.NullValue({
              value: void 0
            });
            break;

          case 362:
            this.$ = new n.VarValue({
              variable: s[o]
            });
            break;

          case 363:
            n.exists || (n.exists = []), this.$ = new n.ExistsValue({
              value: s[o - 1],
              existsidx: n.exists.length
            }), n.exists.push(s[o - 1]);
            break;

          case 364:
            this.$ = new n.ArrayValue({
              value: s[o - 1]
            });
            break;

          case 365:
          case 366:
            this.$ = new n.ParamValue({
              param: s[o]
            });
            break;

          case 367:
            void 0 === n.question && (n.question = 0), this.$ = new n.ParamValue({
              param: n.question++
            });
            break;

          case 368:
            void 0 === n.question && (n.question = 0), this.$ = new n.ParamValue({
              param: n.question++,
              array: !0
            });
            break;

          case 369:
            this.$ = new n.CaseValue({
              expression: s[o - 3],
              whens: s[o - 2],
              elses: s[o - 1]
            });
            break;

          case 370:
            this.$ = new n.CaseValue({
              whens: s[o - 2],
              elses: s[o - 1]
            });
            break;

          case 371:
          case 699:
          case 700:
            this.$ = s[o - 1], this.$.push(s[o]);
            break;

          case 373:
            this.$ = {
              when: s[o - 2],
              then: s[o]
            };
            break;

          case 376:
          case 377:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "REGEXP",
              right: s[o]
            });
            break;

          case 378:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "GLOB",
              right: s[o]
            });
            break;

          case 379:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "LIKE",
              right: s[o]
            });
            break;

          case 380:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "LIKE",
              right: s[o - 2],
              escape: s[o]
            });
            break;

          case 381:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "NOT LIKE",
              right: s[o]
            });
            break;

          case 382:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "NOT LIKE",
              right: s[o - 2],
              escape: s[o]
            });
            break;

          case 383:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "||",
              right: s[o]
            });
            break;

          case 384:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "+",
              right: s[o]
            });
            break;

          case 385:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "-",
              right: s[o]
            });
            break;

          case 386:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "*",
              right: s[o]
            });
            break;

          case 387:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "/",
              right: s[o]
            });
            break;

          case 388:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "%",
              right: s[o]
            });
            break;

          case 389:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "^",
              right: s[o]
            });
            break;

          case 390:
            this.$ = new n.Op({
              left: s[o - 2],
              op: ">>",
              right: s[o]
            });
            break;

          case 391:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "<<",
              right: s[o]
            });
            break;

          case 392:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "&",
              right: s[o]
            });
            break;

          case 393:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "|",
              right: s[o]
            });
            break;

          case 394:
          case 395:
          case 397:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "->",
              right: s[o]
            });
            break;

          case 396:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "->",
              right: s[o - 1]
            });
            break;

          case 398:
          case 399:
          case 401:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "!",
              right: s[o]
            });
            break;

          case 400:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "!",
              right: s[o - 1]
            });
            break;

          case 402:
            this.$ = new n.Op({
              left: s[o - 2],
              op: ">",
              right: s[o]
            });
            break;

          case 403:
            this.$ = new n.Op({
              left: s[o - 2],
              op: ">=",
              right: s[o]
            });
            break;

          case 404:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "<",
              right: s[o]
            });
            break;

          case 405:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "<=",
              right: s[o]
            });
            break;

          case 406:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "=",
              right: s[o]
            });
            break;

          case 407:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "==",
              right: s[o]
            });
            break;

          case 408:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "===",
              right: s[o]
            });
            break;

          case 409:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "!=",
              right: s[o]
            });
            break;

          case 410:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "!==",
              right: s[o]
            });
            break;

          case 411:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "!===",
              right: s[o]
            });
            break;

          case 412:
            n.queries || (n.queries = []), this.$ = new n.Op({
              left: s[o - 5],
              op: s[o - 4],
              allsome: s[o - 3],
              right: s[o - 1],
              queriesidx: n.queries.length
            }), n.queries.push(s[o - 1]);
            break;

          case 413:
            this.$ = new n.Op({
              left: s[o - 5],
              op: s[o - 4],
              allsome: s[o - 3],
              right: s[o - 1]
            });
            break;

          case 414:
            "BETWEEN1" == s[o - 2].op ? "AND" == s[o - 2].left.op ? this.$ = new n.Op({
              left: s[o - 2].left.left,
              op: "AND",
              right: new n.Op({
                left: s[o - 2].left.right,
                op: "BETWEEN",
                right1: s[o - 2].right,
                right2: s[o]
              })
            }) : this.$ = new n.Op({
              left: s[o - 2].left,
              op: "BETWEEN",
              right1: s[o - 2].right,
              right2: s[o]
            }) : "NOT BETWEEN1" == s[o - 2].op ? "AND" == s[o - 2].left.op ? this.$ = new n.Op({
              left: s[o - 2].left.left,
              op: "AND",
              right: new n.Op({
                left: s[o - 2].left.right,
                op: "NOT BETWEEN",
                right1: s[o - 2].right,
                right2: s[o]
              })
            }) : this.$ = new n.Op({
              left: s[o - 2].left,
              op: "NOT BETWEEN",
              right1: s[o - 2].right,
              right2: s[o]
            }) : this.$ = new n.Op({
              left: s[o - 2],
              op: "AND",
              right: s[o]
            });
            break;

          case 415:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "OR",
              right: s[o]
            });
            break;

          case 416:
            this.$ = new n.UniOp({
              op: "NOT",
              right: s[o]
            });
            break;

          case 417:
            this.$ = new n.UniOp({
              op: "-",
              right: s[o]
            });
            break;

          case 418:
            this.$ = new n.UniOp({
              op: "+",
              right: s[o]
            });
            break;

          case 419:
            this.$ = new n.UniOp({
              op: "~",
              right: s[o]
            });
            break;

          case 420:
            this.$ = new n.UniOp({
              op: "#",
              right: s[o]
            });
            break;

          case 421:
            this.$ = new n.UniOp({
              right: s[o - 1]
            });
            break;

          case 422:
            n.queries || (n.queries = []), this.$ = new n.Op({
              left: s[o - 4],
              op: "IN",
              right: s[o - 1],
              queriesidx: n.queries.length
            }), n.queries.push(s[o - 1]);
            break;

          case 423:
            n.queries || (n.queries = []), this.$ = new n.Op({
              left: s[o - 5],
              op: "NOT IN",
              right: s[o - 1],
              queriesidx: n.queries.length
            }), n.queries.push(s[o - 1]);
            break;

          case 424:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "IN",
              right: s[o - 1]
            });
            break;

          case 425:
            this.$ = new n.Op({
              left: s[o - 5],
              op: "NOT IN",
              right: s[o - 1]
            });
            break;

          case 426:
            this.$ = new n.Op({
              left: s[o - 3],
              op: "IN",
              right: []
            });
            break;

          case 427:
            this.$ = new n.Op({
              left: s[o - 4],
              op: "NOT IN",
              right: []
            });
            break;

          case 428:
          case 430:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "IN",
              right: s[o]
            });
            break;

          case 429:
          case 431:
            this.$ = new n.Op({
              left: s[o - 3],
              op: "NOT IN",
              right: s[o]
            });
            break;

          case 432:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "BETWEEN1",
              right: s[o]
            });
            break;

          case 433:
            this.$ = new n.Op({
              left: s[o - 2],
              op: "NOT BETWEEN1",
              right: s[o]
            });
            break;

          case 434:
            this.$ = new n.Op({
              op: "IS",
              left: s[o - 2],
              right: s[o]
            });
            break;

          case 435:
            this.$ = new n.Op({
              op: "IS",
              left: s[o - 2],
              right: new n.UniOp({
                op: "NOT",
                right: new n.NullValue({
                  value: void 0
                })
              })
            });
            break;

          case 436:
            this.$ = new n.Convert({
              expression: s[o - 2]
            }), n.extend(this.$, s[o]);
            break;

          case 437:
          case 438:
            this.$ = s[o];
            break;

          case 439:
            this.$ = s[o - 1];
            break;

          case 446:
            this.$ = "ALL";
            break;

          case 447:
            this.$ = "SOME";
            break;

          case 448:
            this.$ = "ANY";
            break;

          case 449:
            this.$ = new n.Update({
              table: s[o - 4],
              columns: s[o - 2],
              where: s[o]
            });
            break;

          case 450:
            this.$ = new n.Update({
              table: s[o - 2],
              columns: s[o]
            });
            break;

          case 453:
            this.$ = new n.SetColumn({
              column: s[o - 2],
              expression: s[o]
            });
            break;

          case 454:
            this.$ = new n.SetColumn({
              variable: s[o - 2],
              expression: s[o],
              method: s[o - 3]
            });
            break;

          case 455:
            this.$ = new n.Delete({
              table: s[o - 2],
              where: s[o]
            });
            break;

          case 456:
            this.$ = new n.Delete({
              table: s[o]
            });
            break;

          case 457:
            this.$ = new n.Insert({
              into: s[o - 2],
              values: s[o]
            });
            break;

          case 458:
            this.$ = new n.Insert({
              into: s[o - 1],
              values: s[o]
            });
            break;

          case 459:
          case 461:
            this.$ = new n.Insert({
              into: s[o - 2],
              values: s[o],
              orreplace: !0
            });
            break;

          case 460:
          case 462:
            this.$ = new n.Insert({
              into: s[o - 1],
              values: s[o],
              orreplace: !0
            });
            break;

          case 463:
            this.$ = new n.Insert({
              into: s[o - 2],
              default: !0
            });
            break;

          case 464:
            this.$ = new n.Insert({
              into: s[o - 5],
              columns: s[o - 3],
              values: s[o]
            });
            break;

          case 465:
            this.$ = new n.Insert({
              into: s[o - 4],
              columns: s[o - 2],
              values: s[o]
            });
            break;

          case 466:
            this.$ = new n.Insert({
              into: s[o - 1],
              select: s[o]
            });
            break;

          case 467:
            this.$ = new n.Insert({
              into: s[o - 1],
              select: s[o],
              orreplace: !0
            });
            break;

          case 468:
            this.$ = new n.Insert({
              into: s[o - 4],
              columns: s[o - 2],
              select: s[o]
            });
            break;

          case 473:
            this.$ = [s[o - 1]];
            break;

          case 476:
            this.$ = s[o - 4], s[o - 4].push(s[o - 1]);
            break;

          case 477:
          case 478:
          case 480:
          case 488:
            this.$ = s[o - 2], s[o - 2].push(s[o]);
            break;

          case 489:
            this.$ = new n.CreateTable({
              table: s[o - 4]
            }), n.extend(this.$, s[o - 7]), n.extend(this.$, s[o - 6]), n.extend(this.$, s[o - 5]), n.extend(this.$, s[o - 2]), n.extend(this.$, s[o]);
            break;

          case 490:
            this.$ = new n.CreateTable({
              table: s[o]
            }), n.extend(this.$, s[o - 3]), n.extend(this.$, s[o - 2]), n.extend(this.$, s[o - 1]);
            break;

          case 492:
            this.$ = {
              class: !0
            };
            break;

          case 502:
            this.$ = {
              temporary: !0
            };
            break;

          case 504:
            this.$ = {
              ifnotexists: !0
            };
            break;

          case 505:
            this.$ = {
              columns: s[o - 2],
              constraints: s[o]
            };
            break;

          case 506:
            this.$ = {
              columns: s[o]
            };
            break;

          case 507:
            this.$ = {
              as: s[o]
            };
            break;

          case 508:
          case 532:
            this.$ = [s[o]];
            break;

          case 510:
          case 511:
          case 512:
          case 513:
          case 514:
            s[o].constraintid = s[o - 1], this.$ = s[o];
            break;

          case 517:
            this.$ = {
              type: "CHECK",
              expression: s[o - 1]
            };
            break;

          case 518:
            this.$ = {
              type: "PRIMARY KEY",
              columns: s[o - 1],
              clustered: (s[o - 3] + "").toUpperCase()
            };
            break;

          case 519:
            this.$ = {
              type: "FOREIGN KEY",
              columns: s[o - 5],
              fktable: s[o - 2],
              fkcolumns: s[o - 1]
            };
            break;

          case 525:
            this.$ = {
              type: "UNIQUE",
              columns: s[o - 1],
              clustered: (s[o - 3] + "").toUpperCase()
            };
            break;

          case 534:
            this.$ = new n.ColumnDef({
              columnid: s[o - 2]
            }), n.extend(this.$, s[o - 1]), n.extend(this.$, s[o]);
            break;

          case 535:
            this.$ = new n.ColumnDef({
              columnid: s[o - 1]
            }), n.extend(this.$, s[o]);
            break;

          case 536:
            this.$ = new n.ColumnDef({
              columnid: s[o],
              dbtypeid: ""
            });
            break;

          case 537:
            this.$ = {
              dbtypeid: s[o - 5],
              dbsize: s[o - 3],
              dbprecision: +s[o - 1]
            };
            break;

          case 538:
            this.$ = {
              dbtypeid: s[o - 3],
              dbsize: s[o - 1]
            };
            break;

          case 539:
            this.$ = {
              dbtypeid: s[o]
            };
            break;

          case 540:
            this.$ = {
              dbtypeid: "ENUM",
              enumvalues: s[o - 1]
            };
            break;

          case 541:
            this.$ = s[o - 1], s[o - 1].dbtypeid += "[" + s[o] + "]";
            break;

          case 543:
          case 750:
            this.$ = +s[o];
            break;

          case 545:
            this.$ = void 0;
            break;

          case 547:
            n.extend(s[o - 1], s[o]), this.$ = s[o - 1];
            break;

          case 550:
            this.$ = {
              primarykey: !0
            };
            break;

          case 551:
          case 552:
            this.$ = {
              foreignkey: {
                table: s[o - 1],
                columnid: s[o]
              }
            };
            break;

          case 553:
            this.$ = {
              identity: {
                value: s[o - 3],
                step: s[o - 1]
              }
            };
            break;

          case 554:
            this.$ = {
              identity: {
                value: 1,
                step: 1
              }
            };
            break;

          case 555:
          case 557:
            this.$ = {
              default: s[o]
            };
            break;

          case 556:
            this.$ = {
              default: s[o - 1]
            };
            break;

          case 558:
            this.$ = {
              null: !0
            };
            break;

          case 559:
            this.$ = {
              notnull: !0
            };
            break;

          case 560:
            this.$ = {
              check: s[o]
            };
            break;

          case 561:
            this.$ = {
              unique: !0
            };
            break;

          case 562:
            this.$ = {
              onupdate: s[o]
            };
            break;

          case 563:
            this.$ = {
              onupdate: s[o - 1]
            };
            break;

          case 564:
            this.$ = new n.DropTable({
              tables: s[o],
              type: s[o - 2]
            }), n.extend(this.$, s[o - 1]);
            break;

          case 568:
            this.$ = {
              ifexists: !0
            };
            break;

          case 569:
            this.$ = new n.AlterTable({
              table: s[o - 3],
              renameto: s[o]
            });
            break;

          case 570:
            this.$ = new n.AlterTable({
              table: s[o - 3],
              addcolumn: s[o]
            });
            break;

          case 571:
            this.$ = new n.AlterTable({
              table: s[o - 3],
              modifycolumn: s[o]
            });
            break;

          case 572:
            this.$ = new n.AlterTable({
              table: s[o - 5],
              renamecolumn: s[o - 2],
              to: s[o]
            });
            break;

          case 573:
            this.$ = new n.AlterTable({
              table: s[o - 3],
              dropcolumn: s[o]
            });
            break;

          case 574:
            this.$ = new n.AlterTable({
              table: s[o - 2],
              renameto: s[o]
            });
            break;

          case 575:
            this.$ = new n.AttachDatabase({
              databaseid: s[o],
              engineid: s[o - 2].toUpperCase()
            });
            break;

          case 576:
            this.$ = new n.AttachDatabase({
              databaseid: s[o - 3],
              engineid: s[o - 5].toUpperCase(),
              args: s[o - 1]
            });
            break;

          case 577:
            this.$ = new n.AttachDatabase({
              databaseid: s[o - 2],
              engineid: s[o - 4].toUpperCase(),
              as: s[o]
            });
            break;

          case 578:
            this.$ = new n.AttachDatabase({
              databaseid: s[o - 5],
              engineid: s[o - 7].toUpperCase(),
              as: s[o],
              args: s[o - 3]
            });
            break;

          case 579:
            this.$ = new n.DetachDatabase({
              databaseid: s[o]
            });
            break;

          case 580:
            this.$ = new n.CreateDatabase({
              databaseid: s[o]
            }), n.extend(this.$, s[o]);
            break;

          case 581:
            this.$ = new n.CreateDatabase({
              engineid: s[o - 4].toUpperCase(),
              databaseid: s[o - 1],
              as: s[o]
            }), n.extend(this.$, s[o - 2]);
            break;

          case 582:
            this.$ = new n.CreateDatabase({
              engineid: s[o - 7].toUpperCase(),
              databaseid: s[o - 4],
              args: s[o - 2],
              as: s[o]
            }), n.extend(this.$, s[o - 5]);
            break;

          case 583:
            this.$ = new n.CreateDatabase({
              engineid: s[o - 4].toUpperCase(),
              as: s[o],
              args: [s[o - 1]]
            }), n.extend(this.$, s[o - 2]);
            break;

          case 584:
            this.$ = void 0;
            break;

          case 586:
          case 587:
            this.$ = new n.UseDatabase({
              databaseid: s[o]
            });
            break;

          case 588:
            this.$ = new n.DropDatabase({
              databaseid: s[o]
            }), n.extend(this.$, s[o - 1]);
            break;

          case 589:
          case 590:
            this.$ = new n.DropDatabase({
              databaseid: s[o],
              engineid: s[o - 3].toUpperCase()
            }), n.extend(this.$, s[o - 1]);
            break;

          case 591:
            this.$ = new n.CreateIndex({
              indexid: s[o - 5],
              table: s[o - 3],
              columns: s[o - 1]
            });
            break;

          case 592:
            this.$ = new n.CreateIndex({
              indexid: s[o - 5],
              table: s[o - 3],
              columns: s[o - 1],
              unique: !0
            });
            break;

          case 593:
            this.$ = new n.DropIndex({
              indexid: s[o]
            });
            break;

          case 594:
            this.$ = new n.ShowDatabases();
            break;

          case 595:
            this.$ = new n.ShowDatabases({
              like: s[o]
            });
            break;

          case 596:
            this.$ = new n.ShowDatabases({
              engineid: s[o - 1].toUpperCase()
            });
            break;

          case 597:
            this.$ = new n.ShowDatabases({
              engineid: s[o - 3].toUpperCase(),
              like: s[o]
            });
            break;

          case 598:
            this.$ = new n.ShowTables();
            break;

          case 599:
            this.$ = new n.ShowTables({
              like: s[o]
            });
            break;

          case 600:
            this.$ = new n.ShowTables({
              databaseid: s[o]
            });
            break;

          case 601:
            this.$ = new n.ShowTables({
              like: s[o],
              databaseid: s[o - 2]
            });
            break;

          case 602:
            this.$ = new n.ShowColumns({
              table: s[o]
            });
            break;

          case 603:
            this.$ = new n.ShowColumns({
              table: s[o - 2],
              databaseid: s[o]
            });
            break;

          case 604:
            this.$ = new n.ShowIndex({
              table: s[o]
            });
            break;

          case 605:
            this.$ = new n.ShowIndex({
              table: s[o - 2],
              databaseid: s[o]
            });
            break;

          case 606:
            this.$ = new n.ShowCreateTable({
              table: s[o]
            });
            break;

          case 607:
            this.$ = new n.ShowCreateTable({
              table: s[o - 2],
              databaseid: s[o]
            });
            break;

          case 608:
            this.$ = new n.CreateTable({
              table: s[o - 6],
              view: !0,
              select: s[o - 1],
              viewcolumns: s[o - 4]
            }), n.extend(this.$, s[o - 9]), n.extend(this.$, s[o - 7]);
            break;

          case 609:
            this.$ = new n.CreateTable({
              table: s[o - 3],
              view: !0,
              select: s[o - 1]
            }), n.extend(this.$, s[o - 6]), n.extend(this.$, s[o - 4]);
            break;

          case 613:
            this.$ = new n.DropTable({
              tables: s[o],
              view: !0
            }), n.extend(this.$, s[o - 1]);
            break;

          case 614:
          case 760:
            this.$ = new n.ExpressionStatement({
              expression: s[o]
            });
            break;

          case 615:
            this.$ = new n.Source({
              url: s[o].value
            });
            break;

          case 616:
            this.$ = new n.Assert({
              value: s[o]
            });
            break;

          case 617:
            this.$ = new n.Assert({
              value: s[o].value
            });
            break;

          case 618:
            this.$ = new n.Assert({
              value: s[o],
              message: s[o - 2]
            });
            break;

          case 620:
          case 631:
          case 633:
            this.$ = s[o].value;
            break;

          case 621:
          case 629:
            this.$ = +s[o].value;
            break;

          case 622:
            this.$ = !!s[o].value;
            break;

          case 630:
            this.$ = "" + s[o].value;
            break;

          case 639:
            this.$ = {};
            break;

          case 642:
            this.$ = [];
            break;

          case 643:
            n.extend(s[o - 2], s[o]), this.$ = s[o - 2];
            break;

          case 645:
            this.$ = {}, this.$[s[o - 2].substr(1, s[o - 2].length - 2)] = s[o];
            break;

          case 646:
          case 647:
            this.$ = {}, this.$[s[o - 2]] = s[o];
            break;

          case 650:
            this.$ = new n.SetVariable({
              variable: s[o - 2].toLowerCase(),
              value: s[o]
            });
            break;

          case 651:
            this.$ = new n.SetVariable({
              variable: s[o - 1].toLowerCase(),
              value: s[o]
            });
            break;

          case 652:
            this.$ = new n.SetVariable({
              variable: s[o - 2],
              expression: s[o]
            });
            break;

          case 653:
            this.$ = new n.SetVariable({
              variable: s[o - 3],
              props: s[o - 2],
              expression: s[o]
            });
            break;

          case 654:
            this.$ = new n.SetVariable({
              variable: s[o - 2],
              expression: s[o],
              method: s[o - 3]
            });
            break;

          case 655:
            this.$ = new n.SetVariable({
              variable: s[o - 3],
              props: s[o - 2],
              expression: s[o],
              method: s[o - 4]
            });
            break;

          case 656:
            this.$ = "@";
            break;

          case 657:
            this.$ = "$";
            break;

          case 663:
            this.$ = !0;
            break;

          case 664:
            this.$ = !1;
            break;

          case 665:
            this.$ = new n.CommitTransaction();
            break;

          case 666:
            this.$ = new n.RollbackTransaction();
            break;

          case 667:
            this.$ = new n.BeginTransaction();
            break;

          case 668:
            this.$ = new n.If({
              expression: s[o - 2],
              thenstat: s[o - 1],
              elsestat: s[o]
            }), s[o - 1].exists && (this.$.exists = s[o - 1].exists), s[o - 1].queries && (this.$.queries = s[o - 1].queries);
            break;

          case 669:
            this.$ = new n.If({
              expression: s[o - 1],
              thenstat: s[o]
            }), s[o].exists && (this.$.exists = s[o].exists), s[o].queries && (this.$.queries = s[o].queries);
            break;

          case 670:
            this.$ = s[o];
            break;

          case 671:
            this.$ = new n.While({
              expression: s[o - 1],
              loopstat: s[o]
            }), s[o].exists && (this.$.exists = s[o].exists), s[o].queries && (this.$.queries = s[o].queries);
            break;

          case 672:
            this.$ = new n.Continue();
            break;

          case 673:
            this.$ = new n.Break();
            break;

          case 674:
            this.$ = new n.BeginEnd({
              statements: s[o - 1]
            });
            break;

          case 675:
            this.$ = new n.Print({
              exprs: s[o]
            });
            break;

          case 676:
            this.$ = new n.Print({
              select: s[o]
            });
            break;

          case 677:
            this.$ = new n.Require({
              paths: s[o]
            });
            break;

          case 678:
            this.$ = new n.Require({
              plugins: s[o]
            });
            break;

          case 679:
          case 680:
            this.$ = s[o].toUpperCase();
            break;

          case 681:
            this.$ = new n.Echo({
              expr: s[o]
            });
            break;

          case 686:
            this.$ = new n.Declare({
              declares: s[o]
            });
            break;

          case 689:
            this.$ = {
              variable: s[o - 1]
            }, n.extend(this.$, s[o]);
            break;

          case 690:
            this.$ = {
              variable: s[o - 2]
            }, n.extend(this.$, s[o]);
            break;

          case 691:
            this.$ = {
              variable: s[o - 3],
              expression: s[o]
            }, n.extend(this.$, s[o - 2]);
            break;

          case 692:
            this.$ = {
              variable: s[o - 4],
              expression: s[o]
            }, n.extend(this.$, s[o - 2]);
            break;

          case 693:
            this.$ = new n.TruncateTable({
              table: s[o]
            });
            break;

          case 694:
            this.$ = new n.Merge(), n.extend(this.$, s[o - 4]), n.extend(this.$, s[o - 3]), n.extend(this.$, s[o - 2]), n.extend(this.$, {
              matches: s[o - 1]
            }), n.extend(this.$, s[o]);
            break;

          case 695:
          case 696:
            this.$ = {
              into: s[o]
            };
            break;

          case 698:
            this.$ = {
              on: s[o]
            };
            break;

          case 703:
            this.$ = {
              matched: !0,
              action: s[o]
            };
            break;

          case 704:
            this.$ = {
              matched: !0,
              expr: s[o - 2],
              action: s[o]
            };
            break;

          case 705:
            this.$ = {
              delete: !0
            };
            break;

          case 706:
            this.$ = {
              update: s[o]
            };
            break;

          case 707:
          case 708:
            this.$ = {
              matched: !1,
              bytarget: !0,
              action: s[o]
            };
            break;

          case 709:
          case 710:
            this.$ = {
              matched: !1,
              bytarget: !0,
              expr: s[o - 2],
              action: s[o]
            };
            break;

          case 711:
            this.$ = {
              matched: !1,
              bysource: !0,
              action: s[o]
            };
            break;

          case 712:
            this.$ = {
              matched: !1,
              bysource: !0,
              expr: s[o - 2],
              action: s[o]
            };
            break;

          case 713:
            this.$ = {
              insert: !0,
              values: s[o]
            };
            break;

          case 714:
            this.$ = {
              insert: !0,
              values: s[o],
              columns: s[o - 3]
            };
            break;

          case 715:
            this.$ = {
              insert: !0,
              defaultvalues: !0
            };
            break;

          case 716:
            this.$ = {
              insert: !0,
              defaultvalues: !0,
              columns: s[o - 3]
            };
            break;

          case 718:
            this.$ = {
              output: {
                columns: s[o]
              }
            };
            break;

          case 719:
            this.$ = {
              output: {
                columns: s[o - 3],
                intovar: s[o],
                method: s[o - 1]
              }
            };
            break;

          case 720:
            this.$ = {
              output: {
                columns: s[o - 2],
                intotable: s[o]
              }
            };
            break;

          case 721:
            this.$ = {
              output: {
                columns: s[o - 5],
                intotable: s[o - 3],
                intocolumns: s[o - 1]
              }
            };
            break;

          case 722:
            this.$ = new n.CreateVertex({
              class: s[o - 3],
              sharp: s[o - 2],
              name: s[o - 1]
            }), n.extend(this.$, s[o]);
            break;

          case 725:
            this.$ = {
              sets: s[o]
            };
            break;

          case 726:
            this.$ = {
              content: s[o]
            };
            break;

          case 727:
            this.$ = {
              select: s[o]
            };
            break;

          case 728:
            this.$ = new n.CreateEdge({
              from: s[o - 3],
              to: s[o - 1],
              name: s[o - 5]
            }), n.extend(this.$, s[o]);
            break;

          case 729:
            this.$ = new n.CreateGraph({
              graph: s[o]
            });
            break;

          case 730:
            this.$ = new n.CreateGraph({
              from: s[o]
            });
            break;

          case 733:
            this.$ = s[o - 2], s[o - 1] && (this.$.json = new n.Json({
              value: s[o - 1]
            })), s[o] && (this.$.as = s[o]);
            break;

          case 734:
            this.$ = {
              source: s[o - 6],
              target: s[o]
            }, s[o - 3] && (this.$.json = new n.Json({
              value: s[o - 3]
            })), s[o - 2] && (this.$.as = s[o - 2]), n.extend(this.$, s[o - 4]);
            break;

          case 735:
            this.$ = {
              source: s[o - 5],
              target: s[o]
            }, s[o - 2] && (this.$.json = new n.Json({
              value: s[o - 3]
            })), s[o - 1] && (this.$.as = s[o - 2]);
            break;

          case 736:
            this.$ = {
              source: s[o - 2],
              target: s[o]
            };
            break;

          case 740:
            this.$ = {
              vars: s[o],
              method: s[o - 1]
            };
            break;

          case 743:
          case 744:
            var b = s[o - 1];
            this.$ = {
              prop: s[o - 3],
              sharp: s[o - 2],
              name: void 0 === b ? void 0 : b.substr(1, b.length - 2),
              class: s[o]
            };
            break;

          case 745:
            var E = s[o - 1];
            this.$ = {
              sharp: s[o - 2],
              name: void 0 === E ? void 0 : E.substr(1, E.length - 2),
              class: s[o]
            };
            break;

          case 746:
            var g = s[o - 1];
            this.$ = {
              name: void 0 === g ? void 0 : g.substr(1, g.length - 2),
              class: s[o]
            };
            break;

          case 747:
            this.$ = {
              class: s[o]
            };
            break;

          case 753:
            this.$ = new n.AddRule({
              left: s[o - 2],
              right: s[o]
            });
            break;

          case 754:
            this.$ = new n.AddRule({
              right: s[o]
            });
            break;

          case 757:
            this.$ = new n.Term({
              termid: s[o]
            });
            break;

          case 758:
            this.$ = new n.Term({
              termid: s[o - 3],
              args: s[o - 1]
            });
            break;

          case 761:
            this.$ = new n.CreateTrigger({
              trigger: s[o - 6],
              when: s[o - 5],
              action: s[o - 4],
              table: s[o - 2],
              statement: s[o]
            }), s[o].exists && (this.$.exists = s[o].exists), s[o].queries && (this.$.queries = s[o].queries);
            break;

          case 762:
            this.$ = new n.CreateTrigger({
              trigger: s[o - 5],
              when: s[o - 4],
              action: s[o - 3],
              table: s[o - 1],
              funcid: s[o]
            });
            break;

          case 763:
            this.$ = new n.CreateTrigger({
              trigger: s[o - 6],
              when: s[o - 4],
              action: s[o - 3],
              table: s[o - 5],
              statement: s[o]
            }), s[o].exists && (this.$.exists = s[o].exists), s[o].queries && (this.$.queries = s[o].queries);
            break;

          case 764:
          case 765:
          case 767:
            this.$ = "AFTER";
            break;

          case 766:
            this.$ = "BEFORE";
            break;

          case 768:
            this.$ = "INSTEADOF";
            break;

          case 769:
            this.$ = "INSERT";
            break;

          case 770:
            this.$ = "DELETE";
            break;

          case 771:
            this.$ = "UPDATE";
            break;

          case 772:
            this.$ = new n.DropTrigger({
              trigger: s[o]
            });
            break;

          case 773:
            this.$ = new n.Reindex({
              indexid: s[o]
            });
            break;

          case 1047:
          case 1067:
          case 1069:
          case 1071:
          case 1075:
          case 1077:
          case 1079:
          case 1081:
          case 1083:
          case 1085:
            this.$ = [];
            break;

          case 1048:
          case 1062:
          case 1064:
          case 1068:
          case 1070:
          case 1072:
          case 1076:
          case 1078:
          case 1080:
          case 1082:
          case 1084:
          case 1086:
            s[o - 1].push(s[o]);
            break;

          case 1061:
          case 1063:
            this.$ = [s[o]];
        }
      },
      table: [e([10, 602, 764], t, {
        8: 1,
        9: 2,
        12: 3,
        13: 4,
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        2: r,
        4: n,
        5: a,
        14: s,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), {
        1: [3]
      }, {
        10: [1, 105],
        11: 106,
        602: j,
        764: H
      }, e(J, [2, 8]), e(J, [2, 9]), e(Y, [2, 12]), e(J, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 109,
        2: r,
        4: n,
        5: a,
        15: [1, 110],
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(Y, [2, 14]), e(Y, [2, 15]), e(Y, [2, 16]), e(Y, [2, 17]), e(Y, [2, 18]), e(Y, [2, 19]), e(Y, [2, 20]), e(Y, [2, 21]), e(Y, [2, 22]), e(Y, [2, 23]), e(Y, [2, 24]), e(Y, [2, 25]), e(Y, [2, 26]), e(Y, [2, 27]), e(Y, [2, 28]), e(Y, [2, 29]), e(Y, [2, 30]), e(Y, [2, 31]), e(Y, [2, 32]), e(Y, [2, 33]), e(Y, [2, 34]), e(Y, [2, 35]), e(Y, [2, 36]), e(Y, [2, 37]), e(Y, [2, 38]), e(Y, [2, 39]), e(Y, [2, 40]), e(Y, [2, 41]), e(Y, [2, 42]), e(Y, [2, 43]), e(Y, [2, 44]), e(Y, [2, 45]), e(Y, [2, 46]), e(Y, [2, 47]), e(Y, [2, 48]), e(Y, [2, 49]), e(Y, [2, 50]), e(Y, [2, 51]), e(Y, [2, 52]), e(Y, [2, 53]), e(Y, [2, 54]), e(Y, [2, 55]), e(Y, [2, 56]), e(Y, [2, 57]), e(Y, [2, 58]), e(Y, [2, 59]), e(Y, [2, 60]), e(Y, [2, 61]), e(Y, [2, 62]), e(Y, [2, 63]), e(Y, [2, 64]), e(Y, [2, 65]), e(Y, [2, 66]), e(Y, [2, 67]), {
        353: [1, 111]
      }, {
        2: r,
        3: 112,
        4: n,
        5: a
      }, {
        2: r,
        3: 114,
        4: n,
        5: a,
        156: W,
        200: 113,
        290: X,
        291: K,
        292: Q,
        293: z
      }, e(Z, [2, 501], {
        3: 121,
        348: 125,
        2: r,
        4: n,
        5: a,
        134: ee,
        135: te,
        187: [1, 123],
        193: [1, 122],
        268: [1, 129],
        269: [1, 130],
        357: [1, 131],
        405: [1, 120],
        472: [1, 124],
        509: [1, 128]
      }), {
        145: re,
        449: 132,
        450: 133
      }, {
        183: [1, 135]
      }, {
        405: [1, 136]
      }, {
        2: r,
        3: 138,
        4: n,
        5: a,
        130: [1, 144],
        193: [1, 139],
        353: [1, 143],
        397: 140,
        405: [1, 137],
        410: [1, 141],
        509: [1, 142]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 145,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(qe, Ge, {
        340: 204,
        171: [1, 205],
        198: Ve
      }), e(qe, Ge, {
        340: 207,
        198: Ve
      }), {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: Be,
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        198: [1, 210],
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        209: 209,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe,
        453: 208
      }, {
        2: r,
        3: 221,
        4: n,
        5: a
      }, {
        353: [1, 222]
      }, e(Je, [2, 1043], {
        80: 223,
        106: 224,
        107: [1, 225]
      }), e(Ye, [2, 1047], {
        90: 226
      }), {
        2: r,
        3: 230,
        4: n,
        5: a,
        190: [1, 228],
        193: [1, 231],
        267: [1, 227],
        353: [1, 232],
        405: [1, 229]
      }, {
        353: [1, 233]
      }, {
        2: r,
        3: 236,
        4: n,
        5: a,
        73: 234,
        75: 235
      }, e([306, 602, 764], t, {
        12: 3,
        13: 4,
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        9: 238,
        2: r,
        4: n,
        5: a,
        14: s,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        435: [1, 237],
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), {
        435: [1, 239]
      }, {
        435: [1, 240]
      }, {
        2: r,
        3: 242,
        4: n,
        5: a,
        405: [1, 241]
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 243
      }, e(We, [2, 311]), {
        113: 245,
        132: se,
        296: xe
      }, {
        2: r,
        3: 114,
        4: n,
        5: a,
        113: 251,
        131: ae,
        132: [1, 248],
        143: oe,
        144: 246,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 250,
        200: 255,
        201: 254,
        257: 252,
        258: 253,
        265: Ke,
        274: 247,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 257,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Y, [2, 672]), e(Y, [2, 673]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        40: 259,
        56: 165,
        77: ne,
        79: 75,
        89: u,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 258,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        184: 99,
        189: d,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 266,
        4: n,
        5: a,
        113: 263,
        132: se,
        296: xe,
        444: 261,
        445: 262,
        446: 264,
        447: Qe
      }, {
        2: r,
        3: 267,
        4: n,
        5: a,
        143: ze,
        145: Ze,
        431: 268
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 271,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        505: [1, 272]
      }, {
        2: r,
        3: 100,
        4: n,
        5: a,
        504: 274,
        506: 273
      }, {
        2: r,
        3: 114,
        4: n,
        5: a,
        156: W,
        200: 275,
        290: X,
        291: K,
        292: Q,
        293: z
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 276,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(et, tt, {
        186: 280,
        164: [1, 279],
        185: [1, 277],
        187: [1, 278],
        195: rt
      }), e(nt, [2, 757], {
        77: [1, 282]
      }), e([2, 4, 5, 10, 72, 77, 78, 93, 98, 107, 118, 128, 131, 132, 137, 143, 145, 152, 154, 156, 162, 164, 168, 169, 179, 180, 181, 183, 185, 187, 195, 198, 232, 245, 247, 265, 266, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 306, 310, 312, 317, 420, 424, 602, 764], [2, 152], {
        149: [1, 283],
        150: [1, 284],
        190: [1, 285],
        191: [1, 286],
        192: [1, 287],
        193: [1, 288],
        194: [1, 289]
      }), e(at, [2, 1]), e(at, [2, 2]), {
        6: 290,
        131: [1, 439],
        172: [1, 462],
        245: [1, 411],
        285: [1, 373],
        286: [1, 407],
        370: [1, 404],
        381: [1, 295],
        402: [1, 297],
        410: [1, 549],
        414: [1, 471],
        416: [1, 443],
        417: [1, 509],
        433: [1, 442],
        435: [1, 525],
        440: [1, 342],
        460: [1, 418],
        464: [1, 448],
        470: [1, 341],
        514: [1, 307],
        515: [1, 299],
        516: [1, 399],
        518: [1, 291],
        519: [1, 292],
        520: [1, 293],
        521: [1, 294],
        522: [1, 296],
        523: [1, 298],
        524: [1, 300],
        525: [1, 301],
        526: [1, 302],
        527: [1, 303],
        528: [1, 304],
        529: [1, 305],
        530: [1, 306],
        531: [1, 308],
        532: [1, 309],
        533: [1, 310],
        534: [1, 311],
        535: [1, 312],
        536: [1, 313],
        537: [1, 314],
        538: [1, 315],
        539: [1, 316],
        540: [1, 317],
        541: [1, 318],
        542: [1, 319],
        543: [1, 320],
        544: [1, 321],
        545: [1, 322],
        546: [1, 323],
        547: [1, 324],
        548: [1, 325],
        549: [1, 326],
        550: [1, 327],
        551: [1, 328],
        552: [1, 329],
        553: [1, 330],
        554: [1, 331],
        555: [1, 332],
        556: [1, 333],
        557: [1, 334],
        558: [1, 335],
        559: [1, 336],
        560: [1, 337],
        561: [1, 338],
        562: [1, 339],
        563: [1, 340],
        564: [1, 343],
        565: [1, 344],
        566: [1, 345],
        567: [1, 346],
        568: [1, 347],
        569: [1, 348],
        570: [1, 349],
        571: [1, 350],
        572: [1, 351],
        573: [1, 352],
        574: [1, 353],
        575: [1, 354],
        576: [1, 355],
        577: [1, 356],
        578: [1, 357],
        579: [1, 358],
        580: [1, 359],
        581: [1, 360],
        582: [1, 361],
        583: [1, 362],
        584: [1, 363],
        585: [1, 364],
        586: [1, 365],
        587: [1, 366],
        588: [1, 367],
        589: [1, 368],
        590: [1, 369],
        591: [1, 370],
        592: [1, 371],
        593: [1, 372],
        594: [1, 374],
        595: [1, 375],
        596: [1, 376],
        597: [1, 377],
        598: [1, 378],
        599: [1, 379],
        600: [1, 380],
        601: [1, 381],
        602: [1, 382],
        603: [1, 383],
        604: [1, 384],
        605: [1, 385],
        606: [1, 386],
        607: [1, 387],
        608: [1, 388],
        609: [1, 389],
        610: [1, 390],
        611: [1, 391],
        612: [1, 392],
        613: [1, 393],
        614: [1, 394],
        615: [1, 395],
        616: [1, 396],
        617: [1, 397],
        618: [1, 398],
        619: [1, 400],
        620: [1, 401],
        621: [1, 402],
        622: [1, 403],
        623: [1, 405],
        624: [1, 406],
        625: [1, 408],
        626: [1, 409],
        627: [1, 410],
        628: [1, 412],
        629: [1, 413],
        630: [1, 414],
        631: [1, 415],
        632: [1, 416],
        633: [1, 417],
        634: [1, 419],
        635: [1, 420],
        636: [1, 421],
        637: [1, 422],
        638: [1, 423],
        639: [1, 424],
        640: [1, 425],
        641: [1, 426],
        642: [1, 427],
        643: [1, 428],
        644: [1, 429],
        645: [1, 430],
        646: [1, 431],
        647: [1, 432],
        648: [1, 433],
        649: [1, 434],
        650: [1, 435],
        651: [1, 436],
        652: [1, 437],
        653: [1, 438],
        654: [1, 440],
        655: [1, 441],
        656: [1, 444],
        657: [1, 445],
        658: [1, 446],
        659: [1, 447],
        660: [1, 449],
        661: [1, 450],
        662: [1, 451],
        663: [1, 452],
        664: [1, 453],
        665: [1, 454],
        666: [1, 455],
        667: [1, 456],
        668: [1, 457],
        669: [1, 458],
        670: [1, 459],
        671: [1, 460],
        672: [1, 461],
        673: [1, 463],
        674: [1, 464],
        675: [1, 465],
        676: [1, 466],
        677: [1, 467],
        678: [1, 468],
        679: [1, 469],
        680: [1, 470],
        681: [1, 472],
        682: [1, 473],
        683: [1, 474],
        684: [1, 475],
        685: [1, 476],
        686: [1, 477],
        687: [1, 478],
        688: [1, 479],
        689: [1, 480],
        690: [1, 481],
        691: [1, 482],
        692: [1, 483],
        693: [1, 484],
        694: [1, 485],
        695: [1, 486],
        696: [1, 487],
        697: [1, 488],
        698: [1, 489],
        699: [1, 490],
        700: [1, 491],
        701: [1, 492],
        702: [1, 493],
        703: [1, 494],
        704: [1, 495],
        705: [1, 496],
        706: [1, 497],
        707: [1, 498],
        708: [1, 499],
        709: [1, 500],
        710: [1, 501],
        711: [1, 502],
        712: [1, 503],
        713: [1, 504],
        714: [1, 505],
        715: [1, 506],
        716: [1, 507],
        717: [1, 508],
        718: [1, 510],
        719: [1, 511],
        720: [1, 512],
        721: [1, 513],
        722: [1, 514],
        723: [1, 515],
        724: [1, 516],
        725: [1, 517],
        726: [1, 518],
        727: [1, 519],
        728: [1, 520],
        729: [1, 521],
        730: [1, 522],
        731: [1, 523],
        732: [1, 524],
        733: [1, 526],
        734: [1, 527],
        735: [1, 528],
        736: [1, 529],
        737: [1, 530],
        738: [1, 531],
        739: [1, 532],
        740: [1, 533],
        741: [1, 534],
        742: [1, 535],
        743: [1, 536],
        744: [1, 537],
        745: [1, 538],
        746: [1, 539],
        747: [1, 540],
        748: [1, 541],
        749: [1, 542],
        750: [1, 543],
        751: [1, 544],
        752: [1, 545],
        753: [1, 546],
        754: [1, 547],
        755: [1, 548],
        756: [1, 550],
        757: [1, 551],
        758: [1, 552],
        759: [1, 553],
        760: [1, 554],
        761: [1, 555],
        762: [1, 556],
        763: [1, 557]
      }, {
        1: [2, 6]
      }, e(J, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 558,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(st, [2, 1041]), e(st, [2, 1042]), e(J, [2, 10]), {
        16: [1, 559]
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 560
      }, {
        405: [1, 561]
      }, e(Y, [2, 760]), {
        77: it
      }, {
        77: [1, 563]
      }, {
        77: ot
      }, {
        77: [1, 565]
      }, {
        77: [1, 566]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 567,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(qe, ut, {
        350: 568,
        156: ct
      }), {
        405: [1, 570]
      }, {
        2: r,
        3: 571,
        4: n,
        5: a
      }, {
        193: [1, 572]
      }, {
        2: r,
        3: 578,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        183: [1, 574],
        431: 585,
        473: 573,
        474: 575,
        475: 576,
        478: 577,
        482: 582,
        493: 579,
        497: 581
      }, {
        130: [1, 589],
        349: 586,
        353: [1, 588],
        410: [1, 587]
      }, {
        113: 591,
        132: se,
        183: [2, 1141],
        296: xe,
        471: 590
      }, e(ft, [2, 1135], {
        465: 592,
        3: 593,
        2: r,
        4: n,
        5: a
      }), {
        2: r,
        3: 594,
        4: n,
        5: a
      }, {
        4: [1, 595]
      }, {
        4: [1, 596]
      }, e(Z, [2, 502]), e(Y, [2, 686], {
        74: [1, 597]
      }), e(pt, [2, 687]), {
        2: r,
        3: 598,
        4: n,
        5: a
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 599
      }, {
        2: r,
        3: 600,
        4: n,
        5: a
      }, e(qe, bt, {
        398: 601,
        156: Et
      }), {
        405: [1, 603]
      }, {
        2: r,
        3: 604,
        4: n,
        5: a
      }, e(qe, bt, {
        398: 605,
        156: Et
      }), e(qe, bt, {
        398: 606,
        156: Et
      }), {
        2: r,
        3: 607,
        4: n,
        5: a
      }, e(gt, [2, 1129]), e(gt, [2, 1130]), e(Y, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 608,
        114: 625,
        327: 637,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: yt,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        146: l,
        154: Dt,
        156: h,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        189: d,
        266: f,
        267: p,
        290: b,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(We, [2, 288]), e(We, [2, 289]), e(We, [2, 290]), e(We, [2, 291]), e(We, [2, 292]), e(We, [2, 293]), e(We, [2, 294]), e(We, [2, 295]), e(We, [2, 296]), e(We, [2, 297]), e(We, [2, 298]), e(We, [2, 299]), e(We, [2, 300]), e(We, [2, 301]), e(We, [2, 302]), e(We, [2, 303]), e(We, [2, 304]), e(We, [2, 305]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        26: 654,
        27: 653,
        36: 649,
        40: 648,
        56: 165,
        77: ne,
        79: 75,
        89: u,
        94: 651,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        184: 99,
        189: d,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        264: 650,
        265: be,
        266: f,
        267: [1, 655],
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: [1, 652],
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        339: m,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 309]), e(We, [2, 310]), {
        77: [1, 656]
      }, e([2, 4, 5, 10, 53, 72, 74, 76, 78, 89, 93, 95, 98, 99, 107, 112, 115, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], tr, {
        77: it,
        116: [1, 657]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 658,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 659,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 661,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 662,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 283]), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 242, 243, 245, 247, 249, 265, 266, 267, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 415, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764, 765, 766], [2, 356]), e(rr, [2, 357]), e(rr, [2, 358]), e(rr, nr), e(rr, [2, 360]), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 361]), {
        2: r,
        3: 664,
        4: n,
        5: a,
        131: [1, 665],
        301: 663
      }, {
        2: r,
        3: 666,
        4: n,
        5: a
      }, e(rr, [2, 367]), e(rr, [2, 368]), {
        2: r,
        3: 667,
        4: n,
        5: a,
        77: ar,
        113: 669,
        131: ae,
        132: se,
        143: oe,
        152: le,
        181: pe,
        196: 670,
        201: 672,
        257: 671,
        294: we,
        295: Ie,
        296: xe,
        302: $e,
        419: 673,
        424: Pe
      }, {
        77: [1, 674]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 675,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        304: 676,
        307: 677,
        308: sr,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: [1, 679]
      }, {
        77: [1, 680]
      }, e(ir, [2, 624]), {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: or,
        111: 690,
        113: 688,
        131: ae,
        132: se,
        143: oe,
        144: 685,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 687,
        200: 693,
        201: 692,
        257: 689,
        258: 691,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        300: [1, 683],
        302: $e,
        419: 190,
        420: Fe,
        421: 681,
        422: 684,
        423: 686,
        424: Pe,
        427: 682
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 696,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 697,
        4: n,
        5: a,
        156: W,
        200: 698,
        290: X,
        291: K,
        292: Q,
        293: z
      }, {
        77: [2, 336]
      }, {
        77: [2, 337]
      }, {
        77: [2, 338]
      }, {
        77: [2, 339]
      }, {
        77: [2, 340]
      }, {
        77: [2, 341]
      }, {
        77: [2, 342]
      }, {
        77: [2, 343]
      }, {
        77: [2, 344]
      }, {
        2: r,
        3: 704,
        4: n,
        5: a,
        131: ur,
        132: cr,
        425: 699,
        426: [1, 700],
        428: 701
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 705
      }, {
        290: [1, 706]
      }, e(qe, [2, 472]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 707
      }, {
        231: [1, 709],
        454: 708
      }, {
        231: [2, 695]
      }, {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: Be,
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        209: 710,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        40: 711,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(lr, [2, 1091], {
        210: 712,
        76: [1, 713]
      }), e(hr, [2, 185], {
        3: 714,
        2: r,
        4: n,
        5: a,
        76: [1, 715],
        154: [1, 716]
      }), e(hr, [2, 189], {
        3: 717,
        2: r,
        4: n,
        5: a,
        76: [1, 718]
      }), e(hr, [2, 190], {
        3: 719,
        2: r,
        4: n,
        5: a,
        76: [1, 720]
      }), e(hr, [2, 193]), e(hr, [2, 194], {
        3: 721,
        2: r,
        4: n,
        5: a,
        76: [1, 722]
      }), e(hr, [2, 197], {
        3: 723,
        2: r,
        4: n,
        5: a,
        76: [1, 724]
      }), e([2, 4, 5, 10, 72, 74, 76, 78, 93, 98, 118, 128, 154, 162, 168, 169, 183, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764], dr, {
        77: it,
        116: fr
      }), e([2, 4, 5, 10, 72, 74, 76, 78, 93, 98, 118, 128, 162, 168, 169, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 306, 310, 602, 764], [2, 200]), e(Y, [2, 773]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 726
      }, e(pr, br, {
        81: 727,
        198: Er
      }), e(Je, [2, 1044]), e(gr, [2, 1057], {
        108: 729,
        190: [1, 730]
      }), e([10, 78, 183, 306, 310, 602, 764], br, {
        419: 190,
        81: 731,
        117: 732,
        3: 733,
        114: 736,
        144: 758,
        158: 768,
        160: 769,
        2: r,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        115: St,
        116: Tt,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        198: Er,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        420: Fe,
        424: Pe
      }), {
        353: [1, 782]
      }, {
        183: [1, 783]
      }, e(Y, [2, 594], {
        112: [1, 784]
      }), {
        405: [1, 785]
      }, {
        183: [1, 786]
      }, e(Y, [2, 598], {
        112: [1, 787],
        183: [1, 788]
      }), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 789
      }, {
        40: 790,
        74: [1, 791],
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(cn, [2, 70]), {
        76: [1, 792]
      }, e(Y, [2, 667]), {
        11: 106,
        306: [1, 793],
        602: j,
        764: H
      }, e(Y, [2, 665]), e(Y, [2, 666]), {
        2: r,
        3: 794,
        4: n,
        5: a
      }, e(Y, [2, 587]), {
        146: [1, 795]
      }, e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 95, 124, 128, 143, 145, 146, 148, 149, 152, 154, 156, 181, 183, 187, 189, 230, 266, 267, 290, 297, 302, 306, 310, 335, 338, 339, 343, 344, 356, 368, 369, 373, 374, 396, 400, 401, 402, 403, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 514, 515, 516, 517, 602, 764], dr, {
        116: fr
      }), e(Y, [2, 615]), e(Y, [2, 616]), e(Y, [2, 617]), e(Y, nr, {
        74: [1, 796]
      }), {
        77: ar,
        113: 669,
        131: ae,
        132: se,
        143: oe,
        152: le,
        181: pe,
        196: 670,
        201: 672,
        257: 671,
        294: we,
        295: Ie,
        296: xe,
        302: $e,
        419: 673,
        424: Pe
      }, e(ln, [2, 320]), e(ln, [2, 321]), e(ln, [2, 322]), e(ln, [2, 323]), e(ln, [2, 324]), e(ln, [2, 325]), e(ln, [2, 326]), e(Y, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        114: 625,
        327: 637,
        12: 797,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: yt,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        146: l,
        154: Dt,
        156: h,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        189: d,
        266: f,
        267: p,
        290: b,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(Y, [2, 675], {
        74: hn
      }), e(Y, [2, 676]), e(dn, [2, 354], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Y, [2, 677], {
        74: [1, 800]
      }), e(Y, [2, 678], {
        74: [1, 801]
      }), e(pt, [2, 683]), e(pt, [2, 685]), e(pt, [2, 679]), e(pt, [2, 680]), {
        114: 807,
        115: St,
        116: Tt,
        124: [1, 802],
        230: pn,
        429: 803,
        430: 804,
        433: bn
      }, {
        2: r,
        3: 808,
        4: n,
        5: a
      }, e(qe, [2, 656]), e(qe, [2, 657]), e(Y, [2, 614], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 100,
        4: n,
        5: a,
        504: 274,
        506: 809
      }, e(Y, [2, 754], {
        74: En
      }), e(gn, [2, 756]), e(Y, [2, 759]), e(Y, [2, 681], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(mn, tt, {
        186: 811,
        195: rt
      }), e(mn, tt, {
        186: 812,
        195: rt
      }), e(mn, tt, {
        186: 813,
        195: rt
      }), e(vn, [2, 1087], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        188: 814,
        174: 815,
        253: 816,
        94: 817,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), {
        77: [1, 819],
        131: ae,
        196: 818
      }, {
        2: r,
        3: 100,
        4: n,
        5: a,
        504: 274,
        506: 820
      }, e(Sn, [2, 153]), e(Sn, [2, 154]), e(Sn, [2, 155]), e(Sn, [2, 156]), e(Sn, [2, 157]), e(Sn, [2, 158]), e(Sn, [2, 159]), e(at, [2, 3]), e(at, [2, 774]), e(at, [2, 775]), e(at, [2, 776]), e(at, [2, 777]), e(at, [2, 778]), e(at, [2, 779]), e(at, [2, 780]), e(at, [2, 781]), e(at, [2, 782]), e(at, [2, 783]), e(at, [2, 784]), e(at, [2, 785]), e(at, [2, 786]), e(at, [2, 787]), e(at, [2, 788]), e(at, [2, 789]), e(at, [2, 790]), e(at, [2, 791]), e(at, [2, 792]), e(at, [2, 793]), e(at, [2, 794]), e(at, [2, 795]), e(at, [2, 796]), e(at, [2, 797]), e(at, [2, 798]), e(at, [2, 799]), e(at, [2, 800]), e(at, [2, 801]), e(at, [2, 802]), e(at, [2, 803]), e(at, [2, 804]), e(at, [2, 805]), e(at, [2, 806]), e(at, [2, 807]), e(at, [2, 808]), e(at, [2, 809]), e(at, [2, 810]), e(at, [2, 811]), e(at, [2, 812]), e(at, [2, 813]), e(at, [2, 814]), e(at, [2, 815]), e(at, [2, 816]), e(at, [2, 817]), e(at, [2, 818]), e(at, [2, 819]), e(at, [2, 820]), e(at, [2, 821]), e(at, [2, 822]), e(at, [2, 823]), e(at, [2, 824]), e(at, [2, 825]), e(at, [2, 826]), e(at, [2, 827]), e(at, [2, 828]), e(at, [2, 829]), e(at, [2, 830]), e(at, [2, 831]), e(at, [2, 832]), e(at, [2, 833]), e(at, [2, 834]), e(at, [2, 835]), e(at, [2, 836]), e(at, [2, 837]), e(at, [2, 838]), e(at, [2, 839]), e(at, [2, 840]), e(at, [2, 841]), e(at, [2, 842]), e(at, [2, 843]), e(at, [2, 844]), e(at, [2, 845]), e(at, [2, 846]), e(at, [2, 847]), e(at, [2, 848]), e(at, [2, 849]), e(at, [2, 850]), e(at, [2, 851]), e(at, [2, 852]), e(at, [2, 853]), e(at, [2, 854]), e(at, [2, 855]), e(at, [2, 856]), e(at, [2, 857]), e(at, [2, 858]), e(at, [2, 859]), e(at, [2, 860]), e(at, [2, 861]), e(at, [2, 862]), e(at, [2, 863]), e(at, [2, 864]), e(at, [2, 865]), e(at, [2, 866]), e(at, [2, 867]), e(at, [2, 868]), e(at, [2, 869]), e(at, [2, 870]), e(at, [2, 871]), e(at, [2, 872]), e(at, [2, 873]), e(at, [2, 874]), e(at, [2, 875]), e(at, [2, 876]), e(at, [2, 877]), e(at, [2, 878]), e(at, [2, 879]), e(at, [2, 880]), e(at, [2, 881]), e(at, [2, 882]), e(at, [2, 883]), e(at, [2, 884]), e(at, [2, 885]), e(at, [2, 886]), e(at, [2, 887]), e(at, [2, 888]), e(at, [2, 889]), e(at, [2, 890]), e(at, [2, 891]), e(at, [2, 892]), e(at, [2, 893]), e(at, [2, 894]), e(at, [2, 895]), e(at, [2, 896]), e(at, [2, 897]), e(at, [2, 898]), e(at, [2, 899]), e(at, [2, 900]), e(at, [2, 901]), e(at, [2, 902]), e(at, [2, 903]), e(at, [2, 904]), e(at, [2, 905]), e(at, [2, 906]), e(at, [2, 907]), e(at, [2, 908]), e(at, [2, 909]), e(at, [2, 910]), e(at, [2, 911]), e(at, [2, 912]), e(at, [2, 913]), e(at, [2, 914]), e(at, [2, 915]), e(at, [2, 916]), e(at, [2, 917]), e(at, [2, 918]), e(at, [2, 919]), e(at, [2, 920]), e(at, [2, 921]), e(at, [2, 922]), e(at, [2, 923]), e(at, [2, 924]), e(at, [2, 925]), e(at, [2, 926]), e(at, [2, 927]), e(at, [2, 928]), e(at, [2, 929]), e(at, [2, 930]), e(at, [2, 931]), e(at, [2, 932]), e(at, [2, 933]), e(at, [2, 934]), e(at, [2, 935]), e(at, [2, 936]), e(at, [2, 937]), e(at, [2, 938]), e(at, [2, 939]), e(at, [2, 940]), e(at, [2, 941]), e(at, [2, 942]), e(at, [2, 943]), e(at, [2, 944]), e(at, [2, 945]), e(at, [2, 946]), e(at, [2, 947]), e(at, [2, 948]), e(at, [2, 949]), e(at, [2, 950]), e(at, [2, 951]), e(at, [2, 952]), e(at, [2, 953]), e(at, [2, 954]), e(at, [2, 955]), e(at, [2, 956]), e(at, [2, 957]), e(at, [2, 958]), e(at, [2, 959]), e(at, [2, 960]), e(at, [2, 961]), e(at, [2, 962]), e(at, [2, 963]), e(at, [2, 964]), e(at, [2, 965]), e(at, [2, 966]), e(at, [2, 967]), e(at, [2, 968]), e(at, [2, 969]), e(at, [2, 970]), e(at, [2, 971]), e(at, [2, 972]), e(at, [2, 973]), e(at, [2, 974]), e(at, [2, 975]), e(at, [2, 976]), e(at, [2, 977]), e(at, [2, 978]), e(at, [2, 979]), e(at, [2, 980]), e(at, [2, 981]), e(at, [2, 982]), e(at, [2, 983]), e(at, [2, 984]), e(at, [2, 985]), e(at, [2, 986]), e(at, [2, 987]), e(at, [2, 988]), e(at, [2, 989]), e(at, [2, 990]), e(at, [2, 991]), e(at, [2, 992]), e(at, [2, 993]), e(at, [2, 994]), e(at, [2, 995]), e(at, [2, 996]), e(at, [2, 997]), e(at, [2, 998]), e(at, [2, 999]), e(at, [2, 1e3]), e(at, [2, 1001]), e(at, [2, 1002]), e(at, [2, 1003]), e(at, [2, 1004]), e(at, [2, 1005]), e(at, [2, 1006]), e(at, [2, 1007]), e(at, [2, 1008]), e(at, [2, 1009]), e(at, [2, 1010]), e(at, [2, 1011]), e(at, [2, 1012]), e(at, [2, 1013]), e(at, [2, 1014]), e(at, [2, 1015]), e(at, [2, 1016]), e(at, [2, 1017]), e(at, [2, 1018]), e(at, [2, 1019]), e(at, [2, 1020]), e(at, [2, 1021]), e(at, [2, 1022]), e(at, [2, 1023]), e(at, [2, 1024]), e(at, [2, 1025]), e(at, [2, 1026]), e(at, [2, 1027]), e(at, [2, 1028]), e(at, [2, 1029]), e(at, [2, 1030]), e(at, [2, 1031]), e(at, [2, 1032]), e(at, [2, 1033]), e(at, [2, 1034]), e(at, [2, 1035]), e(at, [2, 1036]), e(at, [2, 1037]), e(at, [2, 1038]), e(at, [2, 1039]), e(at, [2, 1040]), e(J, [2, 7]), e(J, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 821,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), {
        396: [1, 825],
        401: [1, 822],
        402: [1, 823],
        403: [1, 824]
      }, {
        2: r,
        3: 826,
        4: n,
        5: a
      }, e(mn, [2, 1111], {
        289: 827,
        767: 829,
        78: [1, 828],
        164: [1, 831],
        185: [1, 830]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 832,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 833,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 834,
        4: n,
        5: a,
        132: [1, 835]
      }, {
        2: r,
        3: 836,
        4: n,
        5: a,
        132: [1, 837]
      }, {
        2: r,
        3: 838,
        4: n,
        5: a,
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 839,
        4: n,
        5: a
      }, {
        154: [1, 840]
      }, e(Tn, ut, {
        350: 841,
        156: ct
      }), {
        230: [1, 842]
      }, {
        2: r,
        3: 843,
        4: n,
        5: a
      }, e(Y, [2, 729], {
        74: An
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 845,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(gn, [2, 732]), e(yn, [2, 1143], {
        419: 190,
        476: 846,
        144: 847,
        139: Nn,
        141: Nn,
        145: Xe,
        420: Fe,
        424: Pe
      }), {
        139: [1, 848],
        141: [1, 849]
      }, e(Cn, Rn, {
        490: 851,
        493: 852,
        77: [1, 850],
        137: ht
      }), e(On, [2, 1167], {
        494: 853,
        132: [1, 854]
      }), e(wn, [2, 1171], {
        496: 855,
        497: 856,
        152: dt
      }), e(wn, [2, 747]), e(In, [2, 739]), {
        2: r,
        3: 857,
        4: n,
        5: a,
        131: [1, 858]
      }, {
        2: r,
        3: 859,
        4: n,
        5: a
      }, {
        2: r,
        3: 860,
        4: n,
        5: a
      }, e(qe, ut, {
        350: 861,
        156: ct
      }), e(qe, ut, {
        350: 862,
        156: ct
      }), e(gt, [2, 491]), e(gt, [2, 492]), {
        183: [1, 863]
      }, {
        183: [2, 1142]
      }, e(xn, [2, 1137], {
        466: 864,
        469: 865,
        137: [1, 866]
      }), e(ft, [2, 1136]), e(Dn, kn, {
        510: 867,
        95: Ln,
        230: [1, 868],
        514: $n,
        515: Mn,
        516: Un
      }), {
        76: [1, 873]
      }, {
        76: [1, 874]
      }, {
        145: re,
        450: 875
      }, {
        4: _n,
        7: 879,
        76: [1, 877],
        272: 876,
        387: 878,
        389: Fn
      }, e(Y, [2, 456], {
        128: [1, 882]
      }), e(Y, [2, 579]), {
        2: r,
        3: 883,
        4: n,
        5: a
      }, {
        298: [1, 884]
      }, e(Tn, bt, {
        398: 885,
        156: Et
      }), e(Y, [2, 593]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 887,
        399: 886
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 887,
        399: 888
      }, e(Y, [2, 772]), e(J, [2, 669], {
        438: 889,
        310: [1, 890]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 891,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 892,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 893,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 894,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 895,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 896,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 897,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 898,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 899,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 900,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 901,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 902,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 903,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 904,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 905,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 906,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 907,
        4: n,
        5: a,
        77: [1, 909],
        131: ae,
        156: W,
        196: 908,
        200: 910,
        290: X,
        291: K,
        292: Q,
        293: z
      }, {
        2: r,
        3: 911,
        4: n,
        5: a,
        77: [1, 913],
        131: ae,
        156: W,
        196: 912,
        200: 914,
        290: X,
        291: K,
        292: Q,
        293: z
      }, e(Pn, [2, 440], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 915,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), e(Pn, [2, 441], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 916,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), e(Pn, [2, 442], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 917,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), e(Pn, [2, 443], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 918,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), e(Pn, qn, {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 919,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 920,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 921,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Pn, [2, 445], {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 922,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 923,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 924,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        164: [1, 926],
        166: [1, 928],
        328: 925,
        334: [1, 927]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 929,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 930,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: [1, 931],
        111: 934,
        145: Gn,
        156: W,
        200: 935,
        202: 933,
        290: X,
        291: K,
        292: Q,
        293: z,
        329: 932
      }, {
        99: [1, 937],
        297: [1, 938]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 939,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 940,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 941,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        4: _n,
        7: 879,
        272: 942,
        387: 878,
        389: Fn
      }, e(Vn, [2, 88]), e(Vn, [2, 89]), {
        78: [1, 943]
      }, {
        78: [1, 944]
      }, {
        78: [1, 945]
      }, {
        78: [1, 946],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(qe, Ge, {
        340: 207,
        77: ot,
        198: Ve
      }), {
        78: [2, 1107]
      }, {
        78: [2, 1108]
      }, {
        134: ee,
        135: te
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 947,
        152: le,
        154: he,
        156: W,
        158: 167,
        164: [1, 949],
        179: de,
        180: fe,
        181: pe,
        185: [1, 948],
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 950,
        4: n,
        5: a,
        149: Bn,
        180: [1, 952]
      }, e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 118, 122, 128, 129, 130, 131, 132, 134, 135, 137, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 314, 330, 331, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 416], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        332: Zt
      }), e(jn, [2, 417], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        180: Mt,
        312: _t,
        316: qt
      }), e(jn, [2, 418], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        180: Mt,
        312: _t,
        316: qt
      }), e(Hn, [2, 419], {
        114: 625,
        327: 637,
        316: qt
      }), e(Hn, [2, 420], {
        114: 625,
        327: 637,
        316: qt
      }), e(rr, [2, 365]), e(rr, [2, 1113]), e(rr, [2, 1114]), e(rr, [2, 366]), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 362]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 953,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ir, [2, 620]), e(ir, [2, 621]), e(ir, [2, 622]), e(ir, [2, 623]), e(ir, [2, 625]), {
        40: 954,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        304: 955,
        307: 677,
        308: sr,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        305: 956,
        306: Jn,
        307: 957,
        308: sr,
        310: Yn
      }, e(Wn, [2, 372]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 959,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 960,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        4: _n,
        7: 879,
        272: 961,
        387: 878,
        389: Fn
      }, e(ir, [2, 626]), {
        74: [1, 963],
        300: [1, 962]
      }, e(ir, [2, 642]), e(Xn, [2, 649]), e(Kn, [2, 627]), e(Kn, [2, 628]), e(Kn, [2, 629]), e(Kn, [2, 630]), e(Kn, [2, 631]), e(Kn, [2, 632]), e(Kn, [2, 633]), e(Kn, [2, 634]), e(Kn, [2, 635]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 964,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e([2, 4, 5, 10, 53, 72, 74, 76, 78, 89, 93, 95, 98, 99, 107, 112, 115, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 426, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], tr, {
        77: it,
        116: Qn
      }), {
        74: hn,
        300: [1, 966]
      }, e(zn, [2, 314], {
        77: it
      }), e(We, [2, 315]), {
        74: [1, 968],
        426: [1, 967]
      }, e(ir, [2, 639]), e(Zn, [2, 644]), {
        152: [1, 969]
      }, {
        152: [1, 970]
      }, {
        152: [1, 971]
      }, {
        40: 976,
        77: [1, 975],
        79: 75,
        89: u,
        143: oe,
        144: 979,
        145: Xe,
        149: ea,
        152: le,
        181: pe,
        184: 99,
        189: d,
        201: 980,
        302: $e,
        341: 972,
        342: 973,
        343: [1, 974],
        344: ta,
        419: 190,
        420: Fe,
        424: Pe
      }, e(qe, Ge, {
        340: 981,
        198: Ve
      }), {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        149: ea,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        341: 982,
        342: 983,
        344: ta,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        230: [1, 986],
        455: 985
      }, {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: Be,
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        209: 987,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        231: [2, 696]
      }, {
        78: [1, 988]
      }, e(hr, [2, 1093], {
        211: 989,
        3: 990,
        2: r,
        4: n,
        5: a
      }), e(lr, [2, 1092]), e(hr, [2, 183]), {
        2: r,
        3: 991,
        4: n,
        5: a
      }, {
        212: [1, 992]
      }, e(hr, [2, 187]), {
        2: r,
        3: 993,
        4: n,
        5: a
      }, e(hr, [2, 191]), {
        2: r,
        3: 994,
        4: n,
        5: a
      }, e(hr, [2, 195]), {
        2: r,
        3: 995,
        4: n,
        5: a
      }, e(hr, [2, 198]), {
        2: r,
        3: 996,
        4: n,
        5: a
      }, {
        2: r,
        3: 997,
        4: n,
        5: a
      }, {
        148: [1, 998]
      }, e(na, [2, 172], {
        82: 999,
        183: [1, 1e3]
      }), {
        2: r,
        3: 219,
        4: n,
        5: a,
        132: [1, 1005],
        143: oe,
        145: [1, 1006],
        152: le,
        156: W,
        181: pe,
        199: 1001,
        200: 1002,
        201: 1003,
        202: 1004,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        109: 1007,
        110: 1008,
        111: 1009,
        112: aa
      }, e(gr, [2, 1058]), e(sa, [2, 1049], {
        91: 1012,
        182: 1013,
        183: [1, 1014]
      }), e(Ye, [2, 1048], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e([2, 4, 5, 10, 72, 74, 76, 78, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 198, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 310, 420, 424, 602, 764], [2, 90], {
        77: [1, 1019]
      }), {
        119: [1, 1020]
      }, e(ca, [2, 93]), {
        2: r,
        3: 1021,
        4: n,
        5: a
      }, e(ca, [2, 95]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1022,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1023,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1025,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        125: 1024,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: [1, 1026]
      }, {
        77: [1, 1027]
      }, {
        77: [1, 1028]
      }, {
        77: [1, 1029]
      }, e(ca, [2, 104]), e(ca, [2, 105]), e(ca, [2, 106]), e(ca, [2, 107]), e(ca, [2, 108]), e(ca, [2, 109]), {
        2: r,
        3: 1030,
        4: n,
        5: a
      }, {
        2: r,
        3: 1031,
        4: n,
        5: a,
        133: [1, 1032]
      }, e(ca, [2, 113]), e(ca, [2, 114]), e(ca, [2, 115]), e(ca, [2, 116]), e(ca, [2, 117]), e(ca, [2, 118]), {
        2: r,
        3: 1033,
        4: n,
        5: a,
        77: ar,
        113: 669,
        131: ae,
        132: se,
        143: oe,
        152: le,
        181: pe,
        196: 670,
        201: 672,
        257: 671,
        294: we,
        295: Ie,
        296: xe,
        302: $e,
        419: 673,
        424: Pe
      }, {
        145: [1, 1034]
      }, {
        77: [1, 1035]
      }, {
        145: [1, 1036]
      }, e(ca, [2, 123]), {
        77: [1, 1037]
      }, {
        2: r,
        3: 1038,
        4: n,
        5: a
      }, {
        77: [1, 1039]
      }, {
        77: [1, 1040]
      }, {
        77: [1, 1041]
      }, {
        77: [1, 1042]
      }, {
        77: [1, 1043],
        164: [1, 1044]
      }, {
        77: [1, 1045]
      }, {
        77: [1, 1046]
      }, {
        77: [1, 1047]
      }, {
        77: [1, 1048]
      }, {
        77: [1, 1049]
      }, {
        77: [1, 1050]
      }, {
        77: [1, 1051]
      }, {
        77: [1, 1052]
      }, {
        77: [1, 1053]
      }, {
        77: [2, 1073]
      }, {
        77: [2, 1074]
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1054
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1055
      }, {
        113: 1056,
        132: se,
        296: xe
      }, e(Y, [2, 596], {
        112: [1, 1057]
      }), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1058
      }, {
        113: 1059,
        132: se,
        296: xe
      }, {
        2: r,
        3: 1060,
        4: n,
        5: a
      }, e(Y, [2, 693]), e(Y, [2, 68]), {
        2: r,
        3: 236,
        4: n,
        5: a,
        75: 1061
      }, {
        77: [1, 1062]
      }, e(Y, [2, 674]), e(Y, [2, 586]), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1065,
        143: la,
        145: ha,
        147: 1063,
        336: 1064,
        337: 1066
      }, {
        144: 1069,
        145: Xe,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Y, [2, 671]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1070,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Pn, qn, {
        255: 146,
        200: 147,
        256: 148,
        111: 149,
        254: 150,
        196: 151,
        257: 152,
        113: 153,
        258: 154,
        201: 155,
        202: 156,
        259: 157,
        260: 158,
        261: 159,
        144: 161,
        262: 162,
        263: 163,
        56: 165,
        158: 167,
        3: 168,
        419: 190,
        94: 1071,
        2: r,
        4: n,
        5: a,
        77: ne,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        179: de,
        180: fe,
        181: pe,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        420: Fe,
        424: Pe
      }), {
        113: 1072,
        132: se,
        296: xe
      }, {
        2: r,
        3: 266,
        4: n,
        5: a,
        446: 1073,
        447: Qe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1075,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        230: pn,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe,
        429: 1074,
        433: bn
      }, e(Y, [2, 651]), {
        114: 1077,
        115: St,
        116: Tt,
        124: [1, 1076]
      }, e(Y, [2, 663]), e(Y, [2, 664]), {
        2: r,
        3: 1079,
        4: n,
        5: a,
        77: da,
        131: fa,
        432: 1078
      }, {
        114: 807,
        115: St,
        116: Tt,
        124: [1, 1082],
        430: 1083
      }, e(Y, [2, 753], {
        74: En
      }), {
        2: r,
        3: 100,
        4: n,
        5: a,
        504: 1084
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        174: 1085,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 816,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        174: 1086,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 816,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        174: 1087,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 816,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(vn, [2, 151]), e(vn, [2, 1088], {
        74: pa
      }), e(ba, [2, 273]), e(ba, [2, 280], {
        114: 625,
        327: 637,
        3: 1090,
        113: 1092,
        2: r,
        4: n,
        5: a,
        76: [1, 1089],
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        131: [1, 1091],
        132: se,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        296: xe,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(et, [2, 1089], {
        197: 1093,
        765: [1, 1094]
      }), {
        131: ae,
        196: 1095
      }, {
        74: En,
        78: [1, 1096]
      }, e(J, [2, 11]), {
        148: [1, 1097],
        190: [1, 1098]
      }, {
        190: [1, 1099]
      }, {
        190: [1, 1100]
      }, {
        190: [1, 1101]
      }, e(Y, [2, 575], {
        76: [1, 1103],
        77: [1, 1102]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1104,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(rr, [2, 346]), e(mn, [2, 1112]), e(mn, [2, 1109]), e(mn, [2, 1110]), {
        74: hn,
        78: [1, 1105]
      }, {
        74: hn,
        78: [1, 1106]
      }, {
        74: [1, 1107]
      }, {
        74: [1, 1108]
      }, {
        74: [1, 1109]
      }, {
        74: [1, 1110]
      }, e(rr, [2, 353]), e(Y, [2, 580]), {
        298: [1, 1111]
      }, {
        2: r,
        3: 1112,
        4: n,
        5: a,
        113: 1113,
        132: se,
        296: xe
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1114
      }, {
        230: [1, 1115]
      }, {
        2: r,
        3: 578,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        431: 585,
        474: 1116,
        475: 576,
        478: 577,
        482: 582,
        493: 579,
        497: 581
      }, e(Y, [2, 730], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(gn, [2, 1145], {
        477: 1117,
        483: 1118,
        76: Ea
      }), e(yn, [2, 1144]), {
        2: r,
        3: 1122,
        4: n,
        5: a,
        132: lt,
        137: ht,
        144: 1121,
        145: Xe,
        152: dt,
        419: 190,
        420: Fe,
        424: Pe,
        475: 1120,
        493: 579,
        497: 581
      }, {
        2: r,
        3: 1122,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        431: 585,
        475: 1124,
        478: 1123,
        482: 582,
        493: 579,
        497: 581
      }, {
        2: r,
        3: 578,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        431: 585,
        473: 1125,
        474: 575,
        475: 576,
        478: 577,
        482: 582,
        493: 579,
        497: 581
      }, e(On, [2, 1163], {
        491: 1126,
        132: [1, 1127]
      }), e(Cn, [2, 1162]), e(wn, [2, 1169], {
        495: 1128,
        497: 1129,
        152: dt
      }), e(On, [2, 1168]), e(wn, [2, 746]), e(wn, [2, 1172]), e(Cn, [2, 749]), e(Cn, [2, 750]), e(wn, [2, 748]), e(In, [2, 740]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1130
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1131
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1132,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ga, [2, 1139], {
        467: 1133,
        113: 1134,
        132: se,
        296: xe
      }), e(xn, [2, 1138]), {
        2: r,
        3: 1135,
        4: n,
        5: a
      }, {
        335: ma,
        338: va,
        339: Sa,
        511: 1136
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1140
      }, e(Dn, [2, 765]), e(Dn, [2, 766]), e(Dn, [2, 767]), {
        129: [1, 1141]
      }, {
        266: [1, 1142]
      }, {
        266: [1, 1143]
      }, e(pt, [2, 688]), e(pt, [2, 689], {
        124: [1, 1144]
      }), {
        4: _n,
        7: 879,
        272: 1145,
        387: 878,
        389: Fn
      }, e([2, 4, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 542], {
        5: [1, 1146]
      }), e([2, 5, 10, 53, 72, 74, 76, 78, 89, 93, 95, 98, 99, 107, 112, 115, 116, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 297, 300, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 343, 356, 368, 369, 373, 374, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 539], {
        4: [1, 1148],
        77: [1, 1147]
      }), {
        77: [1, 1149]
      }, e(Ta, [2, 4]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1150,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Y, [2, 588]), e(Tn, [2, 568]), {
        2: r,
        3: 1151,
        4: n,
        5: a,
        113: 1152,
        132: se,
        296: xe
      }, e(Y, [2, 564], {
        74: Aa
      }), e(pt, [2, 566]), e(Y, [2, 613], {
        74: Aa
      }), e(Y, [2, 668]), e(Y, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 1154,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(ya, [2, 376], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(Hn, [2, 377], {
        114: 625,
        327: 637,
        316: qt
      }), e(ya, [2, 378], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(Na, [2, 379], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        314: [1, 1155],
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(Na, [2, 381], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        314: [1, 1156],
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(We, [2, 383], {
        114: 625,
        327: 637
      }), e(jn, [2, 384], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        180: Mt,
        312: _t,
        316: qt
      }), e(jn, [2, 385], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        180: Mt,
        312: _t,
        316: qt
      }), e(Ca, [2, 386], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        136: Ct,
        312: _t,
        316: qt
      }), e(Ca, [2, 387], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        136: Ct,
        312: _t,
        316: qt
      }), e(Ca, [2, 388], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        136: Ct,
        312: _t,
        316: qt
      }), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 112, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 389], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        136: Ct,
        312: _t,
        316: qt
      }), e(Ra, [2, 390], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt
      }), e(Ra, [2, 391], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt
      }), e(Ra, [2, 392], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt
      }), e(Ra, [2, 393], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt
      }), e(zn, [2, 394], {
        77: it
      }), e(We, [2, 395]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1157,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 397]), e(zn, [2, 398], {
        77: it
      }), e(We, [2, 399]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1158,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 401]), e(Oa, [2, 402], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 403], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 404], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 405], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e([2, 4, 5, 10, 53, 72, 89, 99, 124, 139, 140, 146, 154, 156, 170, 171, 189, 266, 267, 290, 306, 310, 320, 321, 322, 323, 324, 325, 326, 330, 331, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 517, 602, 764], wa, {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 407], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 408], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 409], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 410], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(Oa, [2, 411], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), {
        77: [1, 1159]
      }, {
        77: [2, 446]
      }, {
        77: [2, 447]
      }, {
        77: [2, 448]
      }, e(Ia, [2, 414], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        332: Zt
      }), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 107, 118, 122, 128, 129, 130, 131, 132, 134, 135, 137, 143, 145, 146, 148, 149, 150, 152, 156, 162, 164, 166, 168, 169, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 314, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 415], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        40: 1160,
        56: 165,
        77: ne,
        78: [1, 1162],
        79: 75,
        89: u,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1161,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        184: 99,
        189: d,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 428]), e(We, [2, 430]), e(We, [2, 437]), e(We, [2, 438]), {
        2: r,
        3: 667,
        4: n,
        5: a,
        77: [1, 1163]
      }, {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: [1, 1164],
        111: 934,
        145: Gn,
        156: W,
        200: 935,
        202: 1166,
        290: X,
        291: K,
        292: Q,
        293: z,
        329: 1165
      }, e(We, [2, 435]), e(Ia, [2, 432], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        332: Zt
      }), e(Ia, [2, 433], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        332: Zt
      }), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 99, 107, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 189, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 239, 242, 243, 245, 247, 266, 267, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 300, 306, 308, 309, 310, 314, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 464, 470, 505, 507, 508, 517, 602, 764], [2, 434], {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(We, [2, 436]), e(We, [2, 306]), e(We, [2, 307]), e(We, [2, 308]), e(We, [2, 421]), {
        74: hn,
        78: [1, 1167]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1168,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1169,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, xa), e(Da, [2, 286]), e(We, [2, 282]), {
        78: [1, 1171],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1172]
      }, {
        305: 1173,
        306: Jn,
        307: 957,
        308: sr,
        310: Yn
      }, {
        306: [1, 1174]
      }, e(Wn, [2, 371]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1175,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        309: [1, 1176],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        76: [1, 1177],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        74: [1, 1178]
      }, e(ir, [2, 640]), {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: or,
        111: 690,
        113: 688,
        131: ae,
        132: se,
        143: oe,
        144: 685,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 687,
        200: 693,
        201: 692,
        257: 689,
        258: 691,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        300: [1, 1179],
        302: $e,
        419: 190,
        420: Fe,
        422: 1180,
        423: 686,
        424: Pe
      }, {
        78: [1, 1181],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 1182,
        4: n,
        5: a,
        149: Bn
      }, e(We, [2, 364]), e(ir, [2, 637]), {
        2: r,
        3: 704,
        4: n,
        5: a,
        131: ur,
        132: cr,
        426: [1, 1183],
        428: 1184
      }, {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: or,
        111: 690,
        113: 688,
        131: ae,
        132: se,
        143: oe,
        144: 685,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 687,
        200: 693,
        201: 692,
        257: 689,
        258: 691,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e,
        419: 190,
        420: Fe,
        422: 1185,
        423: 686,
        424: Pe
      }, {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: or,
        111: 690,
        113: 688,
        131: ae,
        132: se,
        143: oe,
        144: 685,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 687,
        200: 693,
        201: 692,
        257: 689,
        258: 691,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e,
        419: 190,
        420: Fe,
        422: 1186,
        423: 686,
        424: Pe
      }, {
        2: r,
        3: 695,
        4: n,
        5: a,
        77: or,
        111: 690,
        113: 688,
        131: ae,
        132: se,
        143: oe,
        144: 685,
        145: Xe,
        152: le,
        156: W,
        181: pe,
        196: 687,
        200: 693,
        201: 692,
        257: 689,
        258: 691,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e,
        419: 190,
        420: Fe,
        422: 1187,
        423: 686,
        424: Pe
      }, {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1188,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 458], {
        74: La
      }), {
        149: ea,
        341: 1190,
        344: ta
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1194,
        100: 1191,
        111: 1193,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        345: 1192,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 466]), e($a, [2, 469]), e($a, [2, 470]), e(Ma, [2, 474]), e(Ma, [2, 475]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1195
      }, {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1196,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 462], {
        74: La
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1194,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        345: 1192,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        308: Ua,
        456: 1197,
        458: 1198,
        459: 1199
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1201,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        230: [2, 697]
      }, e(hr, [2, 181], {
        3: 1202,
        2: r,
        4: n,
        5: a,
        76: [1, 1203]
      }), e(hr, [2, 182]), e(hr, [2, 1094]), e(hr, [2, 184]), e(hr, [2, 186]), e(hr, [2, 188]), e(hr, [2, 192]), e(hr, [2, 196]), e(hr, [2, 199]), e([2, 4, 5, 10, 53, 72, 74, 76, 77, 78, 89, 93, 95, 98, 118, 124, 128, 143, 145, 146, 148, 149, 152, 154, 156, 162, 168, 169, 181, 183, 187, 189, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 245, 247, 266, 267, 290, 297, 302, 306, 310, 335, 338, 339, 343, 344, 356, 368, 369, 373, 374, 396, 400, 401, 402, 403, 404, 406, 408, 409, 417, 418, 420, 424, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 514, 515, 516, 517, 602, 764], [2, 201]), {
        2: r,
        3: 1204,
        4: n,
        5: a
      }, e(_a, [2, 1045], {
        83: 1205,
        92: 1206,
        93: [1, 1207],
        98: [1, 1208]
      }), {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: [1, 1210],
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        203: 1209,
        209: 1211,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(pr, [2, 164]), e(pr, [2, 165]), e(pr, [2, 166]), e(pr, [2, 167]), e(pr, [2, 168]), {
        2: r,
        3: 667,
        4: n,
        5: a
      }, e(Je, [2, 83], {
        74: [1, 1212]
      }), e(Fa, [2, 85]), e(Fa, [2, 86]), {
        113: 1213,
        132: se,
        296: xe
      }, e([10, 72, 74, 78, 93, 98, 118, 124, 128, 162, 168, 169, 183, 198, 206, 208, 222, 223, 224, 225, 226, 227, 228, 229, 232, 245, 247, 306, 310, 602, 764], tr, {
        116: Qn
      }), e(sa, [2, 73]), e(sa, [2, 1050]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1214,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ca, [2, 126]), e(ca, [2, 144]), e(ca, [2, 145]), e(ca, [2, 146]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        78: [2, 1065],
        94: 260,
        111: 149,
        113: 153,
        127: 1215,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1216,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: [1, 1217]
      }, e(ca, [2, 94]), e([2, 4, 5, 10, 72, 74, 76, 77, 78, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 198, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 310, 420, 424, 602, 764], [2, 96], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e([2, 4, 5, 10, 72, 74, 76, 77, 78, 112, 118, 122, 124, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 143, 145, 146, 148, 149, 150, 152, 154, 156, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 181, 183, 185, 187, 198, 280, 281, 282, 283, 284, 285, 286, 287, 288, 306, 310, 420, 424, 602, 764], [2, 97], {
        114: 625,
        327: 637,
        99: mt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1218],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1219,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Pa, [2, 1061], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1221,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        126: 1220,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1222,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1223,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1224,
        4: n,
        5: a
      }, e(ca, [2, 110]), e(ca, [2, 111]), e(ca, [2, 112]), e(ca, [2, 119]), {
        2: r,
        3: 1225,
        4: n,
        5: a
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1065,
        143: la,
        145: ha,
        147: 1226,
        336: 1064,
        337: 1066
      }, {
        2: r,
        3: 1227,
        4: n,
        5: a
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1228,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ca, [2, 125]), e(Pa, [2, 1067], {
        155: 1229
      }), e(Pa, [2, 1069], {
        157: 1230
      }), e(Pa, [2, 1071], {
        159: 1231
      }), e(Pa, [2, 1075], {
        161: 1232
      }), e(qa, Ga, {
        163: 1233,
        178: 1234
      }), {
        77: [1, 1235]
      }, e(Pa, [2, 1077], {
        165: 1236
      }), e(Pa, [2, 1079], {
        167: 1237
      }), e(qa, Ga, {
        178: 1234,
        163: 1238
      }), e(qa, Ga, {
        178: 1234,
        163: 1239
      }), e(qa, Ga, {
        178: 1234,
        163: 1240
      }), e(qa, Ga, {
        178: 1234,
        163: 1241
      }), {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1242,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        174: 1243,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 816,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Va, [2, 1081], {
        176: 1244
      }), e(Y, [2, 606], {
        183: [1, 1245]
      }), e(Y, [2, 602], {
        183: [1, 1246]
      }), e(Y, [2, 595]), {
        113: 1247,
        132: se,
        296: xe
      }, e(Y, [2, 604], {
        183: [1, 1248]
      }), e(Y, [2, 599]), e(Y, [2, 600], {
        112: [1, 1249]
      }), e(cn, [2, 69]), {
        40: 1250,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(Y, [2, 450], {
        74: Ba,
        128: [1, 1251]
      }), e(ja, [2, 451]), {
        124: [1, 1253]
      }, {
        2: r,
        3: 1254,
        4: n,
        5: a
      }, e(qe, [2, 1115]), e(qe, [2, 1116]), e(Y, [2, 618]), e(dn, [2, 355], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Oa, wa, {
        114: 625,
        327: 637,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        332: Zt
      }), e(pt, [2, 682]), e(pt, [2, 684]), e(Y, [2, 650]), e(Y, [2, 652], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1255,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1079,
        4: n,
        5: a,
        77: da,
        131: fa,
        432: 1256
      }, e(Ha, [2, 659]), e(Ha, [2, 660]), e(Ha, [2, 661]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1257,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1258,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        114: 1077,
        115: St,
        116: Tt,
        124: [1, 1259]
      }, e(gn, [2, 755]), e(vn, [2, 148], {
        74: pa
      }), e(vn, [2, 149], {
        74: pa
      }), e(vn, [2, 150], {
        74: pa
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 1260,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1261,
        4: n,
        5: a,
        113: 1263,
        131: [1, 1262],
        132: se,
        296: xe
      }, e(ba, [2, 275]), e(ba, [2, 277]), e(ba, [2, 279]), e(et, [2, 160]), e(et, [2, 1090]), {
        78: [1, 1264]
      }, e(nt, [2, 758]), {
        2: r,
        3: 1265,
        4: n,
        5: a
      }, {
        2: r,
        3: 1266,
        4: n,
        5: a
      }, {
        2: r,
        3: 1268,
        4: n,
        5: a,
        384: 1267
      }, {
        2: r,
        3: 1268,
        4: n,
        5: a,
        384: 1269
      }, {
        2: r,
        3: 1270,
        4: n,
        5: a
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1271,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1272,
        4: n,
        5: a
      }, {
        74: hn,
        78: [1, 1273]
      }, e(rr, [2, 347]), e(rr, [2, 348]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1274,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1275,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1276,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1277,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Tn, [2, 504]), e(Y, Ja, {
        407: 1278,
        76: Ya,
        77: [1, 1279]
      }), e(Y, Ja, {
        407: 1281,
        76: Ya
      }), {
        77: [1, 1282]
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1283
      }, e(gn, [2, 731]), e(gn, [2, 733]), e(gn, [2, 1146]), {
        143: ze,
        145: Ze,
        431: 1284
      }, e(Wa, [2, 1147], {
        419: 190,
        479: 1285,
        144: 1286,
        145: Xe,
        420: Fe,
        424: Pe
      }), {
        76: Ea,
        139: [2, 1151],
        481: 1287,
        483: 1288
      }, e([10, 74, 76, 78, 132, 139, 145, 152, 306, 310, 420, 424, 602, 764], Rn, {
        490: 851,
        493: 852,
        137: ht
      }), e(gn, [2, 736]), e(gn, Nn), {
        74: An,
        78: [1, 1289]
      }, e(wn, [2, 1165], {
        492: 1290,
        497: 1291,
        152: dt
      }), e(On, [2, 1164]), e(wn, [2, 745]), e(wn, [2, 1170]), e(Y, [2, 490], {
        77: [1, 1292]
      }), {
        76: [1, 1294],
        77: [1, 1293]
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        148: [1, 1295],
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ka, Xa, {
        79: 75,
        184: 99,
        468: 1296,
        40: 1299,
        89: u,
        146: Ka,
        189: d,
        470: Qa
      }), e(ga, [2, 1140]), e(xn, [2, 723]), {
        230: [1, 1300]
      }, e(za, [2, 769]), e(za, [2, 770]), e(za, [2, 771]), e(Dn, kn, {
        510: 1301,
        95: Ln,
        514: $n,
        515: Mn,
        516: Un
      }), e(Dn, [2, 768]), e(Y, [2, 312]), e(Y, [2, 313]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1302,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(pt, [2, 690], {
        124: [1, 1303]
      }), e(Ta, [2, 541]), {
        131: [1, 1305],
        388: 1304,
        390: [1, 1306]
      }, e(Ta, [2, 5]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1194,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        345: 1307,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Y, [2, 455], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Y, [2, 589]), e(Y, [2, 590]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1308
      }, e(Y, [2, 670]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1309,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1310,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        78: [1, 1311],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1312],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        40: 1313,
        56: 165,
        77: ne,
        79: 75,
        89: u,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1314,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        184: 99,
        189: d,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        78: [1, 1315]
      }, {
        74: hn,
        78: [1, 1316]
      }, e(We, [2, 426]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1317,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        40: 1318,
        56: 165,
        77: ne,
        78: [1, 1320],
        79: 75,
        89: u,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1319,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        184: 99,
        189: d,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 429]), e(We, [2, 431]), e(We, Za, {
        275: 1321,
        276: es
      }), {
        78: [1, 1323],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1324],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 1325,
        4: n,
        5: a,
        180: [1, 1326]
      }, e(ir, [2, 619]), e(We, [2, 363]), {
        306: [1, 1327]
      }, e(We, [2, 370]), {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        306: [2, 374],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1328,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        4: _n,
        7: 879,
        272: 1329,
        387: 878,
        389: Fn
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1330,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ir, [2, 641]), e(Xn, [2, 648]), e(Kn, [2, 636]), e(Da, xa), e(ir, [2, 638]), e(Zn, [2, 643]), e(Zn, [2, 645]), e(Zn, [2, 646]), e(Zn, [2, 647]), e(ka, [2, 457], {
        74: La
      }), {
        77: [1, 1332],
        143: oe,
        144: 1333,
        145: Xe,
        152: le,
        181: pe,
        201: 1334,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 463]), {
        74: ts,
        78: [1, 1335]
      }, {
        74: rs,
        78: [1, 1337]
      }, e([74, 78, 99, 112, 115, 116, 123, 124, 133, 136, 138, 139, 140, 141, 142, 154, 170, 171, 179, 180, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333], ns), e(as, [2, 479], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        40: 1341,
        77: ra,
        79: 75,
        89: u,
        143: oe,
        144: 979,
        145: Xe,
        149: ea,
        152: le,
        181: pe,
        184: 99,
        189: d,
        201: 980,
        302: $e,
        341: 1339,
        342: 1340,
        344: ta,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 461], {
        74: La
      }), e(Y, [2, 717], {
        457: 1342,
        458: 1343,
        459: 1344,
        308: Ua,
        464: [1, 1345]
      }), e(ss, [2, 701]), e(ss, [2, 702]), {
        154: [1, 1347],
        460: [1, 1346]
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        308: [2, 698],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(hr, [2, 179]), {
        2: r,
        3: 1348,
        4: n,
        5: a
      }, e(Y, [2, 574]), e(is, [2, 238], {
        84: 1349,
        128: [1, 1350]
      }), e(_a, [2, 1046]), {
        77: [1, 1351]
      }, {
        77: [1, 1352]
      }, e(na, [2, 169], {
        204: 1353,
        215: 1355,
        205: 1356,
        216: 1357,
        221: 1360,
        74: os,
        206: us,
        208: cs,
        222: ls,
        223: hs,
        224: ds,
        225: fs,
        226: ps,
        227: bs,
        228: Es,
        229: gs
      }), {
        2: r,
        3: 219,
        4: n,
        5: a,
        40: 711,
        77: Be,
        79: 75,
        89: u,
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        184: 99,
        189: d,
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        203: 1369,
        209: 1211,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ms, [2, 177]), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        110: 1370,
        111: 1009,
        112: aa
      }, e(Fa, [2, 87]), e(sa, [2, 147], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        78: [1, 1371]
      }, {
        74: hn,
        78: [2, 1066]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        78: [2, 1059],
        94: 1376,
        111: 149,
        113: 153,
        120: 1372,
        121: 1373,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1374,
        242: [1, 1375],
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ca, [2, 98]), e(Pa, [2, 1062], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1377],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1378,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Pa, [2, 1063], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), {
        78: [1, 1379],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1380],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1381]
      }, e(ca, [2, 120]), {
        74: Ba,
        78: [1, 1382]
      }, e(ca, [2, 122]), {
        74: hn,
        78: [1, 1383]
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1384],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1385,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1386],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1387,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1388],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1389,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1390],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1391,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        74: vs,
        78: [1, 1392]
      }, e(as, [2, 143], {
        419: 190,
        3: 733,
        114: 736,
        144: 758,
        158: 768,
        160: 769,
        117: 1394,
        2: r,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        115: St,
        116: Tt,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        420: Fe,
        424: Pe
      }), e(qa, Ga, {
        178: 1234,
        163: 1395
      }), {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1396],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1397,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        78: [1, 1398],
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1399,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        74: vs,
        78: [1, 1400]
      }, {
        74: vs,
        78: [1, 1401]
      }, {
        74: vs,
        78: [1, 1402]
      }, {
        74: vs,
        78: [1, 1403]
      }, {
        78: [1, 1404],
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }, {
        74: pa,
        78: [1, 1405]
      }, {
        2: r,
        3: 733,
        4: n,
        5: a,
        72: mr,
        74: [1, 1406],
        76: vr,
        77: Sr,
        112: Tr,
        114: 736,
        115: St,
        116: Tt,
        117: 1407,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        144: 758,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        158: 768,
        160: 769,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1408,
        4: n,
        5: a
      }, {
        2: r,
        3: 1409,
        4: n,
        5: a
      }, e(Y, [2, 597]), {
        2: r,
        3: 1410,
        4: n,
        5: a
      }, {
        113: 1411,
        132: se,
        296: xe
      }, {
        78: [1, 1412]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1413,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1065,
        143: la,
        145: ha,
        336: 1414,
        337: 1066
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1415,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        124: [1, 1416]
      }, e(Y, [2, 653], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Ha, [2, 658]), {
        78: [1, 1417],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(Y, [2, 654], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1418,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ba, [2, 272]), e(ba, [2, 274]), e(ba, [2, 276]), e(ba, [2, 278]), e(et, [2, 161]), e(Y, [2, 569]), {
        148: [1, 1419]
      }, e(Y, [2, 570]), e(gn, [2, 536], {
        387: 878,
        7: 879,
        272: 1420,
        4: _n,
        386: [1, 1421],
        389: Fn
      }), e(Y, [2, 571]), e(Y, [2, 573]), {
        74: hn,
        78: [1, 1422]
      }, e(Y, [2, 577]), e(rr, [2, 345]), {
        74: [1, 1423],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        74: [1, 1424],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        74: [1, 1425],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        74: [1, 1426],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(Y, [2, 581]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1427,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1428,
        4: n,
        5: a
      }, e(Y, [2, 583]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1376,
        111: 149,
        113: 153,
        120: 1429,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1374,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: [1, 1430]
      }, {
        2: r,
        3: 1431,
        4: n,
        5: a
      }, {
        76: Ea,
        139: [2, 1149],
        480: 1432,
        483: 1433
      }, e(Wa, [2, 1148]), {
        139: [1, 1434]
      }, {
        139: [2, 1152]
      }, e(gn, [2, 737]), e(wn, [2, 744]), e(wn, [2, 1166]), {
        2: r,
        3: 1268,
        4: n,
        5: a,
        76: [1, 1437],
        351: 1435,
        358: 1436,
        384: 1438
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1439,
        111: 1440
      }, {
        40: 1441,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1442,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 722]), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1065,
        143: la,
        145: ha,
        147: 1443,
        336: 1064,
        337: 1066
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1444,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 727]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1445
      }, {
        335: ma,
        338: va,
        339: Sa,
        511: 1446
      }, e(pt, [2, 691], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1447,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        74: [1, 1448],
        78: [1, 1449]
      }, e(as, [2, 543]), e(as, [2, 544]), {
        74: rs,
        78: [1, 1450]
      }, e(pt, [2, 565]), e(ya, [2, 380], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(ya, [2, 382], {
        114: 625,
        327: 637,
        115: St,
        116: Tt,
        123: At,
        133: Nt,
        136: Ct,
        138: Rt,
        141: It,
        142: xt,
        179: $t,
        180: Mt,
        312: _t,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt
      }), e(We, [2, 396]), e(We, [2, 400]), {
        78: [1, 1451]
      }, {
        74: hn,
        78: [1, 1452]
      }, e(We, [2, 422]), e(We, [2, 424]), {
        78: [1, 1453],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1454]
      }, {
        74: hn,
        78: [1, 1455]
      }, e(We, [2, 427]), e(We, [2, 327]), {
        77: [1, 1456]
      }, e(We, Za, {
        275: 1457,
        276: es
      }), e(We, Za, {
        275: 1458,
        276: es
      }), e(Da, [2, 284]), e(We, [2, 281]), e(We, [2, 369]), e(Wn, [2, 373], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        74: [1, 1460],
        78: [1, 1459]
      }, {
        74: [1, 1462],
        78: [1, 1461],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        2: r,
        3: 1325,
        4: n,
        5: a
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1194,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        345: 1463,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Ma, [2, 477]), e(Ma, [2, 478]), {
        40: 1466,
        77: ra,
        79: 75,
        89: u,
        143: oe,
        144: 979,
        145: Xe,
        149: ea,
        152: le,
        181: pe,
        184: 99,
        189: d,
        201: 980,
        302: $e,
        341: 1464,
        342: 1465,
        344: ta,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1467
      }, e(Ma, [2, 473]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1468,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1469,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 460], {
        74: La
      }), e(ka, [2, 467]), e(Y, [2, 694]), e(ss, [2, 699]), e(ss, [2, 700]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 817,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        174: 1470,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        253: 816,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        170: [1, 1472],
        309: [1, 1471]
      }, {
        460: [1, 1473]
      }, e(hr, [2, 180]), e(Ss, [2, 240], {
        85: 1474,
        232: [1, 1475]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1476,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1477,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1478,
        4: n,
        5: a
      }, e(na, [2, 170], {
        216: 1357,
        221: 1360,
        215: 1479,
        205: 1480,
        206: us,
        208: cs,
        222: ls,
        223: hs,
        224: ds,
        225: fs,
        226: ps,
        227: bs,
        228: Es,
        229: gs
      }), {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: Be,
        132: je,
        143: oe,
        144: 212,
        145: ue,
        152: le,
        156: W,
        181: pe,
        199: 213,
        200: 215,
        201: 214,
        202: 217,
        209: 1481,
        213: He,
        214: 218,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Ts, [2, 205]), e(Ts, [2, 206]), {
        2: r,
        3: 219,
        4: n,
        5: a,
        77: [1, 1486],
        143: oe,
        144: 1484,
        145: ue,
        152: le,
        156: W,
        181: pe,
        199: 1483,
        200: 1487,
        201: 1485,
        202: 1488,
        217: 1482,
        290: X,
        291: K,
        292: Q,
        293: z,
        302: $e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        207: [1, 1489],
        223: As
      }, {
        207: [1, 1491],
        223: ys
      }, e(Ns, [2, 222]), {
        206: [1, 1495],
        208: [1, 1494],
        221: 1493,
        223: hs,
        224: ds,
        225: fs,
        226: ps,
        227: bs,
        228: Es,
        229: gs
      }, e(Ns, [2, 224]), {
        223: [1, 1496]
      }, {
        208: [1, 1498],
        223: [1, 1497]
      }, {
        208: [1, 1500],
        223: [1, 1499]
      }, {
        208: [1, 1501]
      }, {
        223: [1, 1502]
      }, {
        223: [1, 1503]
      }, {
        74: os,
        204: 1504,
        205: 1356,
        206: us,
        208: cs,
        215: 1355,
        216: 1357,
        221: 1360,
        222: ls,
        223: hs,
        224: ds,
        225: fs,
        226: ps,
        227: bs,
        228: Es,
        229: gs
      }, e(Fa, [2, 84]), e(ca, [2, 100]), {
        74: Cs,
        78: [1, 1505]
      }, {
        78: [1, 1507]
      }, e(Rs, [2, 261]), {
        78: [2, 1060]
      }, e(Rs, [2, 263], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        242: [1, 1508],
        243: [1, 1509],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(ca, [2, 99]), e(Pa, [2, 1064], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 101]), e(ca, [2, 102]), e(ca, [2, 103]), e(ca, [2, 121]), e(ca, [2, 124]), e(ca, [2, 127]), e(Pa, [2, 1068], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 128]), e(Pa, [2, 1070], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 129]), e(Pa, [2, 1072], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 130]), e(Pa, [2, 1076], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 131]), e(qa, [2, 1083], {
        177: 1510
      }), e(qa, [2, 1086], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), {
        74: vs,
        78: [1, 1511]
      }, e(ca, [2, 133]), e(Pa, [2, 1078], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 134]), e(Pa, [2, 1080], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 135]), e(ca, [2, 136]), e(ca, [2, 137]), e(ca, [2, 138]), e(ca, [2, 139]), e(ca, [2, 140]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 260,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        151: 1512,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Va, [2, 1082], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(Y, [2, 607]), e(Y, [2, 603]), e(Y, [2, 605]), e(Y, [2, 601]), e(cn, [2, 71]), e(Y, [2, 449], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(ja, [2, 452]), e(ja, [2, 453], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1513,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Ha, [2, 662]), e(Y, [2, 655], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 1514,
        4: n,
        5: a
      }, e(gn, [2, 545], {
        385: 1515,
        391: 1516,
        392: 1517,
        366: 1525,
        154: Os,
        187: ws,
        230: Is,
        297: xs,
        343: Ds,
        356: ks,
        368: Ls,
        369: $s,
        373: Ms,
        374: Us
      }), e(gn, [2, 535]), e(Y, [2, 576], {
        76: [1, 1529]
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1530,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1531,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1532,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1533,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        74: hn,
        78: [1, 1534]
      }, e(Y, [2, 585]), {
        74: Cs,
        78: [1, 1535]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1376,
        111: 149,
        113: 153,
        120: 1536,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1374,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e([10, 74, 78, 139, 306, 310, 602, 764], [2, 741]), {
        139: [1, 1537]
      }, {
        139: [2, 1150]
      }, {
        2: r,
        3: 1122,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        431: 585,
        475: 1124,
        478: 1538,
        482: 582,
        493: 579,
        497: 581
      }, {
        78: [1, 1539]
      }, {
        74: [1, 1540],
        78: [2, 506]
      }, {
        40: 1541,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(as, [2, 532]), {
        74: ts,
        78: [1, 1542]
      }, e(ms, ns), e(Y, [2, 1133], {
        412: 1543,
        413: 1544,
        72: _s
      }), e(ka, Xa, {
        79: 75,
        184: 99,
        114: 625,
        327: 637,
        40: 1299,
        468: 1546,
        89: u,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        146: Ka,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        189: d,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er,
        470: Qa
      }), e(ka, [2, 725], {
        74: Ba
      }), e(ka, [2, 726], {
        74: hn
      }), e([10, 53, 72, 89, 124, 146, 156, 189, 266, 267, 290, 306, 310, 335, 338, 339, 396, 400, 401, 404, 406, 408, 409, 417, 418, 434, 436, 437, 439, 440, 441, 442, 443, 447, 448, 451, 452, 505, 507, 508, 517, 602, 764], [2, 1181], {
        512: 1547,
        3: 1548,
        2: r,
        4: n,
        5: a,
        76: [1, 1549]
      }), e(Fs, [2, 1183], {
        513: 1550,
        76: [1, 1551]
      }), e(pt, [2, 692], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        131: [1, 1552]
      }, e(Ta, [2, 538]), e(Ta, [2, 540]), e(We, [2, 412]), e(We, [2, 413]), e(We, [2, 439]), e(We, [2, 423]), e(We, [2, 425]), {
        118: Ps,
        277: 1553,
        278: 1554,
        279: [1, 1555]
      }, e(We, [2, 328]), e(We, [2, 329]), e(We, [2, 316]), {
        131: [1, 1557]
      }, e(We, [2, 318]), {
        131: [1, 1558]
      }, {
        74: rs,
        78: [1, 1559]
      }, {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1560,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ka, [2, 465], {
        74: La
      }), e(ka, [2, 468]), e(ms, [2, 488]), e(as, [2, 480], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(ka, [2, 459], {
        74: La
      }), e(Y, [2, 718], {
        74: pa,
        198: [1, 1561]
      }), {
        335: qs,
        338: Gs,
        461: 1562
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1565,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        119: [1, 1567],
        170: [1, 1568],
        309: [1, 1566]
      }, e(Vs, [2, 259], {
        86: 1569,
        118: [1, 1570]
      }), {
        119: [1, 1571]
      }, e(is, [2, 239], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        95: [1, 1572],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        95: [1, 1573]
      }, e(Ts, [2, 203]), e(Ts, [2, 204]), e(ms, [2, 178]), e(Ts, [2, 237], {
        218: 1574,
        230: [1, 1575],
        231: [1, 1576]
      }), e(Bs, [2, 208], {
        3: 1577,
        2: r,
        4: n,
        5: a,
        76: [1, 1578]
      }), e(js, [2, 1095], {
        219: 1579,
        76: [1, 1580]
      }), {
        2: r,
        3: 1581,
        4: n,
        5: a,
        76: [1, 1582]
      }, {
        40: 1583,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(Bs, [2, 216], {
        3: 1584,
        2: r,
        4: n,
        5: a,
        76: [1, 1585]
      }), e(Bs, [2, 219], {
        3: 1586,
        2: r,
        4: n,
        5: a,
        76: [1, 1587]
      }), {
        77: [1, 1588]
      }, e(Ns, [2, 234]), {
        77: [1, 1589]
      }, e(Ns, [2, 230]), e(Ns, [2, 223]), {
        223: ys
      }, {
        223: As
      }, e(Ns, [2, 225]), e(Ns, [2, 226]), {
        223: [1, 1590]
      }, e(Ns, [2, 228]), {
        223: [1, 1591]
      }, {
        223: [1, 1592]
      }, e(Ns, [2, 232]), e(Ns, [2, 233]), {
        78: [1, 1593],
        205: 1480,
        206: us,
        208: cs,
        215: 1479,
        216: 1357,
        221: 1360,
        222: ls,
        223: hs,
        224: ds,
        225: fs,
        226: ps,
        227: bs,
        228: Es,
        229: gs
      }, e(ca, [2, 91]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1376,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1594,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ca, [2, 92]), e(Rs, [2, 264]), {
        244: [1, 1595]
      }, e(as, [2, 142], {
        419: 190,
        3: 733,
        114: 736,
        144: 758,
        158: 768,
        160: 769,
        117: 1596,
        2: r,
        4: n,
        5: a,
        72: mr,
        76: vr,
        77: Sr,
        112: Tr,
        115: St,
        116: Tt,
        118: Ar,
        122: yr,
        123: Nr,
        124: Cr,
        128: Rr,
        129: Or,
        130: wr,
        131: Ir,
        132: xr,
        133: Dr,
        134: kr,
        135: Lr,
        136: $r,
        137: Mr,
        138: Ur,
        139: _r,
        140: Fr,
        141: Pr,
        142: qr,
        143: Gr,
        145: Vr,
        146: Br,
        148: jr,
        149: Hr,
        150: Jr,
        152: Yr,
        154: Wr,
        156: Xr,
        162: Kr,
        164: Qr,
        166: zr,
        168: Zr,
        169: en,
        170: tn,
        171: rn,
        172: nn,
        173: an,
        175: sn,
        185: on,
        187: un,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        420: Fe,
        424: Pe
      }), e(ca, [2, 132]), {
        74: hn,
        78: [1, 1597]
      }, e(ja, [2, 454], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Y, [2, 572]), e(gn, [2, 534]), e(gn, [2, 546], {
        366: 1525,
        392: 1598,
        154: Os,
        187: ws,
        230: Is,
        297: xs,
        343: Ds,
        356: ks,
        368: Ls,
        369: $s,
        373: Ms,
        374: Us
      }), e(ln, [2, 548]), {
        370: [1, 1599]
      }, {
        370: [1, 1600]
      }, {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1601
      }, e(ln, [2, 554], {
        77: [1, 1602]
      }), {
        2: r,
        3: 114,
        4: n,
        5: a,
        77: [1, 1604],
        113: 251,
        131: ae,
        132: se,
        143: oe,
        152: le,
        156: W,
        181: pe,
        196: 250,
        200: 1605,
        201: 254,
        257: 252,
        258: 253,
        265: Ke,
        274: 1603,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e
      }, e(ln, [2, 558]), {
        297: [1, 1606]
      }, e(ln, [2, 560]), e(ln, [2, 561]), {
        335: [1, 1607]
      }, {
        77: [1, 1608]
      }, {
        2: r,
        3: 1609,
        4: n,
        5: a
      }, {
        78: [1, 1610],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1611],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1612],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        78: [1, 1613],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(Y, Ja, {
        407: 1614,
        76: Ya
      }), e(Y, [2, 591]), {
        74: Cs,
        78: [1, 1615]
      }, {
        2: r,
        3: 1122,
        4: n,
        5: a,
        132: lt,
        137: ht,
        143: ze,
        145: Ze,
        152: dt,
        431: 585,
        475: 1124,
        478: 1616,
        482: 582,
        493: 579,
        497: 581
      }, e(gn, [2, 735]), e(Y, [2, 493], {
        352: 1617,
        354: 1618,
        355: 1619,
        4: Hs,
        243: Js,
        343: Ys,
        356: Ws
      }), e(Xs, Ks, {
        3: 1268,
        359: 1624,
        384: 1625,
        360: 1626,
        361: 1627,
        2: r,
        4: n,
        5: a,
        367: Qs
      }), {
        78: [2, 507]
      }, {
        76: [1, 1629]
      }, e(Y, [2, 609]), e(Y, [2, 1134]), {
        368: [1, 1631],
        414: [1, 1630]
      }, e(ka, [2, 728]), e(Y, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 1632,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(Y, [2, 762]), e(Fs, [2, 1182]), e(Y, t, {
        17: 5,
        18: 7,
        19: 8,
        20: 9,
        21: 10,
        22: 11,
        23: 12,
        24: 13,
        25: 14,
        26: 15,
        27: 16,
        28: 17,
        29: 18,
        30: 19,
        31: 20,
        32: 21,
        33: 22,
        34: 23,
        35: 24,
        36: 25,
        37: 26,
        38: 27,
        39: 28,
        40: 29,
        41: 30,
        42: 31,
        43: 32,
        44: 33,
        45: 34,
        46: 35,
        47: 36,
        48: 37,
        49: 38,
        50: 39,
        51: 40,
        52: 41,
        54: 43,
        55: 44,
        56: 45,
        57: 46,
        58: 47,
        59: 48,
        60: 49,
        61: 50,
        62: 51,
        63: 52,
        64: 53,
        65: 54,
        66: 55,
        67: 56,
        68: 57,
        69: 58,
        70: 59,
        71: 60,
        79: 75,
        504: 95,
        184: 99,
        3: 100,
        12: 1633,
        2: r,
        4: n,
        5: a,
        53: i,
        72: o,
        89: u,
        124: c,
        146: l,
        156: h,
        189: d,
        266: f,
        267: p,
        290: b,
        335: E,
        338: g,
        339: m,
        396: v,
        400: S,
        401: T,
        404: A,
        406: y,
        408: N,
        409: C,
        417: R,
        418: O,
        434: w,
        436: I,
        437: x,
        439: D,
        440: k,
        441: L,
        442: $,
        443: M,
        447: U,
        448: _,
        451: F,
        452: P,
        505: q,
        507: G,
        508: V,
        517: B
      }), e(Fs, [2, 1184]), {
        78: [1, 1634]
      }, {
        78: [1, 1635],
        118: Ps,
        278: 1636
      }, {
        78: [1, 1637]
      }, {
        119: [1, 1638]
      }, {
        119: [1, 1639]
      }, {
        78: [1, 1640]
      }, {
        78: [1, 1641]
      }, e(Ma, [2, 476]), e(ka, [2, 464], {
        74: La
      }), {
        2: r,
        3: 244,
        4: n,
        5: a,
        143: ze,
        145: Ze,
        199: 1643,
        431: 1642
      }, e(ss, [2, 703]), e(ss, [2, 705]), {
        146: [1, 1644]
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        309: [1, 1645],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, {
        339: zs,
        462: 1646
      }, {
        417: [1, 1649],
        463: [1, 1648]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1650,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Zs, [2, 267], {
        87: 1651,
        245: [1, 1652],
        247: [1, 1653]
      }), {
        119: [1, 1654]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        233: 1655,
        235: 1656,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1661,
        4: n,
        5: a
      }, {
        2: r,
        3: 1662,
        4: n,
        5: a
      }, e(Ts, [2, 207]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1663,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1664,
        111: 1440
      }, e(Bs, [2, 209]), {
        2: r,
        3: 1665,
        4: n,
        5: a
      }, e(Bs, [2, 1097], {
        220: 1666,
        3: 1667,
        2: r,
        4: n,
        5: a
      }), e(js, [2, 1096]), e(Bs, [2, 212]), {
        2: r,
        3: 1668,
        4: n,
        5: a
      }, {
        78: [1, 1669]
      }, e(Bs, [2, 217]), {
        2: r,
        3: 1670,
        4: n,
        5: a
      }, e(Bs, [2, 220]), {
        2: r,
        3: 1671,
        4: n,
        5: a
      }, {
        40: 1672,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, {
        40: 1673,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(Ns, [2, 227]), e(Ns, [2, 229]), e(Ns, [2, 231]), e(na, [2, 171]), e(Rs, [2, 262]), e(Rs, [2, 265], {
        242: [1, 1674]
      }), e(qa, [2, 1084], {
        153: 1015,
        179: ia,
        180: oa,
        181: ua
      }), e(ca, [2, 141]), e(ln, [2, 547]), e(ln, [2, 550]), {
        374: [1, 1675]
      }, e(ln, [2, 1127], {
        395: 1676,
        393: 1677,
        77: ni
      }), {
        131: ae,
        196: 1679
      }, e(ln, [2, 555]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1680,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(ln, [2, 557]), e(ln, [2, 559]), {
        2: r,
        3: 114,
        4: n,
        5: a,
        77: [1, 1682],
        113: 251,
        131: ae,
        132: se,
        143: oe,
        152: le,
        156: W,
        181: pe,
        196: 250,
        200: 255,
        201: 254,
        257: 252,
        258: 253,
        265: Ke,
        274: 1681,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        302: $e
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1683,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Y, [2, 578]), e(rr, [2, 349]), e(rr, [2, 350]), e(rr, [2, 351]), e(rr, [2, 352]), e(Y, [2, 582]), e(Y, [2, 592]), e(gn, [2, 734]), e(Y, [2, 489]), e(Y, [2, 494], {
        355: 1684,
        4: Hs,
        243: Js,
        343: Ys,
        356: Ws
      }), e(ai, [2, 496]), e(ai, [2, 497]), {
        124: [1, 1685]
      }, {
        124: [1, 1686]
      }, {
        124: [1, 1687]
      }, {
        74: [1, 1688],
        78: [2, 505]
      }, e(as, [2, 533]), e(as, [2, 508]), {
        187: [1, 1696],
        193: [1, 1697],
        362: 1689,
        363: 1690,
        364: 1691,
        365: 1692,
        366: 1693,
        368: Ls,
        369: [1, 1694],
        370: [1, 1698],
        373: [1, 1695]
      }, {
        2: r,
        3: 1699,
        4: n,
        5: a
      }, {
        40: 1700,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, {
        415: [1, 1701]
      }, {
        416: [1, 1702]
      }, e(Y, [2, 761]), e(Y, [2, 763]), e(Ta, [2, 537]), e(We, [2, 331]), {
        78: [1, 1703]
      }, e(We, [2, 332]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        233: 1704,
        235: 1656,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1376,
        111: 149,
        113: 153,
        120: 1705,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1374,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(We, [2, 317]), e(We, [2, 319]), {
        2: r,
        3: 1706,
        4: n,
        5: a
      }, e(Y, [2, 720], {
        77: [1, 1707]
      }), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        111: 1065,
        143: la,
        145: ha,
        147: 1708,
        336: 1064,
        337: 1066
      }, {
        335: qs,
        338: Gs,
        461: 1709
      }, e(ss, [2, 707]), {
        77: [1, 1711],
        343: [1, 1712],
        344: [1, 1710]
      }, {
        170: [1, 1714],
        309: [1, 1713]
      }, {
        170: [1, 1716],
        309: [1, 1715]
      }, {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        309: [1, 1717],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(sa, [2, 250], {
        88: 1718,
        162: [1, 1719],
        168: [1, 1721],
        169: [1, 1720]
      }), {
        131: ae,
        196: 1722
      }, {
        131: ae,
        196: 1723
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1376,
        111: 149,
        113: 153,
        120: 1724,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        241: 1374,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, e(Ss, [2, 248], {
        234: 1725,
        74: si,
        239: [1, 1727]
      }), e(ii, [2, 242]), {
        146: [1, 1728]
      }, {
        77: [1, 1729]
      }, {
        77: [1, 1730]
      }, e(ii, [2, 247], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        78: [2, 1051],
        96: 1731,
        99: [1, 1733],
        102: 1732
      }, {
        99: [1, 1734]
      }, e(Ts, [2, 235], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), e(Ts, [2, 236], {
        74: ts
      }), e(Bs, [2, 210]), e(Bs, [2, 211]), e(Bs, [2, 1098]), e(Bs, [2, 213]), {
        2: r,
        3: 1735,
        4: n,
        5: a,
        76: [1, 1736]
      }, e(Bs, [2, 218]), e(Bs, [2, 221]), {
        78: [1, 1737]
      }, {
        78: [1, 1738]
      }, e(Rs, [2, 266]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1739
      }, e(ln, [2, 552]), e(ln, [2, 1128]), {
        2: r,
        3: 1740,
        4: n,
        5: a
      }, {
        74: [1, 1741]
      }, {
        78: [1, 1742],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ln, [2, 562]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1743,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        78: [1, 1744],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ai, [2, 495]), {
        2: r,
        3: 1745,
        4: n,
        5: a
      }, {
        131: ae,
        196: 1746
      }, {
        2: r,
        3: 1747,
        4: n,
        5: a
      }, e(Xs, Ks, {
        361: 1627,
        360: 1748,
        367: Qs
      }), e(gn, [2, 510]), e(gn, [2, 511]), e(gn, [2, 512]), e(gn, [2, 513]), e(gn, [2, 514]), {
        370: [1, 1749]
      }, {
        370: [1, 1750]
      }, e(oi, [2, 1121], {
        382: 1751,
        370: [1, 1752]
      }), {
        2: r,
        3: 1753,
        4: n,
        5: a
      }, {
        2: r,
        3: 1754,
        4: n,
        5: a
      }, e(Xs, [2, 516]), e(Y, [2, 1131], {
        411: 1755,
        413: 1756,
        72: _s
      }), e(Y, [2, 610]), e(Y, [2, 611], {
        367: [1, 1757]
      }), e(We, [2, 333]), e([78, 118], [2, 334], {
        74: si
      }), {
        74: Cs,
        78: [2, 335]
      }, e(Y, [2, 719]), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1758,
        111: 1440
      }, e(ss, [2, 706], {
        74: Ba
      }), e(ss, [2, 704]), {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1759,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1760,
        111: 1440
      }, {
        344: [1, 1761]
      }, {
        339: zs,
        462: 1762
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1763,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        339: zs,
        462: 1764
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1765,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        339: zs,
        462: 1766
      }, e(sa, [2, 72]), {
        40: 1767,
        79: 75,
        89: u,
        164: [1, 1768],
        184: 99,
        189: d,
        240: [1, 1769]
      }, {
        40: 1770,
        79: 75,
        89: u,
        184: 99,
        189: d,
        240: [1, 1771]
      }, {
        40: 1772,
        79: 75,
        89: u,
        184: 99,
        189: d,
        240: [1, 1773]
      }, e(Zs, [2, 270], {
        246: 1774,
        247: [1, 1775]
      }), {
        248: 1776,
        249: [2, 1099],
        766: [1, 1777]
      }, e(Vs, [2, 260], {
        74: Cs
      }), e(Ss, [2, 241]), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        235: 1778,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1779,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        77: [1, 1780]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        233: 1781,
        235: 1656,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        233: 1782,
        235: 1656,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        78: [1, 1783]
      }, {
        78: [2, 1052]
      }, {
        77: [1, 1784]
      }, {
        77: [1, 1785]
      }, e(Bs, [2, 214]), {
        2: r,
        3: 1786,
        4: n,
        5: a
      }, {
        2: r,
        3: 1787,
        4: n,
        5: a,
        76: [1, 1788]
      }, {
        2: r,
        3: 1789,
        4: n,
        5: a,
        76: [1, 1790]
      }, e(ln, [2, 1125], {
        394: 1791,
        393: 1792,
        77: ni
      }), {
        78: [1, 1793]
      }, {
        131: ae,
        196: 1794
      }, e(ln, [2, 556]), {
        78: [1, 1795],
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ln, [2, 517]), e(ai, [2, 498]), e(ai, [2, 499]), e(ai, [2, 500]), e(as, [2, 509]), {
        2: r,
        3: 1797,
        4: n,
        5: a,
        77: [2, 1117],
        371: 1796
      }, {
        77: [1, 1798]
      }, {
        2: r,
        3: 1800,
        4: n,
        5: a,
        77: [2, 1123],
        383: 1799
      }, e(oi, [2, 1122]), {
        77: [1, 1801]
      }, {
        77: [1, 1802]
      }, e(Y, [2, 608]), e(Y, [2, 1132]), e(Xs, Ks, {
        361: 1627,
        360: 1803,
        367: Qs
      }), {
        74: ts,
        78: [1, 1804]
      }, e(ss, [2, 713], {
        74: La
      }), {
        74: ts,
        78: [1, 1805]
      }, e(ss, [2, 715]), e(ss, [2, 708]), {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        309: [1, 1806],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ss, [2, 711]), {
        99: mt,
        112: vt,
        114: 625,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        309: [1, 1807],
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        327: 637,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }, e(ss, [2, 709]), e(sa, [2, 251]), {
        40: 1808,
        79: 75,
        89: u,
        184: 99,
        189: d,
        240: [1, 1809]
      }, {
        40: 1810,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(sa, [2, 253]), {
        40: 1811,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(sa, [2, 254]), {
        40: 1812,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(Zs, [2, 268]), {
        131: ae,
        196: 1813
      }, {
        249: [1, 1814]
      }, {
        249: [2, 1100]
      }, e(ii, [2, 243]), e(Ss, [2, 249], {
        114: 625,
        327: 637,
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1660,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        233: 1815,
        235: 1656,
        236: ei,
        237: ti,
        238: ri,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        74: si,
        78: [1, 1816]
      }, {
        74: si,
        78: [1, 1817]
      }, e(_a, [2, 1053], {
        97: 1818,
        104: 1819,
        3: 1821,
        2: r,
        4: n,
        5: a,
        76: ui
      }), {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1824,
        103: 1822,
        105: 1823,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1825,
        111: 1440
      }, e(Bs, [2, 215]), e(Ts, [2, 173]), {
        2: r,
        3: 1826,
        4: n,
        5: a
      }, e(Ts, [2, 175]), {
        2: r,
        3: 1827,
        4: n,
        5: a
      }, e(ln, [2, 551]), e(ln, [2, 1126]), e(ln, [2, 549]), {
        78: [1, 1828]
      }, e(ln, [2, 563]), {
        77: [1, 1829]
      }, {
        77: [2, 1118]
      }, {
        2: r,
        3: 1831,
        4: n,
        5: a,
        132: ci,
        372: 1830
      }, {
        77: [1, 1833]
      }, {
        77: [2, 1124]
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1834,
        111: 1440
      }, {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1835,
        111: 1440
      }, e(Y, [2, 612]), e(Y, [2, 721]), {
        343: [1, 1837],
        344: [1, 1836]
      }, {
        339: zs,
        462: 1838
      }, {
        335: qs,
        338: Gs,
        461: 1839
      }, e(sa, [2, 252]), {
        40: 1840,
        79: 75,
        89: u,
        184: 99,
        189: d
      }, e(sa, [2, 255]), e(sa, [2, 257]), e(sa, [2, 258]), e(Zs, [2, 271]), {
        131: [2, 1101],
        250: 1841,
        645: [1, 1842]
      }, {
        74: si,
        78: [1, 1843]
      }, e(ii, [2, 245]), e(ii, [2, 246]), e(_a, [2, 74]), e(_a, [2, 1054]), {
        2: r,
        3: 1844,
        4: n,
        5: a
      }, e(_a, [2, 78]), {
        74: [1, 1846],
        78: [1, 1845]
      }, e(as, [2, 80]), e(as, [2, 81], {
        114: 625,
        327: 637,
        76: [1, 1847],
        99: mt,
        112: vt,
        115: St,
        116: Tt,
        123: At,
        124: fn,
        133: Nt,
        136: Ct,
        138: Rt,
        139: Ot,
        140: wt,
        141: It,
        142: xt,
        154: Dt,
        170: kt,
        171: Lt,
        179: $t,
        180: Mt,
        311: Ut,
        312: _t,
        313: Ft,
        315: Pt,
        316: qt,
        317: Gt,
        318: Vt,
        319: Bt,
        320: jt,
        321: Ht,
        322: Jt,
        323: Yt,
        324: Wt,
        325: Xt,
        326: Kt,
        330: Qt,
        331: zt,
        332: Zt,
        333: er
      }), {
        74: ts,
        78: [1, 1848]
      }, e(Ts, [2, 174]), e(Ts, [2, 176]), e(ln, [2, 553]), {
        2: r,
        3: 1831,
        4: n,
        5: a,
        132: ci,
        372: 1849
      }, {
        74: li,
        78: [1, 1850]
      }, e(as, [2, 528]), e(as, [2, 529]), {
        2: r,
        3: 1011,
        4: n,
        5: a,
        100: 1852,
        111: 1440
      }, {
        74: ts,
        78: [1, 1853]
      }, {
        74: ts,
        78: [1, 1854]
      }, {
        77: ra,
        143: oe,
        144: 979,
        145: Xe,
        152: le,
        181: pe,
        201: 980,
        302: $e,
        342: 1855,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        344: [1, 1856]
      }, e(ss, [2, 710]), e(ss, [2, 712]), e(sa, [2, 256]), {
        131: ae,
        196: 1857
      }, {
        131: [2, 1102]
      }, e(ii, [2, 244]), e(_a, [2, 77]), {
        78: [2, 76]
      }, {
        2: r,
        3: 168,
        4: n,
        5: a,
        56: 165,
        77: ne,
        94: 1824,
        105: 1858,
        111: 149,
        113: 153,
        131: ae,
        132: se,
        137: ie,
        143: oe,
        144: 161,
        145: ue,
        149: ce,
        152: le,
        154: he,
        156: W,
        158: 167,
        179: de,
        180: fe,
        181: pe,
        196: 151,
        200: 147,
        201: 155,
        202: 156,
        254: 150,
        255: 146,
        256: 148,
        257: 152,
        258: 154,
        259: 157,
        260: 158,
        261: 159,
        262: 162,
        263: 163,
        265: be,
        266: f,
        270: Ee,
        271: ge,
        273: me,
        280: ve,
        281: Se,
        282: Te,
        283: Ae,
        284: ye,
        285: Ne,
        286: Ce,
        287: Re,
        288: Oe,
        290: X,
        291: K,
        292: Q,
        293: z,
        294: we,
        295: Ie,
        296: xe,
        297: De,
        298: ke,
        299: Le,
        302: $e,
        303: Me,
        312: Ue,
        317: _e,
        419: 190,
        420: Fe,
        424: Pe
      }, {
        2: r,
        3: 1859,
        4: n,
        5: a
      }, {
        78: [1, 1860]
      }, {
        74: li,
        78: [1, 1861]
      }, {
        374: [1, 1862]
      }, {
        2: r,
        3: 1863,
        4: n,
        5: a,
        132: [1, 1864]
      }, {
        74: ts,
        78: [1, 1865]
      }, e(gn, [2, 526]), e(gn, [2, 527]), e(ss, [2, 714], {
        74: La
      }), e(ss, [2, 716]), e(hi, [2, 1103], {
        251: 1866,
        766: [1, 1867]
      }), e(as, [2, 79]), e(as, [2, 82]), e(_a, [2, 1055], {
        3: 1821,
        101: 1868,
        104: 1869,
        2: r,
        4: n,
        5: a,
        76: ui
      }), e(gn, [2, 518]), {
        2: r,
        3: 244,
        4: n,
        5: a,
        199: 1870
      }, e(as, [2, 530]), e(as, [2, 531]), e(gn, [2, 525]), e(Zs, [2, 1105], {
        252: 1871,
        415: [1, 1872]
      }), e(hi, [2, 1104]), e(_a, [2, 75]), e(_a, [2, 1056]), e(di, [2, 1119], {
        375: 1873,
        377: 1874,
        77: [1, 1875]
      }), e(Zs, [2, 269]), e(Zs, [2, 1106]), e(gn, [2, 521], {
        376: 1876,
        378: 1877,
        230: [1, 1878]
      }), e(di, [2, 1120]), {
        2: r,
        3: 1831,
        4: n,
        5: a,
        132: ci,
        372: 1879
      }, e(gn, [2, 519]), {
        230: [1, 1881],
        379: 1880
      }, {
        338: [1, 1882]
      }, {
        74: li,
        78: [1, 1883]
      }, e(gn, [2, 522]), {
        335: [1, 1884]
      }, {
        380: [1, 1885]
      }, e(di, [2, 520]), {
        380: [1, 1886]
      }, {
        381: [1, 1887]
      }, {
        381: [1, 1888]
      }, {
        230: [2, 523]
      }, e(gn, [2, 524])],
      defaultActions: {
        105: [2, 6],
        194: [2, 336],
        195: [2, 337],
        196: [2, 338],
        197: [2, 339],
        198: [2, 340],
        199: [2, 341],
        200: [2, 342],
        201: [2, 343],
        202: [2, 344],
        209: [2, 695],
        591: [2, 1142],
        653: [2, 1107],
        654: [2, 1108],
        710: [2, 696],
        780: [2, 1073],
        781: [2, 1074],
        926: [2, 446],
        927: [2, 447],
        928: [2, 448],
        987: [2, 697],
        1288: [2, 1152],
        1375: [2, 1060],
        1433: [2, 1150],
        1541: [2, 507],
        1732: [2, 1052],
        1777: [2, 1100],
        1797: [2, 1118],
        1800: [2, 1124],
        1842: [2, 1102],
        1845: [2, 76],
        1887: [2, 523]
      },
      parseError: function (e, t) {
        if (!t.recoverable) {
          var r = new Error(e);
          throw r.hash = t, r;
        }

        this.trace(e);
      },
      parse: function (e) {
        var t = this,
            n = [0],
            r = [null],
            a = [],
            s = this.table,
            i = "",
            o = 0,
            u = 0,
            c = 0,
            l = a.slice.call(arguments, 1),
            h = Object.create(this.lexer),
            d = {
          yy: {}
        };

        for (var f in this.yy) Object.prototype.hasOwnProperty.call(this.yy, f) && (d.yy[f] = this.yy[f]);

        h.setInput(e, d.yy), d.yy.lexer = h, d.yy.parser = this, void 0 === h.yylloc && (h.yylloc = {});
        var p = h.yylloc;
        a.push(p);
        var b = h.options && h.options.ranges;
        "function" == typeof d.yy.parseError ? this.parseError = d.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;

        for (var E, g, m, v, S, T, A, y, N, C, R = function () {
          var e;
          return "number" != typeof (e = h.lex() || 1) && (e = t.symbols_[e] || e), e;
        }, O = {};;) {
          if (m = n[n.length - 1], void 0 === (v = this.defaultActions[m] ? this.defaultActions[m] : (null == E && (E = R()), s[m] && s[m][E])) || !v.length || !v[0]) {
            var w,
                I = "",
                x = function (e) {
              for (var t = n.length - 1, r = 0;;) {
                if (2..toString() in s[e]) return r;
                if (0 === e || t < 2) return !1;
                e = n[t -= 2], ++r;
              }
            };

            if (c) 1 !== g && (w = x(m));else {
              for (T in w = x(m), N = [], s[m]) this.terminals_[T] && 2 < T && N.push("'" + this.terminals_[T] + "'");

              I = h.showPosition ? "Parse error on line " + (o + 1) + ":\n" + h.showPosition() + "\nExpecting " + N.join(", ") + ", got '" + (this.terminals_[E] || E) + "'" : "Parse error on line " + (o + 1) + ": Unexpected " + (1 == E ? "end of input" : "'" + (this.terminals_[E] || E) + "'"), this.parseError(I, {
                text: h.match,
                token: this.terminals_[E] || E,
                line: h.yylineno,
                loc: p,
                expected: N,
                recoverable: !1 !== w
              });
            }

            if (3 == c) {
              if (1 === E || 1 === g) throw new Error(I || "Parsing halted while starting to recover from another error.");
              u = h.yyleng, i = h.yytext, o = h.yylineno, p = h.yylloc, E = R();
            }

            if (!1 === w) throw new Error(I || "Parsing halted. No suitable error recovery rule available.");
            C = w, n.length = n.length - 2 * C, r.length = r.length - C, a.length = a.length - C, g = 2 == E ? null : E, E = 2, m = n[n.length - 1], v = s[m] && s[m][2], c = 3;
          }

          if (v[0] instanceof Array && 1 < v.length) throw new Error("Parse Error: multiple actions possible at state: " + m + ", token: " + E);

          switch (v[0]) {
            case 1:
              n.push(E), r.push(h.yytext), a.push(h.yylloc), n.push(v[1]), E = null, g ? (E = g, g = null) : (u = h.yyleng, i = h.yytext, o = h.yylineno, p = h.yylloc, 0 < c && c--);
              break;

            case 2:
              if (A = this.productions_[v[1]][1], O.$ = r[r.length - A], O._$ = {
                first_line: a[a.length - (A || 1)].first_line,
                last_line: a[a.length - 1].last_line,
                first_column: a[a.length - (A || 1)].first_column,
                last_column: a[a.length - 1].last_column
              }, b && (O._$.range = [a[a.length - (A || 1)].range[0], a[a.length - 1].range[1]]), void 0 !== (S = this.performAction.apply(O, [i, u, o, d.yy, v[1], r, a].concat(l)))) return S;
              A && (n = n.slice(0, -1 * A * 2), r = r.slice(0, -1 * A), a = a.slice(0, -1 * A)), n.push(this.productions_[v[1]][0]), r.push(O.$), a.push(O._$), y = s[n[n.length - 2]][n[n.length - 1]], n.push(y);
              break;

            case 3:
              return !0;
          }
        }

        return !0;
      }
    },
        pi = ["A", "ABSENT", "ABSOLUTE", "ACCORDING", "ACTION", "ADA", "ADD", "ADMIN", "AFTER", "ALWAYS", "ASC", "ASSERTION", "ASSIGNMENT", "ATTRIBUTE", "ATTRIBUTES", "BASE64", "BEFORE", "BERNOULLI", "BLOCKED", "BOM", "BREADTH", "C", "CASCADE", "CATALOG", "CATALOG_NAME", "CHAIN", "CHARACTERISTICS", "CHARACTERS", "CHARACTER_SET_CATALOG", "CHARACTER_SET_NAME", "CHARACTER_SET_SCHEMA", "CLASS_ORIGIN", "COBOL", "COLLATION", "COLLATION_CATALOG", "COLLATION_NAME", "COLLATION_SCHEMA", "COLUMNS", "COLUMN_NAME", "COMMAND_FUNCTION", "COMMAND_FUNCTION_CODE", "COMMITTED", "CONDITION_NUMBER", "CONNECTION", "CONNECTION_NAME", "CONSTRAINTS", "CONSTRAINT_CATALOG", "CONSTRAINT_NAME", "CONSTRAINT_SCHEMA", "CONSTRUCTOR", "CONTENT", "CONTINUE", "CONTROL", "CURSOR_NAME", "DATA", "DATETIME_INTERVAL_CODE", "DATETIME_INTERVAL_PRECISION", "DB", "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINED", "DEFINER", "DEGREE", "DEPTH", "DERIVED", "DESC", "DESCRIPTOR", "DIAGNOSTICS", "DISPATCH", "DOCUMENT", "DOMAIN", "DYNAMIC_FUNCTION", "DYNAMIC_FUNCTION_CODE", "EMPTY", "ENCODING", "ENFORCED", "EXCLUDE", "EXCLUDING", "EXPRESSION", "FILE", "FINAL", "FIRST", "FLAG", "FOLLOWING", "FORTRAN", "FOUND", "FS", "G", "GENERAL", "GENERATED", "GO", "GOTO", "GRANTED", "HEX", "HIERARCHY", "ID", "IGNORE", "IMMEDIATE", "IMMEDIATELY", "IMPLEMENTATION", "INCLUDING", "INCREMENT", "INDENT", "INITIALLY", "INPUT", "INSTANCE", "INSTANTIABLE", "INSTEAD", "INTEGRITY", "INVOKER", "ISOLATION", "K", "KEY", "KEY_MEMBER", "KEY_TYPE", "LAST", "LENGTH", "LEVEL", "LIBRARY", "LIMIT", "LINK", "LOCATION", "LOCATOR", "M", "MAP", "MAPPING", "MATCHED", "MAXVALUE", "MESSAGE_LENGTH", "MESSAGE_OCTET_LENGTH", "MESSAGE_TEXT", "MINVALUE", "MORE", "MUMPS", "NAME", "NAMES", "NAMESPACE", "NESTING", "NEXT", "NFC", "NFD", "NFKC", "NFKD", "NIL", "NORMALIZED", "NULLABLE", "NULLS", "NUMBER", "OBJECT", "OCTETS", "OFF", "OPTION", "OPTIONS", "ORDERING", "ORDINALITY", "OTHERS", "OUTPUT", "OVERRIDING", "P", "PAD", "PARAMETER_MODE", "PARAMETER_NAME", "PARAMETER_ORDINAL_POSITION", "PARAMETER_SPECIFIC_CATALOG", "PARAMETER_SPECIFIC_NAME", "PARAMETER_SPECIFIC_SCHEMA", "PARTIAL", "PASCAL", "PASSING", "PASSTHROUGH", "PATH", "PERMISSION", "PLACING", "PLI", "PRECEDING", "PRESERVE", "PRIOR", "PRIVILEGES", "PUBLIC", "READ", "RECOVERY", "RELATIVE", "REPEATABLE", "REQUIRING", "RESPECT", "RESTART", "RESTORE", "RESTRICT", "RETURNED_CARDINALITY", "RETURNED_LENGTH", "RETURNED_OCTET_LENGTH", "RETURNED_SQLSTATE", "RETURNING", "ROLE", "ROUTINE", "ROUTINE_CATALOG", "ROUTINE_NAME", "ROUTINE_SCHEMA", "ROW_COUNT", "SCALE", "SCHEMA", "SCHEMA_NAME", "SCOPE_CATALOG", "SCOPE_NAME", "SCOPE_SCHEMA", "SECTION", "SECURITY", "SELECTIVE", "SELF", "SEQUENCE", "SERIALIZABLE", "SERVER", "SERVER_NAME", "SESSION", "SETS", "SIMPLE", "SIZE", "SOURCE", "SPACE", "SPECIFIC_NAME", "STANDALONE", "STATE", "STATEMENT", "STRIP", "STRUCTURE", "STYLE", "SUBCLASS_ORIGIN", "T", "TABLE_NAME", "TEMPORARY", "TIES", "TOKEN", "TOP_LEVEL_COUNT", "TRANSACTION", "TRANSACTIONS_COMMITTED", "TRANSACTIONS_ROLLED_BACK", "TRANSACTION_ACTIVE", "TRANSFORM", "TRANSFORMS", "TRIGGER_CATALOG", "TRIGGER_NAME", "TRIGGER_SCHEMA", "TYPE", "UNBOUNDED", "UNCOMMITTED", "UNDER", "UNLINK", "UNNAMED", "UNTYPED", "URI", "USAGE", "USER_DEFINED_TYPE_CATALOG", "USER_DEFINED_TYPE_CODE", "USER_DEFINED_TYPE_NAME", "USER_DEFINED_TYPE_SCHEMA", "VALID", "VERSION", "VIEW", "WHITESPACE", "WORK", "WRAPPER", "WRITE", "XMLDECLARATION", "XMLSCHEMA", "YES", "ZONE"];

    fi.parseError = function (e, t) {
      if (!(t.expected && -1 < t.expected.indexOf("'LITERAL'") && /[a-zA-Z_][a-zA-Z_0-9]*/.test(t.token) && -1 < pi.indexOf(t.token))) throw new SyntaxError(e);
    };

    var bi = {
      EOF: 1,
      parseError: function (e, t) {
        if (!this.yy.parser) throw new Error(e);
        this.yy.parser.parseError(e, t);
      },
      setInput: function (e, t) {
        return this.yy = t || this.yy || {}, this._input = e, this._more = this._backtrack = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
          first_line: 1,
          first_column: 0,
          last_line: 1,
          last_column: 0
        }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this;
      },
      input: function () {
        var e = this._input[0];
        return this.yytext += e, this.yyleng++, this.offset++, this.match += e, this.matched += e, e.match(/(?:\r\n?|\n).*/g) ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), e;
      },
      unput: function (e) {
        var t = e.length,
            r = e.split(/(?:\r\n?|\n)/g);
        this._input = e + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - t), this.offset -= t;
        var n = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), r.length - 1 && (this.yylineno -= r.length - 1);
        var a = this.yylloc.range;
        return this.yylloc = {
          first_line: this.yylloc.first_line,
          last_line: this.yylineno + 1,
          first_column: this.yylloc.first_column,
          last_column: r ? (r.length === n.length ? this.yylloc.first_column : 0) + n[n.length - r.length].length - r[0].length : this.yylloc.first_column - t
        }, this.options.ranges && (this.yylloc.range = [a[0], a[0] + this.yyleng - t]), this.yyleng = this.yytext.length, this;
      },
      more: function () {
        return this._more = !0, this;
      },
      reject: function () {
        return this.options.backtrack_lexer ? (this._backtrack = !0, this) : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" + this.showPosition(), {
          text: "",
          token: null,
          line: this.yylineno
        });
      },
      less: function (e) {
        this.unput(this.match.slice(e));
      },
      pastInput: function () {
        var e = this.matched.substr(0, this.matched.length - this.match.length);
        return (20 < e.length ? "..." : "") + e.substr(-20).replace(/\n/g, "");
      },
      upcomingInput: function () {
        var e = this.match;
        return e.length < 20 && (e += this._input.substr(0, 20 - e.length)), (e.substr(0, 20) + (20 < e.length ? "..." : "")).replace(/\n/g, "");
      },
      showPosition: function () {
        var e = this.pastInput(),
            t = new Array(e.length + 1).join("-");
        return e + this.upcomingInput() + "\n" + t + "^";
      },
      test_match: function (e, t) {
        var r, n, a;
        if (this.options.backtrack_lexer && (a = {
          yylineno: this.yylineno,
          yylloc: {
            first_line: this.yylloc.first_line,
            last_line: this.last_line,
            first_column: this.yylloc.first_column,
            last_column: this.yylloc.last_column
          },
          yytext: this.yytext,
          match: this.match,
          matches: this.matches,
          matched: this.matched,
          yyleng: this.yyleng,
          offset: this.offset,
          _more: this._more,
          _input: this._input,
          yy: this.yy,
          conditionStack: this.conditionStack.slice(0),
          done: this.done
        }, this.options.ranges && (a.yylloc.range = this.yylloc.range.slice(0))), (n = e[0].match(/(?:\r\n?|\n).*/g)) && (this.yylineno += n.length), this.yylloc = {
          first_line: this.yylloc.last_line,
          last_line: this.yylineno + 1,
          first_column: this.yylloc.last_column,
          last_column: n ? n[n.length - 1].length - n[n.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + e[0].length
        }, this.yytext += e[0], this.match += e[0], this.matches = e, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._backtrack = !1, this._input = this._input.slice(e[0].length), this.matched += e[0], r = this.performAction.call(this, this.yy, this, t, this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), r) return r;

        if (this._backtrack) {
          for (var s in a) this[s] = a[s];

          return !1;
        }

        return !1;
      },
      next: function () {
        if (this.done) return this.EOF;
        var e, t, r, n;
        this._input || (this.done = !0), this._more || (this.yytext = "", this.match = "");

        for (var a = this._currentRules(), s = 0; s < a.length; s++) if ((r = this._input.match(this.rules[a[s]])) && (!t || r[0].length > t[0].length)) {
          if (t = r, n = s, this.options.backtrack_lexer) {
            if (!1 !== (e = this.test_match(r, a[s]))) return e;

            if (this._backtrack) {
              t = !1;
              continue;
            }

            return !1;
          }

          if (!this.options.flex) break;
        }

        return t ? !1 !== (e = this.test_match(t, a[n])) && e : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
          text: "",
          token: null,
          line: this.yylineno
        });
      },
      lex: function () {
        var e = this.next();
        return e || this.lex();
      },
      begin: function (e) {
        this.conditionStack.push(e);
      },
      popState: function () {
        return 0 < this.conditionStack.length - 1 ? this.conditionStack.pop() : this.conditionStack[0];
      },
      _currentRules: function () {
        return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules;
      },
      topState: function (e) {
        return 0 <= (e = this.conditionStack.length - 1 - Math.abs(e || 0)) ? this.conditionStack[e] : "INITIAL";
      },
      pushState: function (e) {
        this.begin(e);
      },
      stateStackSize: function () {
        return this.conditionStack.length;
      },
      options: {
        "case-insensitive": !0
      },
      performAction: function (e, t, r, n) {
        switch (r) {
          case 0:
            return 266;

          case 1:
            return 302;

          case 2:
            return 420;

          case 3:
            return 299;

          case 4:
          case 5:
            return 5;

          case 6:
          case 7:
            return 296;

          case 8:
          case 9:
            return 132;

          case 10:
            return;

          case 11:
            break;

          case 12:
            return 316;

          case 13:
            return 319;

          case 14:
            return t.yytext = "VALUE", 89;

          case 15:
            return t.yytext = "VALUE", 189;

          case 16:
            return t.yytext = "ROW", 189;

          case 17:
            return t.yytext = "COLUMN", 189;

          case 18:
            return t.yytext = "MATRIX", 189;

          case 19:
            return t.yytext = "INDEX", 189;

          case 20:
            return t.yytext = "RECORDSET", 189;

          case 21:
            return t.yytext = "TEXT", 189;

          case 22:
            return t.yytext = "SELECT", 189;

          case 23:
            return 520;

          case 24:
            return 381;

          case 25:
            return 402;

          case 26:
            return 515;

          case 27:
            return 287;

          case 28:
          case 29:
            return 269;

          case 30:
            return 164;

          case 31:
            return 400;

          case 32:
            return 170;

          case 33:
            return 229;

          case 34:
            return 166;

          case 35:
            return 207;

          case 36:
            return 288;

          case 37:
            return 76;

          case 38:
            return 418;

          case 39:
            return 242;

          case 40:
            return 404;

          case 41:
            return 356;

          case 42:
            return 284;

          case 43:
            return 514;

          case 44:
            return 437;

          case 45:
            return 330;

          case 46:
            return 441;

          case 47:
            return 331;

          case 48:
            return 315;

          case 49:
            return 119;

          case 50:
            return 112;

          case 51:
            return 315;

          case 52:
            return 112;

          case 53:
            return 315;

          case 54:
            return 112;

          case 55:
            return 315;

          case 56:
            return 508;

          case 57:
            return 303;

          case 58:
            return 271;

          case 59:
            return 368;

          case 60:
            return 130;

          case 61:
            return "CLOSE";

          case 62:
            return 243;

          case 63:
          case 64:
            return 190;

          case 65:
            return 434;

          case 66:
            return 367;

          case 67:
            return 470;

          case 68:
            return 440;

          case 69:
            return 273;

          case 70:
            return 240;

          case 71:
            return 281;

          case 72:
            return 267;

          case 73:
            return 206;

          case 74:
            return 238;

          case 75:
            return 265;

          case 76:
            return "CURSOR";

          case 77:
            return 405;

          case 78:
            return 291;

          case 79:
            return 292;

          case 80:
            return 448;

          case 81:
            return 343;

          case 82:
            return 338;

          case 83:
            return "DELETED";

          case 84:
            return 242;

          case 85:
            return 406;

          case 86:
            return 185;

          case 87:
            return 396;

          case 88:
            return 447;

          case 89:
            return 135;

          case 90:
            return 306;

          case 91:
            return 389;

          case 92:
            return 310;

          case 93:
            return 314;

          case 94:
            return 169;

          case 95:
          case 96:
            return 508;

          case 97:
            return 298;

          case 98:
            return 14;

          case 99:
            return 295;

          case 100:
            return 249;

          case 101:
            return 285;

          case 102:
            return 95;

          case 103:
            return 373;

          case 104:
            return 183;

          case 105:
            return 227;

          case 106:
            return 268;

          case 107:
            return 313;

          case 108:
            return 602;

          case 109:
            return 472;

          case 110:
            return 232;

          case 111:
            return 236;

          case 112:
            return 239;

          case 113:
            return 156;

          case 114:
            return 356;

          case 115:
            return 332;

          case 116:
            return 99;

          case 117:
            return 193;

          case 118:
            return 212;

          case 119:
            return 224;

          case 120:
            return 516;

          case 121:
            return 339;

          case 122:
            return 213;

          case 123:
            return 168;

          case 124:
            return 293;

          case 125:
            return 198;

          case 126:
            return 223;

          case 127:
            return 370;

          case 128:
            return 286;

          case 129:
            return "LET";

          case 130:
            return 225;

          case 131:
            return 112;

          case 132:
            return 245;

          case 133:
            return 460;

          case 134:
            return 191;

          case 135:
            return 283;

          case 136:
            return 390;

          case 137:
            return 282;

          case 138:
            return 452;

          case 139:
            return 169;

          case 140:
            return 403;

          case 141:
            return 222;

          case 142:
            return 645;

          case 143:
            return 270;

          case 144:
            return 244;

          case 145:
            return 380;

          case 146:
            return 154;

          case 147:
            return 297;

          case 148:
            return 433;

          case 149:
            return 230;

          case 150:
            return 415;

          case 151:
            return 129;

          case 152:
            return 247;

          case 153:
            return "OPEN";

          case 154:
            return 416;

          case 155:
            return 171;

          case 156:
            return 118;

          case 157:
            return 208;

          case 158:
            return 276;

          case 159:
            return 172;

          case 160:
            return 279;

          case 161:
            return 765;

          case 162:
            return 93;

          case 163:
            return 16;

          case 164:
            return 369;

          case 165:
            return 442;

          case 166:
            return 678;

          case 167:
            return 15;

          case 168:
            return 414;

          case 169:
            return 194;

          case 170:
            return "REDUCE";

          case 171:
            return 374;

          case 172:
            return 311;

          case 173:
            return 517;

          case 174:
            return 682;

          case 175:
            return 107;

          case 176:
            return 401;

          case 177:
            return 175;

          case 178:
            return 290;

          case 179:
            return 443;

          case 180:
            return 687;

          case 181:
          case 182:
            return 173;

          case 183:
            return 226;

          case 184:
            return 436;

          case 185:
            return 237;

          case 186:
            return 150;

          case 187:
            return 766;

          case 188:
            return 405;

          case 189:
            return 89;

          case 190:
            return 228;

          case 191:
          case 192:
            return 146;

          case 193:
            return 409;

          case 194:
            return 334;

          case 195:
            return 417;

          case 196:
            return "STRATEGY";

          case 197:
            return "STORE";

          case 198:
            return 280;

          case 199:
          case 200:
            return 353;

          case 201:
            return 463;

          case 202:
          case 203:
            return 357;

          case 204:
            return 192;

          case 205:
            return 309;

          case 206:
            return "TIMEOUT";

          case 207:
            return 148;

          case 208:
            return 195;

          case 209:
          case 210:
            return 435;

          case 211:
            return 509;

          case 212:
            return 294;

          case 213:
            return 451;

          case 214:
            return 162;

          case 215:
            return 187;

          case 216:
            return 98;

          case 217:
            return 335;

          case 218:
            return 408;

          case 219:
            return 231;

          case 220:
            return 149;

          case 221:
            return 344;

          case 222:
            return 134;

          case 223:
            return 410;

          case 224:
            return 308;

          case 225:
            return 128;

          case 226:
            return 439;

          case 227:
            return 72;

          case 228:
            return 435;

          case 229:
          case 230:
            return 131;

          case 231:
            return 115;

          case 232:
            return 137;

          case 233:
            return 179;

          case 234:
            return 317;

          case 235:
            return 180;

          case 236:
            return 133;

          case 237:
            return 138;

          case 238:
            return 326;

          case 239:
            return 323;

          case 240:
            return 325;

          case 241:
            return 322;

          case 242:
            return 320;

          case 243:
            return 318;

          case 244:
            return 319;

          case 245:
            return 142;

          case 246:
            return 141;

          case 247:
            return 139;

          case 248:
            return 321;

          case 249:
            return 324;

          case 250:
            return 140;

          case 251:
            return 124;

          case 252:
            return 324;

          case 253:
            return 77;

          case 254:
            return 78;

          case 255:
            return 145;

          case 256:
            return 424;

          case 257:
            return 426;

          case 258:
            return 300;

          case 259:
            return 505;

          case 260:
            return 507;

          case 261:
            return 122;

          case 262:
            return 116;

          case 263:
            return 74;

          case 264:
            return 333;

          case 265:
            return 152;

          case 266:
            return 764;

          case 267:
            return 143;

          case 268:
            return 181;

          case 269:
            return 136;

          case 270:
            return 123;

          case 271:
            return 312;

          case 272:
            return 4;

          case 273:
            return 10;

          case 274:
            return "INVALID";
        }
      },
      rules: [/^(?:``([^\`])+``)/i, /^(?:\[\?\])/i, /^(?:@\[)/i, /^(?:ARRAY\[)/i, /^(?:\[([^\]])*?\])/i, /^(?:`([^\`])*?`)/i, /^(?:N(['](\\.|[^']|\\')*?['])+)/i, /^(?:X(['](\\.|[^']|\\')*?['])+)/i, /^(?:(['](\\.|[^']|\\')*?['])+)/i, /^(?:(["](\\.|[^"]|\\")*?["])+)/i, /^(?:--(.*?)($|\r\n|\r|\n))/i, /^(?:\s+)/i, /^(?:\|\|)/i, /^(?:\|)/i, /^(?:VALUE\s+OF\s+SEARCH\b)/i, /^(?:VALUE\s+OF\s+SELECT\b)/i, /^(?:ROW\s+OF\s+SELECT\b)/i, /^(?:COLUMN\s+OF\s+SELECT\b)/i, /^(?:MATRIX\s+OF\s+SELECT\b)/i, /^(?:INDEX\s+OF\s+SELECT\b)/i, /^(?:RECORDSET\s+OF\s+SELECT\b)/i, /^(?:TEXT\s+OF\s+SELECT\b)/i, /^(?:SELECT\b)/i, /^(?:ABSOLUTE\b)/i, /^(?:ACTION\b)/i, /^(?:ADD\b)/i, /^(?:AFTER\b)/i, /^(?:AGGR\b)/i, /^(?:AGGREGATE\b)/i, /^(?:AGGREGATOR\b)/i, /^(?:ALL\b)/i, /^(?:ALTER\b)/i, /^(?:AND\b)/i, /^(?:ANTI\b)/i, /^(?:ANY\b)/i, /^(?:APPLY\b)/i, /^(?:ARRAY\b)/i, /^(?:AS\b)/i, /^(?:ASSERT\b)/i, /^(?:ASC\b)/i, /^(?:ATTACH\b)/i, /^(?:AUTO(_)?INCREMENT\b)/i, /^(?:AVG\b)/i, /^(?:BEFORE\b)/i, /^(?:BEGIN\b)/i, /^(?:BETWEEN\b)/i, /^(?:BREAK\b)/i, /^(?:NOT\s+BETWEEN\b)/i, /^(?:NOT\s+LIKE\b)/i, /^(?:BY\b)/i, /^(?:~~\*)/i, /^(?:!~~\*)/i, /^(?:~~)/i, /^(?:!~~)/i, /^(?:ILIKE\b)/i, /^(?:NOT\s+ILIKE\b)/i, /^(?:CALL\b)/i, /^(?:CASE\b)/i, /^(?:CAST\b)/i, /^(?:CHECK\b)/i, /^(?:CLASS\b)/i, /^(?:CLOSE\b)/i, /^(?:COLLATE\b)/i, /^(?:COLUMN\b)/i, /^(?:COLUMNS\b)/i, /^(?:COMMIT\b)/i, /^(?:CONSTRAINT\b)/i, /^(?:CONTENT\b)/i, /^(?:CONTINUE\b)/i, /^(?:CONVERT\b)/i, /^(?:CORRESPONDING\b)/i, /^(?:COUNT\b)/i, /^(?:CREATE\b)/i, /^(?:CROSS\b)/i, /^(?:CUBE\b)/i, /^(?:CURRENT_TIMESTAMP\b)/i, /^(?:CURSOR\b)/i, /^(?:DATABASE(S)?)/i, /^(?:DATEADD\b)/i, /^(?:DATEDIFF\b)/i, /^(?:DECLARE\b)/i, /^(?:DEFAULT\b)/i, /^(?:DELETE\b)/i, /^(?:DELETED\b)/i, /^(?:DESC\b)/i, /^(?:DETACH\b)/i, /^(?:DISTINCT\b)/i, /^(?:DROP\b)/i, /^(?:ECHO\b)/i, /^(?:EDGE\b)/i, /^(?:END\b)/i, /^(?:ENUM\b)/i, /^(?:ELSE\b)/i, /^(?:ESCAPE\b)/i, /^(?:EXCEPT\b)/i, /^(?:EXEC\b)/i, /^(?:EXECUTE\b)/i, /^(?:EXISTS\b)/i, /^(?:EXPLAIN\b)/i, /^(?:FALSE\b)/i, /^(?:FETCH\b)/i, /^(?:FIRST\b)/i, /^(?:FOR\b)/i, /^(?:FOREIGN\b)/i, /^(?:FROM\b)/i, /^(?:FULL\b)/i, /^(?:FUNCTION\b)/i, /^(?:GLOB\b)/i, /^(?:GO\b)/i, /^(?:GRAPH\b)/i, /^(?:GROUP\b)/i, /^(?:GROUPING\b)/i, /^(?:HAVING\b)/i, /^(?:IF\b)/i, /^(?:IDENTITY\b)/i, /^(?:IS\b)/i, /^(?:IN\b)/i, /^(?:INDEX\b)/i, /^(?:INDEXED\b)/i, /^(?:INNER\b)/i, /^(?:INSTEAD\b)/i, /^(?:INSERT\b)/i, /^(?:INSERTED\b)/i, /^(?:INTERSECT\b)/i, /^(?:INTERVAL\b)/i, /^(?:INTO\b)/i, /^(?:JOIN\b)/i, /^(?:KEY\b)/i, /^(?:LAST\b)/i, /^(?:LET\b)/i, /^(?:LEFT\b)/i, /^(?:LIKE\b)/i, /^(?:LIMIT\b)/i, /^(?:MATCHED\b)/i, /^(?:MATRIX\b)/i, /^(?:MAX(\s+)?(?=\())/i, /^(?:MAX(\s+)?(?=(,|\))))/i, /^(?:MIN(\s+)?(?=\())/i, /^(?:MERGE\b)/i, /^(?:MINUS\b)/i, /^(?:MODIFY\b)/i, /^(?:NATURAL\b)/i, /^(?:NEXT\b)/i, /^(?:NEW\b)/i, /^(?:NOCASE\b)/i, /^(?:NO\b)/i, /^(?:NOT\b)/i, /^(?:NULL\b)/i, /^(?:OFF\b)/i, /^(?:ON\b)/i, /^(?:ONLY\b)/i, /^(?:OF\b)/i, /^(?:OFFSET\b)/i, /^(?:OPEN\b)/i, /^(?:OPTION\b)/i, /^(?:OR\b)/i, /^(?:ORDER\b)/i, /^(?:OUTER\b)/i, /^(?:OVER\b)/i, /^(?:PATH\b)/i, /^(?:PARTITION\b)/i, /^(?:PERCENT\b)/i, /^(?:PIVOT\b)/i, /^(?:PLAN\b)/i, /^(?:PRIMARY\b)/i, /^(?:PRINT\b)/i, /^(?:PRIOR\b)/i, /^(?:QUERY\b)/i, /^(?:READ\b)/i, /^(?:RECORDSET\b)/i, /^(?:REDUCE\b)/i, /^(?:REFERENCES\b)/i, /^(?:REGEXP\b)/i, /^(?:REINDEX\b)/i, /^(?:RELATIVE\b)/i, /^(?:REMOVE\b)/i, /^(?:RENAME\b)/i, /^(?:REPEAT\b)/i, /^(?:REPLACE\b)/i, /^(?:REQUIRE\b)/i, /^(?:RESTORE\b)/i, /^(?:RETURN\b)/i, /^(?:RETURNS\b)/i, /^(?:RIGHT\b)/i, /^(?:ROLLBACK\b)/i, /^(?:ROLLUP\b)/i, /^(?:ROW\b)/i, /^(?:ROWS\b)/i, /^(?:SCHEMA(S)?)/i, /^(?:SEARCH\b)/i, /^(?:SEMI\b)/i, /^(?:SET\b)/i, /^(?:SETS\b)/i, /^(?:SHOW\b)/i, /^(?:SOME\b)/i, /^(?:SOURCE\b)/i, /^(?:STRATEGY\b)/i, /^(?:STORE\b)/i, /^(?:SUM\b)/i, /^(?:TABLE\b)/i, /^(?:TABLES\b)/i, /^(?:TARGET\b)/i, /^(?:TEMP\b)/i, /^(?:TEMPORARY\b)/i, /^(?:TEXTSTRING\b)/i, /^(?:THEN\b)/i, /^(?:TIMEOUT\b)/i, /^(?:TO\b)/i, /^(?:TOP\b)/i, /^(?:TRAN\b)/i, /^(?:TRANSACTION\b)/i, /^(?:TRIGGER\b)/i, /^(?:TRUE\b)/i, /^(?:TRUNCATE\b)/i, /^(?:UNION\b)/i, /^(?:UNIQUE\b)/i, /^(?:UNPIVOT\b)/i, /^(?:UPDATE\b)/i, /^(?:USE\b)/i, /^(?:USING\b)/i, /^(?:VALUE\b)/i, /^(?:VALUES\b)/i, /^(?:VERTEX\b)/i, /^(?:VIEW\b)/i, /^(?:WHEN\b)/i, /^(?:WHERE\b)/i, /^(?:WHILE\b)/i, /^(?:WITH\b)/i, /^(?:WORK\b)/i, /^(?:(\d*[.])?\d+[eE]\d+)/i, /^(?:(\d*[.])?\d+)/i, /^(?:->)/i, /^(?:#)/i, /^(?:\+)/i, /^(?:-)/i, /^(?:\*)/i, /^(?:\/)/i, /^(?:%)/i, /^(?:!===)/i, /^(?:===)/i, /^(?:!==)/i, /^(?:==)/i, /^(?:>=)/i, /^(?:&)/i, /^(?:\|)/i, /^(?:<<)/i, /^(?:>>)/i, /^(?:>)/i, /^(?:<=)/i, /^(?:<>)/i, /^(?:<)/i, /^(?:=)/i, /^(?:!=)/i, /^(?:\()/i, /^(?:\))/i, /^(?:@)/i, /^(?:\{)/i, /^(?:\})/i, /^(?:\])/i, /^(?::-)/i, /^(?:\?-)/i, /^(?:\.\.)/i, /^(?:\.)/i, /^(?:,)/i, /^(?:::)/i, /^(?::)/i, /^(?:;)/i, /^(?:\$)/i, /^(?:\?)/i, /^(?:!)/i, /^(?:\^)/i, /^(?:~)/i, /^(?:[a-zA-Z_][a-zA-Z_0-9]*)/i, /^(?:$)/i, /^(?:.)/i],
      conditions: {
        INITIAL: {
          rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274],
          inclusive: !0
        }
      }
    };

    function Ei() {
      this.yy = {};
    }

    return fi.lexer = bi, new ((Ei.prototype = fi).Parser = Ei)();
  }();

  void 0 !== W && "undefined" != typeof exports && (exports.parser = t, exports.Parser = t.Parser, exports.parse = function () {
    return t.parse.apply(t, arguments);
  }, exports.main = function (e) {
    e[1] || (console.log("Usage: " + e[0] + " FILE"), process.exit(1));
    var t = null.readFileSync(null.normalize(e[1]), "utf8");
    return exports.parser.parse(t);
  }, "undefined" != typeof module && W.main === module && exports.main(process.argv.slice(1))), gi.prettyflag = !1, gi.pretty = function (e, t) {
    var r = gi.prettyflag;
    gi.prettyflag = !t;
    var n = gi.parse(e).toString();
    return gi.prettyflag = r, n;
  };
  var c = gi.utils = {};

  function f(e) {
    return "(y=" + e + ",y===y?y:undefined)";
  }

  function n(e, t) {
    return "(y=" + e + ',typeof y=="undefined"?undefined:' + t + ")";
  }

  function S() {
    return !0;
  }

  function e() {}

  function u(e) {
    return e[0] === String.fromCharCode(65279) && (e = e.substr(1)), e;
  }

  var p = c.escapeq = function (e) {
    return ("" + e).replace(/["'\\\n\r\u2028\u2029]/g, function (e) {
      switch (e) {
        case '"':
        case "'":
        case "\\":
          return "\\" + e;

        case "\n":
          return "\\n";

        case "\r":
          return "\\r";

        case "\u2028":
          return "\\u2028";

        case "\u2029":
          return "\\u2029";
      }
    });
  },
      l = c.undoubleq = function (e) {
    return e.replace(/(\')/g, "''");
  },
      mi = c.doubleq = function (e) {
    return e.replace(/(\'\')/g, "\\'");
  };

  c.doubleqq = function (e) {
    return e.replace(/\'/g, "'");
  };

  c.global = "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : Function("return this")();

  c.isNativeFunction = function (e) {
    return "function" == typeof e && !!~e.toString().indexOf("[native code]");
  };

  c.isWebWorker = function () {
    try {
      var e = c.global.importScripts;
      return c.isNativeFunction(e);
    } catch (e) {
      return !1;
    }
  }(), c.isNode = function () {
    try {
      return c.isNativeFunction(c.global.process.reallyExit);
    } catch (e) {
      return !1;
    }
  }(), c.isBrowser = function () {
    try {
      return c.isNativeFunction(c.global.location.reload);
    } catch (e) {
      return !1;
    }
  }(), c.isBrowserify = c.isBrowser && "undefined" != typeof process && true, c.isRequireJS = c.isBrowser && "function" == typeof W.specified, c.isMeteor = "undefined" != typeof Meteor && Meteor.release, c.isMeteorClient = c.isMeteorClient = c.isMeteor && Meteor.isClient, c.isMeteorServer = c.isMeteor && Meteor.isServer, c.isCordova = "object" == typeof cordova, c.isReactNative = !1, c.hasIndexedDB = !!c.global.indexedDB, c.isArray = function (e) {
    return "[object Array]" === Object.prototype.toString.call(e);
  };

  var o = c.loadFile = function (t, e, r, n) {
    var a;
    if (c.isNode || c.isMeteorServer) ;else if (c.isCordova) c.global.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function (e) {
      e.root.getFile(t, {
        create: !1
      }, function (e) {
        e.file(function (e) {
          var t = new FileReader();
          t.onloadend = function (e) {
            r(u(this.result));
          }, t.readAsText(e);
        });
      });
    });else if ("string" == typeof t) {
      if ("#" === t.substr(0, 1) && "undefined" != typeof document) a = document.querySelector(t).textContent, r(a);else {
        var s = new XMLHttpRequest();
        s.onreadystatechange = function () {
          if (4 === s.readyState) if (200 === s.status) r && r(u(s.responseText));else if (n) return n(s);
        }, s.open("GET", t, e), s.responseType = "text", s.send();
      }
    } else if (t instanceof Event) {
      var i = t.target.files,
          o = new FileReader();
      i[0].name;
      o.onload = function (e) {
        var t = e.target.result;
        r(u(t));
      }, o.readAsText(i[0]);
    }
  };

  c.loadBinaryFile = function (e, t, n, r) {
    if (c.isNode || c.isMeteorServer) ;else if ("string" == typeof e) {
      var a = new XMLHttpRequest();
      a.open("GET", e, t), a.responseType = "arraybuffer", a.onload = function () {
        for (var e = new Uint8Array(a.response), t = [], r = 0; r < e.length; ++r) t[r] = String.fromCharCode(e[r]);

        n(t.join(""));
      }, a.send();
    } else if (e instanceof Event) {
      var s = e.target.files,
          i = new FileReader();
      s[0].name;
      i.onload = function (e) {
        var t = e.target.result;
        n(t);
      }, i.readAsArrayBuffer(s[0]);
    } else e instanceof Blob && n(e);
  }, c.removeFile = function (e, t) {
    if (!c.isNode) throw new Error("You can remove files only in Node.js and Apache Cordova");
  }, c.deleteFile = function (e, t) {};

  c.autoExtFilename = function (e, t, r) {
    return r = r || {}, "string" != typeof e || e.match(/^[A-z]+:\/\/|\n|\..{2,4}$/) || 0 === r.autoExt || !1 === r.autoExt ? e : e + "." + t;
  };

  c.fileExists = function (e, t) {
    if (!c.isNode) throw new Error("You can use exists() only in Node.js or Apach Cordova");
  }, c.saveFile = function (e, t, r, n) {
    var a = 1;
    if (void 0 === e) a = t, r && (a = r(a));else if (c.isNode) ;else if (9 === h()) {
      var s = t.replace(/\r\n/g, "&#A;&#D;");
      s = (s = s.replace(/\n/g, "&#D;")).replace(/\t/g, "&#9;");
      var i = c.global.open("about:blank", "_blank");
      i.document.write(s), i.document.close(), i.document.execCommand("SaveAs", !1, e), i.close();
    } else {
      var o = {
        disableAutoBom: !1
      };
      gi.utils.extend(o, n);
      var u = new Blob([t], {
        type: "text/plain;charset=utf-8"
      });
      ae(u, e, o.disableAutoBom), r && (a = r(a));
    }
    return a;
  };

  function h() {
    var e = navigator.userAgent.toLowerCase();
    return -1 !== e.indexOf("msie") && parseInt(e.split("msie")[1]);
  }

  var E = c.hash = function (e) {
    for (var t = 2166136261, r = e.length; r;) t ^= e.charCodeAt(--r), t += (t << 1) + (t << 4) + (t << 7) + (t << 8) + (t << 24);

    return t;
  },
      r = c.arrayUnion = function (e, t) {
    var r = t.slice(0);
    return e.forEach(function (e) {
      r.indexOf(e) < 0 && r.push(e);
    }), r;
  },
      d = c.arrayDiff = function (e, t) {
    return e.filter(function (e) {
      return t.indexOf(e) < 0;
    });
  },
      T = c.arrayIntersect = function (e, n) {
    var a = [];
    return e.forEach(function (t) {
      var r = !1;
      n.forEach(function (e) {
        r = r || t === e;
      }), r && a.push(t);
    }), a;
  },
      m = c.arrayUnionDeep = function (e, t) {
    var n = t.slice(0);
    return e.forEach(function (t) {
      var r = !1;
      n.forEach(function (e) {
        r = r || N(t, e);
      }), r || n.push(t);
    }), n;
  },
      A = c.arrayExceptDeep = function (e, n) {
    var a = [];
    return e.forEach(function (t) {
      var r = !1;
      n.forEach(function (e) {
        r = r || N(t, e);
      }), r || a.push(t);
    }), a;
  },
      y = c.arrayIntersectDeep = function (e, n) {
    var a = [];
    return e.forEach(function (t) {
      var r = !1;
      n.forEach(function (e) {
        r = r || N(t, e, !0);
      }), r && a.push(t);
    }), a;
  },
      b = c.cloneDeep = function e(t) {
    if (null === t || "object" != typeof t) return t;
    if (t instanceof Date) return new Date(t);
    var r = t.constructor();

    for (var n in t) t.hasOwnProperty(n) && (r[n] = e(t[n]));

    return r;
  },
      N = c.deepEqual = function (e, t) {
    if (e === t) return !0;
    if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
    if (Object.keys(e).length !== Object.keys(t).length) return !1;

    for (var r in e) if (!N(e[r], t[r])) return !1;

    return !0;
  },
      x = c.distinctArray = function (t) {
    for (var e = {}, r = 0, n = t.length; r < n; r++) {
      e["object" == typeof t[r] ? Object.keys(t[r]).sort().map(function (e) {
        return e + "`" + t[r][e];
      }).join("`") : t[r]] = t[r];
    }

    var a = [];

    for (var s in e) a.push(e[s]);

    return a;
  },
      g = c.extend = function (e, t) {
    for (var r in e = e || {}, t) t.hasOwnProperty(r) && (e[r] = t[r]);

    return e;
  },
      a = c.flatArray = function (t) {
    if (!t || 0 === t.length) return [];
    if ("object" == typeof t && t instanceof gi.Recordset) return t.data.map(function (e) {
      return e[t.columns[0].columnid];
    });
    var r = Object.keys(t[0])[0];
    return void 0 === r ? [] : t.map(function (e) {
      return e[r];
    });
  };

  c.arrayOfArrays = function (e) {
    return e.map(function (e) {
      var t = [];

      for (var r in e) t.push(e[r]);

      return t;
    });
  };

  Array.isArray || (Array.isArray = function (e) {
    return "[object Array]" === Object.prototype.toString.call(e);
  });
  c.xlsnc = function (e) {
    var t = String.fromCharCode(65 + e % 26);
    return 26 <= e && (e = (e / 26 | 0) - 1, t = String.fromCharCode(65 + e % 26) + t, 26 < e && (e = (e / 26 | 0) - 1, t = String.fromCharCode(65 + e % 26) + t)), t;
  }, c.xlscn = function (e) {
    var t = e.charCodeAt(0) - 65;
    return 1 < e.length && (t = 26 * (t + 1) + e.charCodeAt(1) - 65, 2 < e.length && (t = 26 * (t + 1) + e.charCodeAt(2) - 65)), t;
  }, c.domEmptyChildren = function (e) {
    for (var t = e.childNodes.length; t--;) e.removeChild(e.lastChild);
  }, c.like = function (e, t, r) {
    r = r || "";

    for (var n = 0, a = "^"; n < e.length;) {
      var s = e[n],
          i = "";
      n < e.length - 1 && (i = e[n + 1]), s === r ? (a += "\\" + i, n++) : "[" === s && "^" === i ? (a += "[^", n++) : "[" === s || "]" === s ? a += s : "%" === s ? a += ".*" : "_" === s ? a += "." : -1 < "/.*+?|(){}".indexOf(s) ? a += "\\" + s : a += s, n++;
    }

    return a += "$", -1 < ("" + (t || "")).toUpperCase().search(RegExp(a.toUpperCase()));
  };
  c.glob = function (e, t) {
    for (var r = 0, n = "^"; r < t.length;) {
      var a = t[r],
          s = "";
      r < t.length - 1 && (s = t[r + 1]), "[" === a && "^" === s ? (n += "[^", r++) : "[" === a || "]" === a ? n += a : "*" === a ? n += ".*" : "?" === a ? n += "." : -1 < "/.*+?|(){}".indexOf(a) ? n += "\\" + a : n += a, r++;
    }

    return n += "$", -1 < ("" + (e || "")).toUpperCase().search(RegExp(n.toUpperCase()));
  }, c.findAlaSQLPath = function () {
    if (c.isWebWorker) return "";
    if (c.isMeteorClient) return "/packages/dist/";
    if (c.isMeteorServer) return "assets/packages/dist/";
    if (c.isNode) return "";
    if (c.isBrowser) for (var e = document.getElementsByTagName("script"), t = 0; t < e.length; t++) {
      if ("alasql-worker.js" === e[t].src.substr(-16).toLowerCase()) return e[t].src.substr(0, e[t].src.length - 16);
      if ("alasql-worker.min.js" === e[t].src.substr(-20).toLowerCase()) return e[t].src.substr(0, e[t].src.length - 20);
      if ("alasql.js" === e[t].src.substr(-9).toLowerCase()) return e[t].src.substr(0, e[t].src.length - 9);
      if ("alasql.min.js" === e[t].src.substr(-13).toLowerCase()) return e[t].src.substr(0, e[t].src.length - 13);
    }
    return "";
  };

  function C() {
    var e = gi.private.externalXlsxLib;
    if (e) return e;
    if (c.isNode || c.isBrowserify || c.isMeteorServer || (e = c.global.XLSX || null), null === e) throw new Error("Please include the xlsx.js library");
    return e;
  }

  gi.path = gi.utils.findAlaSQLPath(), gi.utils.uncomment = function (e) {
    for (var t, r = !1, n = !1, a = !1, s = 0, i = (e = ("__" + e + "__").split("")).length; s < i; s++) {
      var o = "\\" !== e[s - 1] || "\\" === e[s - 2];
      r ? e[s] === t && o && (r = !1) : n ? "*" === e[s] && "/" === e[s + 1] ? (e[s] = e[s + 1] = "", n = !1, s++) : e[s] = "" : a ? ("\n" !== e[s + 1] && "\r" !== e[s + 1] || (a = !1), e[s] = "") : '"' === e[s] || "'" === e[s] ? (r = !0, t = e[s]) : "[" === e[s] && "@" !== e[s - 1] ? (r = !0, t = "]") : "/" === e[s] && "*" === e[s + 1] && (n = !(e[s] = ""));
    }

    return e = e.join("").slice(2, -2);
  }, gi.parser = t, gi.parser.parseError = function (e, t) {
    throw new Error("Have you used a reserved keyword without `escaping` it?\n" + e);
  }, gi.parse = function (e) {
    return t.parse(gi.utils.uncomment(e));
  }, gi.engines = {}, gi.databases = {}, gi.databasenum = 0, gi.options = {}, gi.options.errorlog = !1, gi.options.valueof = !1, gi.options.dropifnotexists = !1, gi.options.datetimeformat = "sql", gi.options.casesensitive = !0, gi.options.logtarget = "output", gi.options.logprompt = !0, gi.options.progress = !1, gi.options.modifier = void 0, gi.options.columnlookup = 10, gi.options.autovertex = !0, gi.options.usedbo = !0, gi.options.autocommit = !0, gi.options.cache = !0, gi.options.tsql = !0, gi.options.mysql = !0, gi.options.postgres = !0, gi.options.oracle = !0, gi.options.sqlite = !0, gi.options.orientdb = !0, gi.options.nocount = !1, gi.options.nan = !1, gi.options.joinstar = "overwrite", gi.vars = {}, gi.declares = {}, gi.prompthistory = [], gi.plugins = {}, gi.from = {}, gi.into = {}, gi.fn = {}, gi.aggr = {}, gi.busy = 0, gi.MAXSQLCACHESIZE = 1e4, gi.DEFAULTDATABASEID = "alasql", gi.lastid = 0, gi.buffer = {}, gi.private = {
    externalXlsxLib: null
  }, gi.setXLSX = function (e) {
    gi.private.externalXlsxLib = e;
  }, gi.use = function (e) {
    if (e = e || gi.DEFAULTDATABASEID, gi.useid !== e) {
      gi.useid = e;
      var t = gi.databases[gi.useid];
      gi.tables = t.tables, t.resetSqlCache(), gi.options.usedbo && (gi.databases.dbo = t);
    }
  }, gi.autoval = function (e, t, r, n) {
    var a = n ? gi.databases[n] : gi.databases[gi.useid];
    if (!a.tables[e]) throw new Error("Tablename not found: " + e);
    if (!a.tables[e].identities[t]) throw new Error("Colname not found: " + t);
    return r ? a.tables[e].identities[t].value || null : a.tables[e].identities[t].value - a.tables[e].identities[t].step || null;
  }, gi.exec = function (e, t, r, n) {
    if ("function" == typeof t && (n = r, r = t, t = {}), delete gi.error, t = t || {}, !gi.options.errorlog) return gi.dexec(gi.useid, e, t, r, n);

    try {
      return gi.dexec(gi.useid, e, t, r, n);
    } catch (e) {
      gi.error = e, r && r(null, gi.error);
    }
  }, gi.dexec = function (e, t, r, n, a) {
    var s,
        i = gi.databases[e];
    if (gi.options.cache && (s = E(t), (u = i.sqlCache[s]) && i.dbversion === u.dbversion)) return u(r, n);
    var o = gi.parse(t);

    if (o.statements) {
      if (0 === o.statements.length) return 0;

      if (1 === o.statements.length) {
        if (o.statements[0].compile) {
          var u;
          if (!(u = o.statements[0].compile(e, r))) return;
          return u.sql = t, u.dbversion = i.dbversion, gi.options.cache && (i.sqlCacheSize > gi.MAXSQLCACHESIZE && i.resetSqlCache(), i.sqlCacheSize++, i.sqlCache[s] = u), gi.res = u(r, n, a);
        }

        return gi.precompile(o.statements[0], gi.useid, r), gi.res = o.statements[0].execute(e, r, n, a);
      }

      if (!n) return gi.drun(e, o, r, n, a);
      gi.adrun(e, o, r, n, a);
    }
  }, gi.drun = function (e, t, r, n, a) {
    var s = gi.useid;
    s !== e && gi.use(e);

    for (var i = [], o = 0, u = t.statements.length; o < u; o++) if (t.statements[o]) if (t.statements[o].compile) {
      var c = t.statements[o].compile(gi.useid);
      i.push(gi.res = c(r, null, a));
    } else gi.precompile(t.statements[o], gi.useid, r), i.push(gi.res = t.statements[o].execute(gi.useid, r));

    return s !== e && gi.use(s), n && n(i), gi.res = i;
  }, gi.adrun = function (n, a, s, i, o) {
    var u = 0,
        c = a.statements.length;
    !1 !== gi.options.progress && gi.options.progress(c, u++);
    var l = gi.useid;
    l !== n && gi.use(n);
    var h = [];
    !function e(t) {
      void 0 !== t && h.push(t);
      var r = a.statements.shift();
      r ? (r.compile ? r.compile(gi.useid)(s, e, o) : (gi.precompile(a.statements[0], gi.useid, s), r.execute(gi.useid, s, e)), !1 !== gi.options.progress && gi.options.progress(c, u++)) : (l !== n && gi.use(l), i(h));
    }();
  }, gi.compile = function (e, t) {
    t = t || gi.useid;
    var r = gi.parse(e);
    if (1 !== r.statements.length) throw new Error("Cannot compile, because number of statements in SQL is not equal to 1");
    var a = r.statements[0].compile(t);
    return a.promise = function (e) {
      return new Promise(function (r, n) {
        a(e, function (e, t) {
          t ? n(t) : r(e);
        });
      });
    }, a;
  }, c.global.Promise || c.isNode || function () {
    function c(e) {
      return "function" == typeof e;
    }

    function t() {
      return function () {
        setTimeout(r, 1);
      };
    }

    function r() {
      for (var e = 0; e < C; e += 2) {
        (0, k[e])(k[e + 1]), k[e] = void 0, k[e + 1] = void 0;
      }

      C = 0;
    }

    function i() {}

    function o(e) {
      try {
        return e.then;
      } catch (e) {
        return G.error = e, G;
      }
    }

    function u(e, t, r) {
      t.constructor === e.constructor && r === M && constructor.resolve === U ? function (t, e) {
        e._state === P ? h(t, e._result) : e._state === q ? d(t, e._result) : f(e, void 0, function (e) {
          l(t, e);
        }, function (e) {
          d(t, e);
        });
      }(e, t) : r === G ? d(e, G.error) : void 0 === r ? h(e, t) : c(r) ? function (e, n, a) {
        R(function (t) {
          var r = !1,
              e = function (e, t, r, n) {
            try {
              e.call(t, r, n);
            } catch (e) {
              return e;
            }
          }(a, n, function (e) {
            r || (r = !0, n !== e ? l(t, e) : h(t, e));
          }, function (e) {
            r || (r = !0, d(t, e));
          }, t._label);

          !r && e && (r = !0, d(t, e));
        }, e);
      }(e, t, r) : h(e, t);
    }

    function l(e, t) {
      e === t ? d(e, new TypeError("You cannot resolve a promise with itself")) : function (e) {
        return "function" == typeof e || "object" == typeof e && null !== e;
      }(t) ? u(e, t, o(t)) : h(e, t);
    }

    function n(e) {
      e._onerror && e._onerror(e._result), p(e);
    }

    function h(e, t) {
      e._state === F && (e._result = t, e._state = P, 0 !== e._subscribers.length && R(p, e));
    }

    function d(e, t) {
      e._state === F && (e._state = q, e._result = t, R(n, e));
    }

    function f(e, t, r, n) {
      var a = e._subscribers,
          s = a.length;
      e._onerror = null, a[s] = t, a[s + P] = r, a[s + q] = n, 0 === s && e._state && R(p, e);
    }

    function p(e) {
      var t = e._subscribers,
          r = e._state;

      if (0 !== t.length) {
        for (var n, a, s = e._result, i = 0; i < t.length; i += 3) n = t[i], a = t[i + r], n ? b(r, n, a, s) : a(s);

        e._subscribers.length = 0;
      }
    }

    function e() {
      this.error = null;
    }

    function b(e, t, r, n) {
      var a,
          s,
          i,
          o,
          u = c(r);

      if (u) {
        if ((a = function (e, t) {
          try {
            return e(t);
          } catch (e) {
            return V.error = e, V;
          }
        }(r, n)) === V ? (o = !0, s = a.error, a = null) : i = !0, t === a) return void d(t, new TypeError("A promises callback cannot return that same promise."));
      } else a = n, i = !0;

      t._state !== F || (u && i ? l(t, a) : o ? d(t, s) : e === P ? h(t, a) : e === q && d(t, a));
    }

    function E(e) {
      e[_] = B++, e._state = void 0, e._result = void 0, e._subscribers = [];
    }

    function a(e) {
      this[_] = B++, this._result = this._state = void 0, this._subscribers = [], i !== e && ("function" != typeof e && function () {
        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
      }(), this instanceof a ? function (t, e) {
        try {
          e(function (e) {
            l(t, e);
          }, function (e) {
            d(t, e);
          });
        } catch (e) {
          d(t, e);
        }
      }(this, e) : function () {
        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
      }());
    }

    function s(e, t) {
      this._instanceConstructor = e, this.promise = new e(i), this.promise[_] || E(this.promise), Array.isArray(t) ? (this._input = t, this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? h(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && h(this.promise, this._result))) : d(this.promise, new Error("Array Methods must be provided an Array"));
    }

    var g,
        m,
        v,
        S,
        T,
        A,
        y,
        N = Array.isArray ? Array.isArray : function (e) {
      return "[object Array]" === Object.prototype.toString.call(e);
    },
        C = 0,
        R = function (e, t) {
      k[C] = e, k[C + 1] = t, 2 === (C += 2) && (m ? m(r) : v());
    },
        O = "undefined" != typeof window ? window : void 0,
        w = O || {},
        I = w.MutationObserver || w.WebKitMutationObserver,
        x = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process),
        D = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
        k = new Array(1e3);

    v = x ? function () {
      process.nextTick(r);
    } : I ? (T = 0, A = new I(r), y = document.createTextNode(""), A.observe(y, {
      characterData: !0
    }), function () {
      y.data = T = ++T % 2;
    }) : D ? ((S = new MessageChannel()).port1.onmessage = r, function () {
      S.port2.postMessage(0);
    }) : void 0 === O ? function () {
      try {
        var e = W("vertx");
        return g = e.runOnLoop || e.runOnContext, function () {
          g(r);
        };
      } catch (e) {
        return t();
      }
    }() : t();

    function L(a) {
      var s = this;
      return new s(N(a) ? function (e, t) {
        for (var r = a.length, n = 0; n < r; n++) s.resolve(a[n]).then(e, t);
      } : function (e, t) {
        t(new TypeError("You must pass an array to race."));
      });
    }

    function $(e) {
      var t = new this(i);
      return d(t, e), t;
    }

    var M = function (e, t) {
      var r = this,
          n = new this.constructor(i);
      void 0 === n[_] && E(n);
      var a = r._state;

      if (a) {
        var s = arguments[a - 1];
        R(function () {
          b(a, n, s, r._result);
        });
      } else f(r, n, e, t);

      return n;
    },
        U = function (e) {
      if (e && "object" == typeof e && e.constructor === this) return e;
      var t = new this(i);
      return l(t, e), t;
    },
        _ = Math.random().toString(36).substring(16),
        F = void 0,
        P = 1,
        q = 2,
        G = new e(),
        V = new e(),
        B = 0,
        j = a;

    a.all = function (e) {
      return new H(this, e).promise;
    }, a.race = L, a.resolve = U, a.reject = $, a._setScheduler = function (e) {
      m = e;
    }, a._setAsap = function (e) {
      R = e;
    }, a._asap = R, a.prototype = {
      constructor: a,
      then: M,
      catch: function (e) {
        return this.then(null, e);
      }
    };
    var H = s;
    s.prototype._enumerate = function () {
      for (var e = this.length, t = this._input, r = 0; this._state === F && r < e; r++) this._eachEntry(t[r], r);
    }, s.prototype._eachEntry = function (t, e) {
      var r = this._instanceConstructor,
          n = r.resolve;

      if (n === U) {
        var a = o(t);
        if (a === M && t._state !== F) this._settledAt(t._state, e, t._result);else if ("function" != typeof a) this._remaining--, this._result[e] = t;else if (r === j) {
          var s = new r(i);
          u(s, t, a), this._willSettleAt(s, e);
        } else this._willSettleAt(new r(function (e) {
          e(t);
        }), e);
      } else this._willSettleAt(n(t), e);
    }, s.prototype._settledAt = function (e, t, r) {
      var n = this.promise;
      n._state === F && (this._remaining--, e === q ? d(n, r) : this._result[t] = r), 0 === this._remaining && h(n, this._result);
    }, s.prototype._willSettleAt = function (e, t) {
      var r = this;
      f(e, void 0, function (e) {
        r._settledAt(P, t, e);
      }, function (e) {
        r._settledAt(q, t, e);
      });
    };

    var J = function () {
      var e;
      if ("undefined" != typeof global) e = global;else if ("undefined" != typeof self) e = self;else try {
        e = Function("return this")();
      } catch (e) {
        throw new Error("polyfill failed because global object is unavailable in this environment");
      }
      var t = e.Promise;
      t && "[object Promise]" === Object.prototype.toString.call(t.resolve()) && !t.cast || (e.Promise = j);
    },
        Y = {
      Promise: j,
      polyfill: J
    };

    "function" == typeof define && define.amd ? define(function () {
      return Y;
    }) : "undefined" != typeof module && module.exports ? module.exports = Y : void 0 !== this && (this.ES6Promise = Y), J();
  }.call(this);

  function i(e, t, a, s) {
    return new c.global.Promise(function (r, n) {
      gi(e, t, function (e, t) {
        t ? n(t) : (a && s && !1 !== gi.options.progress && gi.options.progress(a, s), r(e));
      });
    });
  }

  gi.promise = function (e, t) {
    if ("undefined" == typeof Promise) throw new Error("Please include a Promise/A+ library");
    if ("string" == typeof e) return i(e, t);
    if (!c.isArray(e) || e.length < 1 || void 0 !== t) throw new Error("Error in .promise parameters");
    return function (e) {
      if (!(e.length < 1)) {
        for (var t, r, n, a = [], s = 0; s < e.length; s++) {
          if ("string" == typeof (t = e[s]) && (t = [t]), !c.isArray(t) || t.length < 1 || 2 < t.length) throw new Error("Error in .promise parameter");
          r = t[0], n = t[1] || void 0, a.push(i(r, n, s, e.length));
        }

        return c.global.Promise.all(a);
      }
    }(e);
  };

  var s = gi.Database = function (e) {
    var t = this;
    if (t === gi) if (e) {
      if (t = gi.databases[e], !(gi.databases[e] = t)) throw new Error('Database "' + e + '" not found');
    } else t = gi.databases.alasql, gi.options.tsql && (gi.databases.tempdb = gi.databases.alasql);
    return e = e || "db" + gi.databasenum++, t.databaseid = e, (gi.databases[e] = t).dbversion = 0, t.tables = {}, t.views = {}, t.triggers = {}, t.indices = {}, t.objects = {}, t.counter = 0, t.resetSqlCache(), t;
  };

  s.prototype.resetSqlCache = function () {
    this.sqlCache = {}, this.sqlCacheSize = 0;
  }, s.prototype.exec = function (e, t, r) {
    return gi.dexec(this.databaseid, e, t, r);
  }, s.prototype.autoval = function (e, t, r) {
    return gi.autoval(e, t, r, this.databaseid);
  }, s.prototype.transaction = function (e) {
    return e(new gi.Transaction(this.databaseid));
  };

  var R = gi.Transaction = function (e) {
    return this.transactionid = Date.now(), this.databaseid = e, this.commited = !1, this.dbversion = gi.databases[e].dbversion, this.bank = JSON.stringify(gi.databases[e]), this;
  };

  R.prototype.commit = function () {
    this.commited = !0, gi.databases[this.databaseid].dbversion = Date.now(), delete this.bank;
  }, R.prototype.rollback = function () {
    if (this.commited) throw new Error("Transaction already commited");
    gi.databases[this.databaseid] = JSON.parse(this.bank), delete this.bank;
  }, R.prototype.exec = function (e, t, r) {
    return gi.dexec(this.databaseid, e, t, r);
  }, R.prototype.executeSQL = R.prototype.exec;

  var O = gi.Table = function (e) {
    this.data = [], this.columns = [], this.xcolumns = {}, this.inddefs = {}, this.indices = {}, this.uniqs = {}, this.uniqdefs = {}, this.identities = {}, this.checks = [], this.checkfns = [], this.beforeinsert = {}, this.afterinsert = {}, this.insteadofinsert = {}, this.beforedelete = {}, this.afterdelete = {}, this.insteadofdelete = {}, this.beforeupdate = {}, this.afterupdate = {}, this.insteadofupdate = {}, g(this, e);
  };

  O.prototype.indexColumns = function () {
    var t = this;
    t.xcolumns = {}, t.columns.forEach(function (e) {
      t.xcolumns[e.columnid] = e;
    });
  };

  gi.View = function (e) {
    this.columns = [], this.xcolumns = {}, this.query = [], g(this, e);
  };

  var w = gi.Query = function (e) {
    this.alasql = gi, this.columns = [], this.xcolumns = {}, this.selectGroup = [], this.groupColumns = {}, g(this, e);
  },
      D = (gi.Recordset = function (e) {
    g(this, e);
  }, t.yy = gi.yy = {});

  D.extend = g, D.casesensitive = gi.options.casesensitive;

  var I = D.Base = function (e) {
    return D.extend(this, e);
  };

  I.prototype.toString = function () {}, I.prototype.toType = function () {}, I.prototype.toJS = function () {}, I.prototype.compile = e, I.prototype.exec = function () {}, I.prototype.compile = e, I.prototype.exec = function () {}, D.Statements = function (e) {
    return D.extend(this, e);
  }, D.Statements.prototype.toString = function () {
    return this.statements.map(function (e) {
      return e.toString();
    }).join("; ");
  }, D.Statements.prototype.compile = function (t) {
    var n = this.statements.map(function (e) {
      return e.compile(t);
    });
    return 1 === n.length ? n[0] : function (t, e) {
      var r = n.map(function (e) {
        return e(t);
      });
      return e && e(r), r;
    };
  }, D.Search = function (e) {
    return D.extend(this, e);
  }, D.Search.prototype.toString = function () {
    var e = "SEARCH ";
    return this.selectors && (e += this.selectors.toString()), this.from && (e += "FROM " + this.from.toString()), e;
  }, D.Search.prototype.toJS = function (e) {
    return "this.queriesfn[" + (this.queriesidx - 1) + "](this.params,null," + e + ")";
  }, D.Search.prototype.compile = function (e) {
    var n = e,
        a = this,
        s = function (e, t) {
      var r;
      return function (e, O, t) {
        var r,
            w,
            n,
            a,
            I = {},
            s = b(this.selectors);

        if (void 0 !== s && 0 < s.length && (s && s[0] && "PROP" === s[0].srchid && s[0].args && s[0].args[0] && ("XML" === s[0].args[0].toUpperCase() ? (I.mode = "XML", s.shift()) : "HTML" === s[0].args[0].toUpperCase() ? (I.mode = "HTML", s.shift()) : "JSON" === s[0].args[0].toUpperCase() && (I.mode = "JSON", s.shift())), 0 < s.length && "VALUE" === s[0].srchid && (I.value = !0, s.shift())), this.from instanceof D.Column) {
          var i = this.from.databaseid || e;
          w = gi.databases[i].tables[this.from.columnid].data;
        } else if (this.from instanceof D.FuncValue && gi.from[this.from.funcid.toUpperCase()]) {
          var o = this.from.args.map(function (e) {
            var t = e.toJS();
            return new Function("params,alasql", "var y;return " + t).bind(this)(O, gi);
          });
          w = gi.from[this.from.funcid.toUpperCase()].apply(this, o);
        } else if (void 0 === this.from) w = gi.databases[e].objects;else {
          var u = new Function("params,alasql", "var y;return " + this.from.toJS());
          w = u(O, gi), "object" == typeof Mongo && "object" != typeof Mongo.Collection && w instanceof Mongo.Collection && (w = w.find().fetch());
        }

        return r = void 0 !== s && 0 < s.length ? function r(n, a, t) {
          var s = n[a];

          if (s.selid) {
            if ("PATH" === s.selid) {
              for (var i = [{
                node: t,
                stack: []
              }], e = {}, o = gi.databases[gi.useid].objects; 0 < i.length;) {
                var u = i.shift(),
                    c = u.node,
                    l = u.stack;

                if (0 < (C = r(s.args, 0, c)).length) {
                  if (a + 1 + 1 > n.length) return l;
                  var h = [];
                  return l && 0 < l.length && l.forEach(function (e) {
                    h = h.concat(r(n, a + 1, e));
                  }), h;
                }

                void 0 === e[c.$id] && (e[c.$id] = !0, c.$out && 0 < c.$out.length && c.$out.forEach(function (e) {
                  var t = o[e],
                      r = l.concat(t);
                  r.push(o[t.$out[0]]), i.push({
                    node: o[t.$out[0]],
                    stack: r
                  });
                }));
              }

              return [];
            }

            if ("NOT" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? [] : a + 1 + 1 > n.length ? [t] : r(n, a + 1, t);

            if ("DISTINCT" === s.selid) {
              if (0 === (f = void 0 === s.args || 0 === s.args.length ? x(t) : r(s.args, 0, t)).length) return [];
              var d = x(f);
              return a + 1 + 1 > n.length ? d : r(n, a + 1, d);
            }

            if ("AND" === s.selid) return d = !0, s.args.forEach(function (e) {
              d = d && 0 < r(e, 0, t).length;
            }), d ? a + 1 + 1 > n.length ? [t] : r(n, a + 1, t) : [];
            if ("OR" === s.selid) return d = !1, s.args.forEach(function (e) {
              d = d || 0 < r(e, 0, t).length;
            }), d ? a + 1 + 1 > n.length ? [t] : r(n, a + 1, t) : [];
            if ("ALL" === s.selid) return 0 === (f = r(s.args[0], 0, t)).length ? [] : a + 1 + 1 > n.length ? f : r(n, a + 1, f);
            if ("ANY" === s.selid) return 0 === (f = r(s.args[0], 0, t)).length ? [] : a + 1 + 1 > n.length ? [f[0]] : r(n, a + 1, [f[0]]);

            if ("UNIONALL" === s.selid) {
              var f = [];
              return s.args.forEach(function (e) {
                f = f.concat(r(e, 0, t));
              }), 0 === f.length ? [] : a + 1 + 1 > n.length ? f : r(n, a + 1, f);
            }

            if ("UNION" === s.selid) {
              var f = [];
              return s.args.forEach(function (e) {
                f = f.concat(r(e, 0, t));
              }), 0 === (f = x(f)).length ? [] : a + 1 + 1 > n.length ? f : r(n, a + 1, f);
            }

            if ("IF" === s.selid) return 0 === (f = r(s.args, 0, t)).length ? [] : a + 1 + 1 > n.length ? [t] : r(n, a + 1, t);

            if ("REPEAT" === s.selid) {
              var p,
                  b,
                  E = s.args[0].value;
              b = s.args[1] ? s.args[1].value : E, s.args[2] && (p = s.args[2].variable);
              var g = [];
              if (0 === E && (g = a + 1 + 1 > n.length ? [t] : (p && (gi.vars[p] = 0), g.concat(r(n, a + 1, t)))), 0 < b) for (var m = [{
                value: t,
                lvl: 1
              }], v = 0; 0 < m.length;) {
                var f = m[0];

                if (m.shift(), f.lvl <= b) {
                  p && (gi.vars[p] = f.lvl);
                  var S = r(s.sels, 0, f.value);
                  S.forEach(function (e) {
                    m.push({
                      value: e,
                      lvl: f.lvl + 1
                    });
                  }), f.lvl >= E && (a + 1 + 1 > n.length ? g = g.concat(S) : S.forEach(function (e) {
                    g = g.concat(r(n, a + 1, e));
                  }));
                }

                if (1e5 < ++v) throw new Error("Security brake. Number of iterations = " + v);
              }
              return g;
            }

            if ("OF" === s.selid) {
              if (a + 1 + 1 > n.length) return [t];
              var T = [];
              return Object.keys(t).forEach(function (e) {
                gi.vars[s.args[0].variable] = e, T = T.concat(r(n, a + 1, t[e]));
              }), T;
            }

            if ("TO" === s.selid) {
              var A = gi.vars[s.args[0]],
                  y = [];
              return (y = void 0 !== A ? A.slice(0) : []).push(t), a + 1 + 1 > n.length ? [t] : (gi.vars[s.args[0]] = y, T = r(n, a + 1, t), gi.vars[s.args[0]] = A, T);
            }

            if ("ARRAY" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? (N = f, a + 1 + 1 > n.length ? [N] : r(n, a + 1, N)) : [];

            if ("SUM" === s.selid) {
              if (!(0 < (f = r(s.args, 0, t)).length)) return [];
              var N = f.reduce(function (e, t) {
                return e + t;
              }, 0);
              return a + 1 + 1 > n.length ? [N] : r(n, a + 1, N);
            }

            if ("AVG" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? (N = f.reduce(function (e, t) {
              return e + t;
            }, 0) / f.length, a + 1 + 1 > n.length ? [N] : r(n, a + 1, N)) : [];
            if ("COUNT" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? (N = f.length, a + 1 + 1 > n.length ? [N] : r(n, a + 1, N)) : [];
            if ("FIRST" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? (N = f[0], a + 1 + 1 > n.length ? [N] : r(n, a + 1, N)) : [];
            if ("LAST" === s.selid) return 0 < (f = r(s.args, 0, t)).length ? (N = f[f.length - 1], a + 1 + 1 > n.length ? [N] : r(n, a + 1, N)) : [];
            if ("MIN" === s.selid) return 0 === (f = r(s.args, 0, t)).length ? [] : (N = f.reduce(function (e, t) {
              return Math.min(e, t);
            }, 1 / 0), a + 1 + 1 > n.length ? [N] : r(n, a + 1, N));
            if ("MAX" === s.selid) return 0 === (f = r(s.args, 0, t)).length ? [] : (N = f.reduce(function (e, t) {
              return Math.max(e, t);
            }, -1 / 0), a + 1 + 1 > n.length ? [N] : r(n, a + 1, N));

            if ("PLUS" === s.selid) {
              for (g = [], m = r(s.args, 0, t).slice(), a + 1 + 1 > n.length ? g = g.concat(m) : m.forEach(function (e) {
                g = g.concat(r(n, a + 1, e));
              }), v = 0; 0 < m.length;) if (f = m.shift(), f = r(s.args, 0, f), m = m.concat(f), a + 1 + 1 > n.length ? g = g.concat(f) : f.forEach(function (e) {
                var t = r(n, a + 1, e);
                g = g.concat(t);
              }), 1e5 < ++v) throw new Error("Security brake. Number of iterations = " + v);

              return g;
            }

            if ("STAR" === s.selid) {
              for (g = [], g = r(n, a + 1, t), m = r(s.args, 0, t).slice(), a + 1 + 1 > n.length ? g = g.concat(m) : m.forEach(function (e) {
                g = g.concat(r(n, a + 1, e));
              }), v = 0; 0 < m.length;) if (f = m[0], m.shift(), f = r(s.args, 0, f), m = m.concat(f), a + 1 + 1 <= n.length && f.forEach(function (e) {
                g = g.concat(r(n, a + 1, e));
              }), 1e5 < ++v) throw new Error("Loop brake. Number of iterations = " + v);

              return g;
            }

            if ("QUESTION" === s.selid) return g = (g = []).concat(r(n, a + 1, t)), f = r(s.args, 0, t), a + 1 + 1 <= n.length && f.forEach(function (e) {
              g = g.concat(r(n, a + 1, e));
            }), g;

            if ("WITH" !== s.selid) {
              if ("ROOT" === s.selid) return a + 1 + 1 > n.length ? [t] : r(n, a + 1, w);
              throw new Error("Wrong selector " + s.selid);
            }

            if (0 === (f = r(s.args, 0, t)).length) return [];
            var C = {
              status: 1,
              values: f
            };
          } else {
            if (!s.srchid) throw new Error("Selector not found");
            C = gi.srch[s.srchid.toUpperCase()](t, s.args, I, O);
          }

          void 0 === C && (C = {
            status: 1,
            values: [t]
          });
          d = [];

          if (1 === C.status) {
            var R = C.values;
            if (a + 1 + 1 > n.length) d = R;else for (v = 0; v < C.values.length; v++) d = d.concat(r(n, a + 1, R[v]));
          }

          return d;
        }(s, 0, w) : w, this.into ? (void 0 !== this.into.args[0] && (n = new Function("params,alasql", "var y;return " + this.into.args[0].toJS())(O, gi)), void 0 !== this.into.args[1] && (a = new Function("params,alasql", "var y;return " + this.into.args[1].toJS())(O, gi)), r = gi.into[this.into.funcid.toUpperCase()](n, a, r, [], t)) : (I.value && 0 < r.length && (r = r[0]), t && (r = t(r))), r;
      }.bind(a)(n, e, function (e) {
        r = M(s.query, e), t && (r = t(r));
      }), r;
    };

    return s.query = {}, s;
  }, gi.srch = {}, gi.srch.PROP = function (e, t, r) {
    if ("XML" !== r.mode) return "object" != typeof e || null === e || "object" != typeof t || void 0 === e[t[0]] ? {
      status: -1,
      values: []
    } : {
      status: 1,
      values: [e[t[0]]]
    };
    var n = [];
    return e.children.forEach(function (e) {
      e.name.toUpperCase() === t[0].toUpperCase() && n.push(e);
    }), 0 < n.length ? {
      status: 1,
      values: n
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.APROP = function (e, t) {
    return "object" != typeof e || null === e || "object" != typeof t || void 0 === e[t[0]] ? {
      status: 1,
      values: [void 0]
    } : {
      status: 1,
      values: [e[t[0]]]
    };
  }, gi.srch.EQ = function (e, t, r, n) {
    var a = t[0].toJS("x", "");
    return e === new Function("x,alasql,params", "return " + a)(e, gi, n) ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.LIKE = function (e, t, r, n) {
    var a = t[0].toJS("x", ""),
        s = new Function("x,alasql,params", "return " + a);
    return e.toUpperCase().match(new RegExp("^" + s(e, gi, n).toUpperCase().replace(/%/g, ".*").replace(/\?|_/g, ".") + "$"), "g") ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.ATTR = function (e, t, r) {
    if ("XML" === r.mode) return void 0 === t ? {
      status: 1,
      values: [e.attributes]
    } : "object" == typeof e && "object" == typeof e.attributes && void 0 !== e.attributes[t[0]] ? {
      status: 1,
      values: [e.attributes[t[0]]]
    } : {
      status: -1,
      values: []
    };
    throw new Error("ATTR is not using in usual mode");
  }, gi.srch.CONTENT = function (e, t, r) {
    if ("XML" === r.mode) return {
      status: 1,
      values: [e.content]
    };
    throw new Error("ATTR is not using in usual mode");
  }, gi.srch.SHARP = function (e, t) {
    var r = gi.databases[gi.useid].objects[t[0]];
    return void 0 !== e && e === r ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.PARENT = function () {
    return console.error("PARENT not implemented", arguments), {
      status: -1,
      values: []
    };
  }, gi.srch.CHILD = function (t, e, r) {
    return "object" == typeof t ? Array.isArray(t) ? {
      status: 1,
      values: t
    } : "XML" === r.mode ? {
      status: 1,
      values: Object.keys(t.children).map(function (e) {
        return t.children[e];
      })
    } : {
      status: 1,
      values: Object.keys(t).map(function (e) {
        return t[e];
      })
    } : {
      status: 1,
      values: []
    };
  }, gi.srch.KEYS = function (e) {
    return "object" == typeof e && null !== e ? {
      status: 1,
      values: Object.keys(e)
    } : {
      status: 1,
      values: []
    };
  }, gi.srch.WHERE = function (e, t, r, n) {
    var a = t[0].toJS("x", "");
    return new Function("x,alasql,params", "return " + a)(e, gi, n) ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.NAME = function (e, t) {
    return e.name === t[0] ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.CLASS = function (e, t) {
    return e.$class == t ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.VERTEX = function (e) {
    return "VERTEX" === e.$node ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.INSTANCEOF = function (e, t) {
    return e instanceof gi.fn[t[0]] ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.EDGE = function (e) {
    return "EDGE" === e.$node ? {
      status: 1,
      values: [e]
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.EX = function (e, t, r, n) {
    var a = t[0].toJS("x", "");
    return {
      status: 1,
      values: [new Function("x,alasql,params", "return " + a)(e, gi, n)]
    };
  }, gi.srch.RETURN = function (n, e, t, a) {
    var s = {};
    return e && 0 < e.length && e.forEach(function (e) {
      var t = e.toJS("x", ""),
          r = new Function("x,alasql,params", "return " + t);
      void 0 === e.as && (e.as = e.toString()), s[e.as] = r(n, gi, a);
    }), {
      status: 1,
      values: [s]
    };
  }, gi.srch.REF = function (e) {
    return {
      status: 1,
      values: [gi.databases[gi.useid].objects[e]]
    };
  }, gi.srch.OUT = function (e) {
    return e.$out && 0 < e.$out.length ? {
      status: 1,
      values: e.$out.map(function (e) {
        return gi.databases[gi.useid].objects[e];
      })
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.OUTOUT = function (e) {
    if (e.$out && 0 < e.$out.length) {
      var r = [];
      return e.$out.forEach(function (e) {
        var t = gi.databases[gi.useid].objects[e];
        t && t.$out && 0 < t.$out.length && t.$out.forEach(function (e) {
          r = r.concat(gi.databases[gi.useid].objects[e]);
        });
      }), {
        status: 1,
        values: r
      };
    }

    return {
      status: -1,
      values: []
    };
  }, gi.srch.IN = function (e) {
    return e.$in && 0 < e.$in.length ? {
      status: 1,
      values: e.$in.map(function (e) {
        return gi.databases[gi.useid].objects[e];
      })
    } : {
      status: -1,
      values: []
    };
  }, gi.srch.ININ = function (e) {
    if (e.$in && 0 < e.$in.length) {
      var r = [];
      return e.$in.forEach(function (e) {
        var t = gi.databases[gi.useid].objects[e];
        t && t.$in && 0 < t.$in.length && t.$in.forEach(function (e) {
          r = r.concat(gi.databases[gi.useid].objects[e]);
        });
      }), {
        status: 1,
        values: r
      };
    }

    return {
      status: -1,
      values: []
    };
  }, gi.srch.AS = function (e, t) {
    return {
      status: 1,
      values: [gi.vars[t[0]] = e]
    };
  }, gi.srch.AT = function (e, t) {
    return {
      status: 1,
      values: [gi.vars[t[0]]]
    };
  }, gi.srch.CLONEDEEP = function (e) {
    return {
      status: 1,
      values: [b(e)]
    };
  }, gi.srch.SET = function (e, t, r, n) {
    var a = t.map(function (e) {
      return "@" === e.method ? "alasql.vars['" + e.variable + "']=" + e.expression.toJS("x", "") : "$" === e.method ? "params['" + e.variable + "']=" + e.expression.toJS("x", "") : "x['" + e.column.columnid + "']=" + e.expression.toJS("x", "");
    }).join(";");
    return new Function("x,params,alasql", a)(e, n, gi), {
      status: 1,
      values: [e]
    };
  }, gi.srch.ROW = function (e, t, r, n) {
    var a = "var y;return [";
    return a += t.map(function (e) {
      return e.toJS("x", "");
    }).join(","), a += "]", {
      status: 1,
      values: [new Function("x,params,alasql", a)(e, n, gi)]
    };
  }, gi.srch.D3 = function (e) {
    return "VERTEX" !== e.$node && "EDGE" === e.$node && (e.source = e.$in[0], e.target = e.$out[0]), {
      status: 1,
      values: [e]
    };
  };

  function k(e, t, r) {
    if (0 <= t) {
      var n = r.sources[t];
      n.data = e, "function" == typeof n.data && (n.getfn = n.data, n.dontcache = n.getfn.dontcache, "OUTER" != n.joinmode && "RIGHT" != n.joinmode && "ANTI" != n.joinmode || (n.dontcache = !1), n.data = {});
    } else r.queriesdata[-t - 1] = a(e);

    if (r.sourceslen--, !(0 < r.sourceslen)) return L(r);
  }

  function L(e) {
    var t,
        r = e.scope;
    $(e), e.data = [], e.xgroups = {}, e.groups = [];

    if (function r(n, a, s) {
      if (s >= n.sources.length) n.wherefn(a, n.params, gi) && (n.groupfn ? n.groupfn(a, n.params, gi) : n.data.push(n.selectfn(a, n.params, gi)));else if (n.sources[s].applyselect) {
        var i = n.sources[s];
        i.applyselect(n.params, function (e) {
          if (0 < e.length) for (var t = 0; t < e.length; t++) a[i.alias] = e[t], r(n, a, s + 1);else "OUTER" == i.applymode && (a[i.alias] = {}, r(n, a, s + 1));
        }, a);
      } else {
        var i = n.sources[s],
            e = n.sources[s + 1],
            t = i.alias || i.tableid,
            o = !1,
            u = i.data,
            c = !1;
        i.getfn && (!i.getfn || i.dontcache) || "RIGHT" == i.joinmode || "OUTER" == i.joinmode || "ANTI" == i.joinmode || "ix" != i.optimization || (u = i.ix[i.onleftfn(a, n.params, gi)] || [], c = !0);
        var l = 0;
        if (void 0 === u) throw new Error("Data source number " + s + " in undefined");

        for (var h = u.length; (f = u[l]) || !c && i.getfn && (f = i.getfn(l)) || l < h;) c || !i.getfn || i.dontcache || (u[l] = f), a[t] = f, i.onleftfn && i.onleftfn(a, n.params, gi) != i.onrightfn(a, n.params, gi) || i.onmiddlefn(a, n.params, gi) && ("SEMI" != i.joinmode && "ANTI" != i.joinmode && r(n, a, s + 1), "LEFT" != i.joinmode && "INNER" != i.joinmode && (f._rightjoin = !0), o = !0), l++;

        if ("LEFT" != i.joinmode && "OUTER" != i.joinmode && "SEMI" != i.joinmode || o || (a[t] = {}, r(n, a, s + 1)), 0 == s) for (var d = s + 1; d < n.sources.length; d++) {
          if ("OUTER" == e.joinmode || "RIGHT" == e.joinmode || "ANTI" == e.joinmode) {
            a[i.alias] = {};

            for (var f, p = 0, b = e.data.length; (f = e.data[p]) || e.getfn && (f = e.getfn(p)) || p < b;) e.getfn && !e.dontcache && (e.data[p] = f), f._rightjoin ? delete f._rightjoin : (a[e.alias] = f, r(n, a, d + 1)), p++;
          }

          i = n.sources[d], e = n.sources[d + 1];
        }
        a[t] = void 0;
      }
    }(e, r, 0), e.groupfn) {
      if (e.data = [], 0 === e.groups.length) {
        var n = {};
        0 < e.selectGroup.length && e.selectGroup.forEach(function (e) {
          "COUNT" == e.aggregatorid || "SUM" == e.aggregatorid ? n[e.nick] = 0 : n[e.nick] = void 0;
        }), e.groups = [n];
      }

      if (0 < e.aggrKeys.length) {
        var a = "";
        e.aggrKeys.forEach(function (e) {
          a += "g['" + e.nick + "']=alasql.aggr['" + e.funcid + "'](undefined,g['" + e.nick + "'],3);";
        });
        var s = new Function("g,params,alasql", "var y;" + a);
      }

      for (var i = 0, o = e.groups.length; i < o; i++) {
        n = e.groups[i];

        if (s && s(n, e.params, gi), !e.havingfn || e.havingfn(n, e.params, gi)) {
          var u = e.selectgfn(n, e.params, gi);
          e.data.push(u);
        }
      }
    }

    if (function (t) {
      if (t.distinct) {
        for (var e = {}, r = Object.keys(t.data[0] || []), n = 0, a = t.data.length; n < a; n++) {
          var s = r.map(function (e) {
            return t.data[n][e];
          }).join("`");
          e[s] = t.data[n];
        }

        for (var i in t.data = [], e) t.data.push(e[i]);
      }
    }(e), e.unionallfn) {
      if (e.corresponding) e.unionallfn.query.modifier || (e.unionallfn.query.modifier = void 0), h = e.unionallfn(e.params);else {
        e.unionallfn.query.modifier || (e.unionallfn.query.modifier = "RECORDSET"), h = [], o = (d = e.unionallfn(e.params)).data.length;

        for (i = 0; i < o; i++) {
          for (var c = {}, l = Math.min(e.columns.length, d.columns.length) - 1; 0 <= l; l--) c[e.columns[l].columnid] = d.data[i][d.columns[l].columnid];

          h.push(c);
        }
      }
      e.data = e.data.concat(h);
    } else if (e.unionfn) {
      if (e.corresponding) e.unionfn.query.modifier || (e.unionfn.query.modifier = "ARRAY"), h = e.unionfn(e.params);else {
        e.unionfn.query.modifier || (e.unionfn.query.modifier = "RECORDSET"), h = [], o = (d = e.unionfn(e.params)).data.length;

        for (i = 0; i < o; i++) {
          c = {}, t = Math.min(e.columns.length, d.columns.length);

          for (l = 0; l < t; l++) c[e.columns[l].columnid] = d.data[i][d.columns[l].columnid];

          h.push(c);
        }
      }
      e.data = m(e.data, h);
    } else if (e.exceptfn) {
      if (e.corresponding) {
        e.exceptfn.query.modifier || (e.exceptfn.query.modifier = "ARRAY");
        var h = e.exceptfn(e.params);
      } else {
        e.exceptfn.query.modifier || (e.exceptfn.query.modifier = "RECORDSET");
        var d;

        for (h = [], i = 0, o = (d = e.exceptfn(e.params)).data.length; i < o; i++) {
          for (c = {}, l = Math.min(e.columns.length, d.columns.length) - 1; 0 <= l; l--) c[e.columns[l].columnid] = d.data[i][d.columns[l].columnid];

          h.push(c);
        }
      }

      e.data = A(e.data, h);
    } else if (e.intersectfn) {
      if (e.corresponding) e.intersectfn.query.modifier || (e.intersectfn.query.modifier = void 0), h = e.intersectfn(e.params);else for (e.intersectfn.query.modifier || (e.intersectfn.query.modifier = "RECORDSET"), h = [], o = (d = e.intersectfn(e.params)).data.length, i = 0; i < o; i++) {
        for (c = {}, t = Math.min(e.columns.length, d.columns.length), l = 0; l < t; l++) c[e.columns[l].columnid] = d.data[i][d.columns[l].columnid];

        h.push(c);
      }
      e.data = y(e.data, h);
    }

    if (e.orderfn) {
      if (e.explain) var f = Date.now();
      e.data = e.data.sort(e.orderfn), e.explain && e.explaination.push({
        explid: e.explid++,
        description: "QUERY BY",
        ms: Date.now() - f
      });
    }

    if (function (e) {
      if (e.limit) {
        var t,
            r = 0;
        e.offset && (r = (r = 0 | e.offset || 0) < 0 ? 0 : r), t = e.percent ? (e.data.length * e.limit / 100 | 0) + r : (0 | e.limit) + r, e.data = e.data.slice(r, t);
      }
    }(e), "undefined" != typeof angular && e.removeKeys.push("$$hashKey"), 0 < e.removeKeys.length) {
      var p = e.removeKeys;
      if (0 < (t = p.length)) for (o = e.data.length, i = 0; i < o; i++) for (l = 0; l < t; l++) delete e.data[i][p[l]];
      0 < e.columns.length && (e.columns = e.columns.filter(function (t) {
        var r = !1;
        return p.forEach(function (e) {
          t.columnid == e && (r = !0);
        }), !r;
      }));
    }

    if (void 0 !== e.removeLikeKeys && 0 < e.removeLikeKeys.length) {
      var b = e.removeLikeKeys;

      for (i = 0, o = e.data.length; i < o; i++) for (var E in c = e.data[i]) for (l = 0; l < e.removeLikeKeys.length; l++) gi.utils.like(e.removeLikeKeys[l], E) && delete c[E];

      0 < e.columns.length && (e.columns = e.columns.filter(function (t) {
        var r = !1;
        return b.forEach(function (e) {
          gi.utils.like(e, t.columnid) && (r = !0);
        }), !r;
      }));
    }

    if (e.pivotfn && e.pivotfn(), e.unpivotfn && e.unpivotfn(), e.intoallfn) {
      var g = e.intoallfn(e.columns, e.cb, e.params, e.alasql);
      return g;
    }

    if (e.intofn) {
      for (o = e.data.length, i = 0; i < o; i++) e.intofn(e.data[i], i, e.params, e.alasql);

      return e.cb && e.cb(e.data.length, e.A, e.B), e.data.length;
    }

    return g = e.data, e.cb && (g = e.cb(e.data, e.A, e.B)), g;
  }

  gi.srch.ORDERBY = function (e, t) {
    return {
      status: 1,
      values: e.sort(function (e) {
        if (e) {
          if (e && 1 === e.length && e[0].expression && "function" == typeof e[0].expression) {
            var a = e[0].expression;
            return function (e, t) {
              var r = a(e),
                  n = a(t);
              return n < r ? 1 : r === n ? 0 : -1;
            };
          }

          var n = "",
              s = "";
          return e.forEach(function (e) {
            var t = "";

            if (e.expression instanceof D.NumValue && (e.expression = self.columns[e.expression.value - 1]), e.expression instanceof D.Column) {
              var r = e.expression.columnid;
              gi.options.valueof && (t = ".valueOf()"), e.nocase && (t += ".toUpperCase()"), "_" === r ? (n += "if(a" + t + ("ASC" === e.direction ? ">" : "<") + "b" + t + ")return 1;", n += "if(a" + t + "==b" + t + "){") : (n += "if((a['" + r + "']||'')" + t + ("ASC" === e.direction ? ">" : "<") + "(b['" + r + "']||'')" + t + ")return 1;", n += "if((a['" + r + "']||'')" + t + "==(b['" + r + "']||'')" + t + "){");
            } else t = ".valueOf()", e.nocase && (t += ".toUpperCase()"), n += "if((" + e.toJS("a", "") + "||'')" + t + ("ASC" === e.direction ? ">(" : "<(") + e.toJS("b", "") + "||'')" + t + ")return 1;", n += "if((" + e.toJS("a", "") + "||'')" + t + "==(" + e.toJS("b", "") + "||'')" + t + "){";

            s += "}";
          }), n += "return 0;", n += s + "return -1", new Function("a,b", n);
        }
      }(t))
    };
  };

  var $ = function (t) {
    for (var e = 0, r = t.sources.length; e < r; e++) {
      var n = t.sources[e];

      if (delete n.ix, 0 < e && "ix" == n.optimization && n.onleftfn && n.onrightfn) {
        if (n.databaseid && gi.databases[n.databaseid].tables[n.tableid]) {
          gi.databases[n.databaseid].tables[n.tableid].indices || (t.database.tables[n.tableid].indices = {});
          var a = gi.databases[n.databaseid].tables[n.tableid].indices[E(n.onrightfns + "`" + n.srcwherefns)];
          !gi.databases[n.databaseid].tables[n.tableid].dirty && a && (n.ix = a);
        }

        if (!n.ix) {
          n.ix = {};

          for (var s, i = {}, o = 0, u = n.data.length; (s = n.data[o]) || n.getfn && (s = n.getfn(o)) || o < u;) {
            if (n.getfn && !n.dontcache && (n.data[o] = s), i[n.alias || n.tableid] = s, n.srcwherefn(i, t.params, gi)) {
              var c = n.onrightfn(i, t.params, gi),
                  l = n.ix[c];
              (l = l || (n.ix[c] = [])).push(s);
            }

            o++;
          }

          n.databaseid && gi.databases[n.databaseid].tables[n.tableid] && (gi.databases[n.databaseid].tables[n.tableid].indices[E(n.onrightfns + "`" + n.srcwherefns)] = n.ix);
        }
      } else if (n.wxleftfn) {
        if (gi.databases[n.databaseid].engineid || (a = gi.databases[n.databaseid].tables[n.tableid].indices[E(n.wxleftfns + "`")]), !gi.databases[n.databaseid].tables[n.tableid].dirty && a) n.ix = a, n.data = n.ix[n.wxrightfn(null, t.params, gi)];else {
          for (n.ix = {}, i = {}, o = 0, u = n.data.length; (s = n.data[o]) || n.getfn && (s = n.getfn(o)) || o < u;) n.getfn && !n.dontcache && (n.data[o] = s), i[n.alias || n.tableid] = n.data[o], c = n.wxleftfn(i, t.params, gi), (l = (l = n.ix[c]) || (n.ix[c] = [])).push(n.data[o]), o++;

          gi.databases[n.databaseid].engineid || (gi.databases[n.databaseid].tables[n.tableid].indices[E(n.wxleftfns + "`")] = n.ix);
        }
        n.srcwherefns && (n.data ? (i = {}, n.data = n.data.filter(function (e) {
          return i[n.alias] = e, n.srcwherefn(i, t.params, gi);
        })) : n.data = []);
      } else if (n.srcwherefns && !n.dontcache) if (n.data) {
        i = {};
        n.data = n.data.filter(function (e) {
          return i[n.alias] = e, n.srcwherefn(i, t.params, gi);
        }), i = {}, o = 0, u = n.data.length;

        for (var h = []; (s = n.data[o]) || n.getfn && (s = n.getfn(o)) || o < u;) n.getfn && !n.dontcache && (n.data[o] = s), i[n.alias] = s, n.srcwherefn(i, t.params, gi) && h.push(s), o++;

        n.data = h;
      } else n.data = [];

      n.databaseid && gi.databases[n.databaseid].tables[n.tableid];
    }
  };

  function M(e, t) {
    if (void 0 === t || "number" == typeof t || "string" == typeof t || "boolean" == typeof t) return t;
    var r = e.modifier || gi.options.modifier,
        n = e.columns;
    if (void 0 === n || 0 == n.length) if (0 < t.length) {
      for (var a = {}, s = Math.min(t.length, gi.options.columnlookup || 10) - 1; 0 <= s; s--) for (var i in t[s]) a[i] = !0;

      n = Object.keys(a).map(function (e) {
        return {
          columnid: e
        };
      });
    } else n = [];
    if ("VALUE" === r) t = 0 < t.length ? (i = n && 0 < n.length ? n[0].columnid : Object.keys(t[0])[0], t[0][i]) : void 0;else if ("ROW" === r) {
      if (0 < t.length) {
        var o = [];

        for (var i in t[0]) o.push(t[0][i]);

        t = o;
      } else t = void 0;
    } else if ("COLUMN" === r) {
      var u = [];

      if (0 < t.length) {
        i = n && 0 < n.length ? n[0].columnid : Object.keys(t[0])[0];
        s = 0;

        for (var c = t.length; s < c; s++) u.push(t[s][i]);
      }

      t = u;
    } else if ("MATRIX" === r) {
      for (u = [], s = 0; s < t.length; s++) {
        o = [];

        for (var l = t[s], h = 0; h < n.length; h++) o.push(l[n[h].columnid]);

        u.push(o);
      }

      t = u;
    } else if ("INDEX" === r) {
      var d;
      u = {};
      if (n && 0 < n.length) i = n[0].columnid, d = n[1].columnid;else {
        var f = Object.keys(t[0]);
        i = f[0], d = f[1];
      }

      for (s = 0, c = t.length; s < c; s++) u[t[s][i]] = t[s][d];

      t = u;
    } else if ("RECORDSET" === r) t = new gi.Recordset({
      columns: n,
      data: t
    });else if ("TEXTSTRING" === r) {
      i = n && 0 < n.length ? n[0].columnid : Object.keys(t[0])[0];

      for (s = 0, c = t.length; s < c; s++) t[s] = t[s][i];

      t = t.join("\n");
    }
    return t;
  }

  function U(i, e, o) {
    var u = "",
        c = [],
        l = {};
    return e.forEach(function (s) {
      if (i.ixsources = {}, i.sources.forEach(function (e) {
        i.ixsources[e.alias] = e;
      }), i.ixsources[s]) var e = i.ixsources[s].columns;
      o && "json" == gi.options.joinstar && (u += "r['" + s + "']={};"), e && 0 < e.length ? e.forEach(function (e) {
        if (o && "underscore" == gi.options.joinstar) c.push("'" + s + "_" + e.columnid + "':p['" + s + "']['" + e.columnid + "']");else if (o && "json" == gi.options.joinstar) u += "r['" + s + "']['" + e.columnid + "']=p['" + s + "']['" + e.columnid + "'];";else {
          var t = "p['" + s + "']['" + e.columnid + "']";

          if (l[e.columnid]) {
            var r = t + " !== undefined ? " + t + " : " + l[e.columnid].value;
            c[l[e.columnid].id] = l[e.columnid].key + r, l[e.columnid].value = r;
          } else {
            var n = "'" + e.columnid + "':";
            c.push(n + t), l[e.columnid] = {
              id: c.length - 1,
              value: t,
              key: n
            };
          }
        }
        i.selectColumns[p(e.columnid)] = !0;
        var a = {
          columnid: e.columnid,
          dbtypeid: e.dbtypeid,
          dbsize: e.dbsize,
          dbprecision: e.dbprecision,
          dbenum: e.dbenum
        };
        i.columns.push(a), i.xcolumns[a.columnid] = a;
      }) : (u += 'var w=p["' + s + '"];for(var k in w){r[k]=w[k]};', i.dirtyColumns = !0);
    }), {
      s: c.join(","),
      sp: u
    };
  }

  D.Select = function (e) {
    return D.extend(this, e);
  }, D.Select.prototype.toString = function () {
    var e;
    return e = "", this.explain && (e += "EXPLAIN "), e += "SELECT ", this.modifier && (e += this.modifier + " "), this.distinct && (e += "DISTINCT "), this.top && (e += "TOP " + this.top.value + " ", this.percent && (e += "PERCENT ")), e += this.columns.map(function (e) {
      var t;
      return t = e.toString(), void 0 !== e.as && (t += " AS " + e.as), t;
    }).join(", "), this.from && (e += " FROM " + this.from.map(function (e) {
      var t;
      return t = e.toString(), e.as && (t += " AS " + e.as), t;
    }).join(",")), this.joins && (e += this.joins.map(function (e) {
      var t;
      if (t = " ", e.joinmode && (t += e.joinmode + " "), e.table) t += "JOIN " + e.table.toString();else if (e.select) t += "JOIN (" + e.select.toString() + ")";else {
        if (!(e instanceof gi.yy.Apply)) throw new Error("Wrong type in JOIN mode");
        t += e.toString();
      }
      return e.as && (t += " AS " + e.as), e.using && (t += " USING " + e.using.toString()), e.on && (t += " ON " + e.on.toString()), t;
    }).join("")), this.where && (e += " WHERE " + this.where.toString()), this.group && 0 < this.group.length && (e += " GROUP BY " + this.group.map(function (e) {
      return e.toString();
    }).join(", ")), this.having && (e += " HAVING " + this.having.toString()), this.order && 0 < this.order.length && (e += " ORDER BY " + this.order.map(function (e) {
      return e.toString();
    }).join(", ")), this.limit && (e += " LIMIT " + this.limit.value), this.offset && (e += " OFFSET " + this.offset.value), this.union && (e += " UNION " + (this.corresponding ? "CORRESPONDING " : "") + this.union.toString()), this.unionall && (e += " UNION ALL " + (this.corresponding ? "CORRESPONDING " : "") + this.unionall.toString()), this.except && (e += " EXCEPT " + (this.corresponding ? "CORRESPONDING " : "") + this.except.toString()), this.intersect && (e += " INTERSECT " + (this.corresponding ? "CORRESPONDING " : "") + this.intersect.toString()), e;
  }, D.Select.prototype.toJS = function (e) {
    return "alasql.utils.flatArray(this.queriesfn[" + (this.queriesidx - 1) + "](this.params,null," + e + "))[0]";
  }, D.Select.prototype.compile = function (e, t) {
    var r = gi.databases[e],
        u = new w();

    if (u.removeKeys = [], u.aggrKeys = [], u.explain = this.explain, u.explaination = [], u.explid = 1, u.modifier = this.modifier, u.database = r, this.compileWhereExists(u), this.compileQueries(u), u.defcols = this.compileDefCols(u, e), u.fromfn = this.compileFrom(u), this.joins && this.compileJoins(u), u.rownums = [], this.compileSelectGroup0(u), this.group || 0 < u.selectGroup.length ? u.selectgfns = this.compileSelectGroup1(u) : u.selectfns = this.compileSelect1(u, t), this.compileRemoveColumns(u), this.where && this.compileWhereJoins(u), u.wherefn = this.compileWhere(u), (this.group || 0 < u.selectGroup.length) && (u.groupfn = this.compileGroup(u)), this.having && (u.havingfn = this.compileHaving(u)), this.order && (u.orderfn = this.compileOrder(u)), this.group || 0 < u.selectGroup.length ? u.selectgfn = this.compileSelectGroup2(u) : u.selectfn = this.compileSelect2(u), u.distinct = this.distinct, this.pivot && (u.pivotfn = this.compilePivot(u)), this.unpivot && (u.pivotfn = this.compileUnpivot(u)), this.top ? u.limit = this.top.value : this.limit && (u.limit = this.limit.value, this.offset && (u.offset = this.offset.value)), u.percent = this.percent, u.corresponding = this.corresponding, this.union ? (u.unionfn = this.union.compile(e), this.union.order ? u.orderfn = this.union.compileOrder(u) : u.orderfn = null) : this.unionall ? (u.unionallfn = this.unionall.compile(e), this.unionall.order ? u.orderfn = this.unionall.compileOrder(u) : u.orderfn = null) : this.except ? (u.exceptfn = this.except.compile(e), this.except.order ? u.orderfn = this.except.compileOrder(u) : u.orderfn = null) : this.intersect && (u.intersectfn = this.intersect.compile(e), this.intersect.order ? u.intersectfn = this.intersect.compileOrder(u) : u.orderfn = null), this.into) {
      if (this.into instanceof D.Table) gi.options.autocommit && gi.databases[this.into.databaseid || e].engineid ? u.intoallfns = 'return alasql.engines["' + gi.databases[this.into.databaseid || e].engineid + '"].intoTable("' + (this.into.databaseid || e) + '","' + this.into.tableid + '",this.data, columns, cb);' : u.intofns = "alasql.databases['" + (this.into.databaseid || e) + "'].tables['" + this.into.tableid + "'].data.push(r);";else if (this.into instanceof D.VarValue) u.intoallfns = 'alasql.vars["' + this.into.variable + '"]=this.data;res=this.data.length;if(cb)res=cb(res);return res;';else if (this.into instanceof D.FuncValue) {
        var n = "return alasql.into['" + this.into.funcid.toUpperCase() + "'](";
        this.into.args && 0 < this.into.args.length ? (n += this.into.args[0].toJS() + ",", 1 < this.into.args.length ? n += this.into.args[1].toJS() + "," : n += "undefined,") : n += "undefined, undefined,", u.intoallfns = n + "this.data,columns,cb)";
      } else this.into instanceof D.ParamValue && (u.intofns = "params['" + this.into.param + "'].push(r)");
      u.intofns ? u.intofn = new Function("r,i,params,alasql", "var y;" + u.intofns) : u.intoallfns && (u.intoallfn = new Function("columns,cb,params,alasql", "var y;" + u.intoallfns));
    }

    function a(e, o, t) {
      return u.params = e, function (n, e, t, r, a) {
        n.sources.length, n.sourceslen = n.sources.length;
        var s,
            i,
            o = n.sourceslen;
        return (n.query = n).A = r, n.B = a, n.cb = t, n.oldscope = e, n.queriesfn && (n.sourceslen += n.queriesfn.length, o += n.queriesfn.length, n.queriesdata = [], n.queriesfn.forEach(function (e, t) {
          e.query.params = n.params, k([], -t - 1, n);
        })), s = e ? b(e) : {}, n.scope = s, n.sources.forEach(function (e, t) {
          e.query = n;
          var r = e.datafn(n, n.params, k, t, gi);
          void 0 !== r && ((n.intofn || n.intoallfn) && Array.isArray(r) && (r = r.length), i = r), e.queriesdata = n.queriesdata;
        }), 0 != n.sources.length && 0 !== o || (i = L(n)), i;
      }(u, t, function (e, t) {
        if (t) return o(t, null);
        if (0 < u.rownums.length) for (var r = 0, n = e.length; r < n; r++) for (var a = 0, s = u.rownums.length; a < s; a++) e[r][u.rownums[a]] = r + 1;
        var i = M(u, e);
        return o && o(i), i;
      });
    }

    return a.query = u, a;
  }, D.Select.prototype.execute = function (e, t, r) {
    return this.compile(e)(t, r);
  }, D.ExistsValue = function (e) {
    return D.extend(this, e);
  }, D.ExistsValue.prototype.toString = function () {
    return "EXISTS(" + this.value.toString() + ")";
  }, D.ExistsValue.prototype.toType = function () {
    return "boolean";
  }, D.ExistsValue.prototype.toJS = function (e, t, r) {
    return "this.existsfn[" + this.existsidx + "](params,null," + e + ").data.length";
  }, D.Select.prototype.compileWhereExists = function (r) {
    this.exists && (r.existsfn = this.exists.map(function (e) {
      var t = e.compile(r.database.databaseid);
      return t.query.modifier = "RECORDSET", t;
    }));
  }, D.Select.prototype.compileQueries = function (r) {
    this.queries && (r.queriesfn = this.queries.map(function (e) {
      var t = e.compile(r.database.databaseid);
      return t.query.modifier = "RECORDSET", t;
    }));
  }, gi.precompile = function (r, n, e) {
    r && (r.params = e, r.queries && (r.queriesfn = r.queries.map(function (e) {
      var t = e.compile(n || r.database.databaseid);
      return t.query.modifier = "RECORDSET", t;
    })), r.exists && (r.existsfn = r.exists.map(function (e) {
      var t = e.compile(n || r.database.databaseid);
      return t.query.modifier = "RECORDSET", t;
    })));
  }, D.Select.prototype.compileFrom = function (r) {
    r.sources = [], r.aliases = {}, this.from && (this.from.forEach(function (i) {
      var e = "",
          t = i.as || i.tableid;
      if (i instanceof D.Table) r.aliases[t] = {
        tableid: i.tableid,
        databaseid: i.databaseid || r.database.databaseid,
        type: "table"
      };else if (i instanceof D.Select) r.aliases[t] = {
        type: "subquery"
      };else if (i instanceof D.Search) r.aliases[t] = {
        type: "subsearch"
      };else if (i instanceof D.ParamValue) r.aliases[t] = {
        type: "paramvalue"
      };else if (i instanceof D.FuncValue) r.aliases[t] = {
        type: "funcvalue"
      };else if (i instanceof D.VarValue) r.aliases[t] = {
        type: "varvalue"
      };else if (i instanceof D.FromData) r.aliases[t] = {
        type: "fromdata"
      };else if (i instanceof D.Json) r.aliases[t] = {
        type: "json"
      };else {
        if (!i.inserted) throw new Error("Wrong table at FROM");
        r.aliases[t] = {
          type: "inserted"
        };
      }
      var o = {
        alias: t,
        databaseid: i.databaseid || r.database.databaseid,
        tableid: i.tableid,
        joinmode: "INNER",
        onmiddlefn: S,
        srcwherefns: "",
        srcwherefn: S
      };
      if (i instanceof D.Table) o.columns = gi.databases[o.databaseid].tables[o.tableid].columns, gi.options.autocommit && gi.databases[o.databaseid].engineid && !gi.databases[o.databaseid].tables[o.tableid].view ? o.datafn = function (e, t, r, n, a) {
        return a.engines[a.databases[o.databaseid].engineid].fromTable(o.databaseid, o.tableid, r, n, e);
      } : gi.databases[o.databaseid].tables[o.tableid].view ? o.datafn = function (e, t, r, n, a) {
        var s = a.databases[o.databaseid].tables[o.tableid].select(t);
        return r && (s = r(s, n, e)), s;
      } : o.datafn = function (e, t, r, n, a) {
        var s = a.databases[o.databaseid].tables[o.tableid].data;
        return r && (s = r(s, n, e)), s;
      };else if (i instanceof D.Select) o.subquery = i.compile(r.database.databaseid), void 0 === o.subquery.query.modifier && (o.subquery.query.modifier = "RECORDSET"), o.columns = o.subquery.query.columns, o.datafn = function (t, e, r, n, a) {
        var s;
        return o.subquery(t.params, function (e) {
          return s = e.data, r && (s = r(s, n, t)), s;
        }), s;
      };else if (i instanceof D.Search) o.subsearch = i, o.columns = [], o.datafn = function (t, e, r, n, a) {
        var s;
        return o.subsearch.execute(t.database.databaseid, t.params, function (e) {
          return s = e, r && (s = r(s, n, t)), s;
        }), s;
      };else if (i instanceof D.ParamValue) e = "var res = alasql.prepareFromData(params['" + i.param + "']", i.array && (e += ",true"), e += ");if(cb)res=cb(res,idx,query);return res", o.datafn = new Function("query,params,cb,idx,alasql", e);else if (i.inserted) e = "var res = alasql.prepareFromData(alasql.inserted", i.array && (e += ",true"), e += ");if(cb)res=cb(res,idx,query);return res", o.datafn = new Function("query,params,cb,idx,alasql", e);else if (i instanceof D.Json) e = "var res = alasql.prepareFromData(" + i.toJS(), i.array && (e += ",true"), e += ");if(cb)res=cb(res,idx,query);return res", o.datafn = new Function("query,params,cb,idx,alasql", e);else if (i instanceof D.VarValue) e = "var res = alasql.prepareFromData(alasql.vars['" + i.variable + "']", i.array && (e += ",true"), e += ");if(cb)res=cb(res,idx,query);return res", o.datafn = new Function("query,params,cb,idx,alasql", e);else if (i instanceof D.FuncValue) e = "var res=alasql.from['" + i.funcid.toUpperCase() + "'](", i.args && 0 < i.args.length ? (i.args[0] ? e += i.args[0].toJS("query.oldscope") + "," : e += "null,", i.args[1] ? e += i.args[1].toJS("query.oldscope") + "," : e += "null,") : e += "null,null,", e += "cb,idx,query", e += ");/*if(cb)res=cb(res,idx,query);*/return res", o.datafn = new Function("query, params, cb, idx, alasql", e);else {
        if (!(i instanceof D.FromData)) throw new Error("Wrong table at FROM");

        o.datafn = function (e, t, r, n, a) {
          var s = i.data;
          return r && (s = r(s, n, e)), s;
        };
      }
      r.sources.push(o);
    }), r.defaultTableid = r.sources[0].alias);
  }, gi.prepareFromData = function (e, t) {
    var r,
        n,
        a = e;

    if ("string" == typeof e) {
      if (a = e.split(/\r?\n/), t) for (r = 0, n = a.length; r < n; r++) a[r] = [a[r]];
    } else if (t) for (a = [], r = 0, n = e.length; r < n; r++) a.push([e[r]]);else if ("object" == typeof e && !Array.isArray(e)) if ("undefined" != typeof Mongo && void 0 !== Mongo.Collection && e instanceof Mongo.Collection) a = e.find().fetch();else for (var s in a = [], e) e.hasOwnProperty(s) && a.push([s, e[s]]);

    return a;
  }, D.Select.prototype.compileJoins = function (m) {
    this.joins.forEach(function (e) {
      var t, r, i;

      if ("CROSS" === e.joinmode) {
        if (e.using || e.on) throw new Error("CROSS JOIN cannot have USING or ON clauses");
        e.joinmode = "INNER";
      }

      if (e instanceof D.Apply) return (i = {
        alias: e.as,
        applymode: e.applymode,
        onmiddlefn: S,
        srcwherefns: "",
        srcwherefn: S,
        columns: []
      }).applyselect = e.select.compile(m.database.databaseid), i.columns = i.applyselect.query.columns, i.datafn = function (e, t, r, n, a) {
        var s;
        return r && (s = r(s, n, e)), s;
      }, void m.sources.push(i);

      if (e.table) {
        if (t = e.table, i = {
          alias: e.as || t.tableid,
          databaseid: t.databaseid || m.database.databaseid,
          tableid: t.tableid,
          joinmode: e.joinmode,
          onmiddlefn: S,
          srcwherefns: "",
          srcwherefn: S,
          columns: []
        }, !gi.databases[i.databaseid].tables[i.tableid]) throw new Error("Table '" + i.tableid + "' is not exists in database '" + i.databaseid + "'");
        i.columns = gi.databases[i.databaseid].tables[i.tableid].columns, gi.options.autocommit && gi.databases[i.databaseid].engineid ? i.datafn = function (e, t, r, n, a) {
          return a.engines[a.databases[i.databaseid].engineid].fromTable(i.databaseid, i.tableid, r, n, e);
        } : gi.databases[i.databaseid].tables[i.tableid].view ? i.datafn = function (e, t, r, n, a) {
          var s = a.databases[i.databaseid].tables[i.tableid].select(t);
          return r && (s = r(s, n, e)), s;
        } : i.datafn = function (e, t, r, n, a) {
          var s = a.databases[i.databaseid].tables[i.tableid].data;
          return r && (s = r(s, n, e)), s;
        }, m.aliases[i.alias] = {
          tableid: t.tableid,
          databaseid: t.databaseid || m.database.databaseid
        };
      } else if (e.select) t = e.select, (i = {
        alias: e.as,
        joinmode: e.joinmode,
        onmiddlefn: S,
        srcwherefns: "",
        srcwherefn: S,
        columns: []
      }).subquery = t.compile(m.database.databaseid), void 0 === i.subquery.query.modifier && (i.subquery.query.modifier = "RECORDSET"), i.columns = i.subquery.query.columns, i.datafn = function (e, t, r, n, a) {
        return i.subquery(e.params, null, r, n).data;
      }, m.aliases[i.alias] = {
        type: "subquery"
      };else if (e.param) {
        i = {
          alias: e.as,
          joinmode: e.joinmode,
          onmiddlefn: S,
          srcwherefns: "",
          srcwherefn: S
        }, r = "var res=alasql.prepareFromData(params['" + e.param.param + "']", e.array && (r += ",true"), r += ");if(cb)res=cb(res, idx, query);return res", i.datafn = new Function("query,params,cb,idx, alasql", r), m.aliases[i.alias] = {
          type: "paramvalue"
        };
      } else if (e.variable) i = {
        alias: e.as,
        joinmode: e.joinmode,
        onmiddlefn: S,
        srcwherefns: "",
        srcwherefn: S
      }, r = "var res=alasql.prepareFromData(alasql.vars['" + e.variable + "']", e.array && (r += ",true"), r += ");if(cb)res=cb(res, idx, query);return res", i.datafn = new Function("query,params,cb,idx, alasql", r), m.aliases[i.alias] = {
        type: "varvalue"
      };else if (e.func) {
        i = {
          alias: e.as,
          joinmode: e.joinmode,
          onmiddlefn: S,
          srcwherefns: "",
          srcwherefn: S
        };
        var n = "var res=alasql.from['" + e.func.funcid.toUpperCase() + "'](",
            a = e.func.args;
        a && 0 < a.length ? (a[0] ? n += a[0].toJS("query.oldscope") + "," : n += "null,", a[1] ? n += a[1].toJS("query.oldscope") + "," : n += "null,") : n += "null,null,", n += "cb,idx,query", n += ");/*if(cb)res=cb(res,idx,query);*/return res", i.datafn = new Function("query, params, cb, idx, alasql", n), m.aliases[i.alias] = {
          type: "funcvalue"
        };
      }

      var s = i.alias;

      if (e.natural) {
        if (e.using || e.on) throw new Error("NATURAL JOIN cannot have USING or ON clauses");

        if (0 < m.sources.length) {
          var o = m.sources[m.sources.length - 1],
              u = gi.databases[o.databaseid].tables[o.tableid],
              c = gi.databases[i.databaseid].tables[i.tableid];
          if (!u || !c) throw new Error("In this version of Alasql NATURAL JOIN works for tables with predefined columns only");
          var l = u.columns.map(function (e) {
            return e.columnid;
          }),
              h = c.columns.map(function (e) {
            return e.columnid;
          });
          e.using = T(l, h).map(function (e) {
            return {
              columnid: e
            };
          });
        }
      }

      if (e.using) o = m.sources[m.sources.length - 1], i.onleftfns = e.using.map(function (e) {
        return "p['" + (o.alias || o.tableid) + "']['" + e.columnid + "']";
      }).join('+"`"+'), i.onleftfn = new Function("p,params,alasql", "var y;return " + i.onleftfns), i.onrightfns = e.using.map(function (e) {
        return "p['" + (i.alias || i.tableid) + "']['" + e.columnid + "']";
      }).join('+"`"+'), i.onrightfn = new Function("p,params,alasql", "var y;return " + i.onrightfns), i.optimization = "ix";else if (e.on) if (e.on instanceof D.Op && "=" === e.on.op && !e.on.allsome) {
        var d = "",
            f = "",
            p = "",
            b = !(i.optimization = "ix"),
            E = e.on.left.toJS("p", m.defaultTableid, m.defcols),
            g = e.on.right.toJS("p", m.defaultTableid, m.defcols);
        -1 < E.indexOf("p['" + s + "']") && !(-1 < g.indexOf("p['" + s + "']")) ? (E.match(/p\['.*?'\]/g) || []).every(function (e) {
          return e === "p['" + s + "']";
        }) ? f = E : b = !0 : !(-1 < E.indexOf("p['" + s + "']")) && -1 < g.indexOf("p['" + s + "']") && (g.match(/p\['.*?'\]/g) || []).every(function (e) {
          return e === "p['" + s + "']";
        }) ? d = E : b = !0, -1 < g.indexOf("p['" + s + "']") && !(-1 < E.indexOf("p['" + s + "']")) ? (g.match(/p\['.*?'\]/g) || []).every(function (e) {
          return e === "p['" + s + "']";
        }) ? f = g : b = !0 : !(-1 < g.indexOf("p['" + s + "']")) && -1 < E.indexOf("p['" + s + "']") && (E.match(/p\['.*?'\]/g) || []).every(function (e) {
          return e === "p['" + s + "']";
        }) ? d = g : b = !0, b && (d = f = "", p = e.on.toJS("p", m.defaultTableid, m.defcols), i.optimization = "no"), i.onleftfns = d, i.onrightfns = f, i.onmiddlefns = p || "true", i.onleftfn = new Function("p,params,alasql", "var y;return " + i.onleftfns), i.onrightfn = new Function("p,params,alasql", "var y;return " + i.onrightfns), i.onmiddlefn = new Function("p,params,alasql", "var y;return " + i.onmiddlefns);
      } else i.optimization = "no", i.onmiddlefns = e.on.toJS("p", m.defaultTableid, m.defcols), i.onmiddlefn = new Function("p,params,alasql", "var y;return " + e.on.toJS("p", m.defaultTableid, m.defcols));
      m.sources.push(i);
    });
  }, D.Select.prototype.compileWhere = function (e) {
    if (this.where) {
      if ("function" == typeof this.where) return this.where;
      var t = this.where.toJS("p", e.defaultTableid, e.defcols);
      return e.wherefns = t, new Function("p,params,alasql", "var y;return " + t);
    }

    return function () {
      return !0;
    };
  }, D.Select.prototype.compileWhereJoins = function (e) {}, D.Select.prototype.compileGroup = function (s) {
    if (0 < s.sources.length) var i = s.sources[0].alias;else i = "";
    var o = s.defcols,
        e = [[]];
    this.group && (e = G(this.group, s));
    var u = [];
    e.forEach(function (e) {
      u = r(u, e);
    }), s.allgroups = u, s.ingroup = [];
    var c = "";
    return e.forEach(function (e) {
      c += "var g=this.xgroups[";
      var t = e.map(function (e) {
        var t = e.split("\t")[0],
            r = e.split("\t")[1];
        return "" === t ? "1" : (s.ingroup.push(t), r);
      });
      0 === t.length && (t = ["''"]), c += t.join('+"`"+'), c += "];if(!g) {this.groups.push((g=this.xgroups[", c += t.join('+"`"+'), c += "] = {", c += e.map(function (e) {
        var t = e.split("\t")[0],
            r = e.split("\t")[1];
        return "" === t ? "" : "'" + t + "':" + r + ",";
      }).join("");
      var r = d(u, e);
      c += r.map(function (e) {
        return "'" + e.split("\t")[0] + "':null,";
      }).join("");
      var n = "",
          a = "";
      void 0 !== s.groupStar && (a += "for(var f in p['" + s.groupStar + "']) {g[f]=p['" + s.groupStar + "'][f];};"), c += s.selectGroup.map(function (e) {
        var t = e.expression.toJS("p", i, o),
            r = e.nick;
        return e instanceof D.AggrValue ? (e.distinct && (n += ",g['$$_VALUES_" + r + "']={},g['$$_VALUES_" + r + "'][" + t + "]=true"), "SUM" === e.aggregatorid ? "'" + r + "':(" + t + ")||0," : "MIN" === e.aggregatorid || "MAX" === e.aggregatorid || "FIRST" === e.aggregatorid || "LAST" === e.aggregatorid ? "'" + r + "':" + t + "," : "ARRAY" === e.aggregatorid ? "'" + r + "':[" + t + "]," : "COUNT" === e.aggregatorid ? "*" === e.expression.columnid ? "'" + r + "':1," : "'" + r + "':(typeof " + t + ' != "undefined")?1:0,' : "AVG" === e.aggregatorid ? (s.removeKeys.push("_SUM_" + r), s.removeKeys.push("_COUNT_" + r), "'" + r + "':" + t + ",'_SUM_" + r + "':(" + t + ")||0,'_COUNT_" + r + "':(typeof " + t + ' != "undefined")?1:0,') : "AGGR" === e.aggregatorid ? (n += ",g['" + r + "']=" + e.expression.toJS("g", -1), "") : "REDUCE" === e.aggregatorid ? (s.aggrKeys.push(e), "'" + r + "':alasql.aggr['" + e.funcid + "'](" + t + ",undefined,1),") : "") : "";
      }).join(""), c += "}" + n + ",g));" + a + "} else {", c += s.selectGroup.map(function (e) {
        var t = e.nick,
            r = e.expression.toJS("p", i, o);

        if (e instanceof D.AggrValue) {
          var n = "",
              a = "";
          if (e.distinct) n = "if(typeof " + r + '!="undefined" && (!g[\'$$_VALUES_' + t + "'][" + r + "])) \t\t\t\t \t\t {", a = "g['$$_VALUES_" + t + "'][" + r + "]=true;}";
          return "SUM" === e.aggregatorid ? n + "g['" + t + "']+=(" + r + "||0);" + a : "COUNT" === e.aggregatorid ? "*" === e.expression.columnid ? n + "g['" + t + "']++;" + a : n + "if(typeof " + r + '!="undefined") g[\'' + t + "']++;" + a : "ARRAY" === e.aggregatorid ? n + "g['" + t + "'].push(" + r + ");" + a : "MIN" === e.aggregatorid ? n + "g['" + t + "']=Math.min(g['" + t + "']," + r + ");" + a : "MAX" === e.aggregatorid ? n + "g['" + t + "']=Math.max(g['" + t + "']," + r + ");" + a : "FIRST" === e.aggregatorid ? "" : "LAST" === e.aggregatorid ? n + "g['" + t + "']=" + r + ";" + a : "AVG" === e.aggregatorid ? n + "g['_SUM_" + t + "']+=(y=" + r + ")||0;g['_COUNT_" + t + "']+=(typeof y!=\"undefined\")?1:0;g['" + t + "']=g['_SUM_" + t + "']/g['_COUNT_" + t + "'];" + a : "AGGR" === e.aggregatorid ? n + "g['" + t + "']=" + e.expression.toJS("g", -1) + ";" + a : "REDUCE" === e.aggregatorid ? n + "g['" + t + "']=alasql.aggr." + e.funcid + "(" + r + ",g['" + t + "'],2);" + a : "";
        }

        return "";
      }).join(""), c += "}";
    }), new Function("p,params,alasql", "var y;" + c);
  }, D.Select.prototype.compileSelect1 = function (u, c) {
    var l = this;
    u.columns = [], u.xcolumns = {}, u.selectColumns = {}, u.dirtyColumns = !1;
    var e = "var r={",
        h = "",
        d = [];
    return this.columns.forEach(function (e) {
      if (e instanceof D.Column) {
        if ("*" === e.columnid) {
          if (e.func) h += "r=params['" + e.param + "'](p['" + u.sources[0].alias + "'],p,params,alasql);";else if (e.tableid) {
            (t = U(u, [e.tableid], !1)).s && (d = d.concat(t.s)), h += t.sp;
          } else {
            var t;
            (t = U(u, Object.keys(u.aliases), !0)).s && (d = d.concat(t.s)), h += t.sp;
          }
        } else {
          var r = e.tableid,
              n = e.databaseid || u.sources[0].databaseid || u.database.databaseid;
          if (r = (r = r || u.defcols[e.columnid]) || u.defaultTableid, "_" !== e.columnid) c && 1 < c.length && Array.isArray(c[0]) && 1 <= c[0].length && c[0][0].hasOwnProperty("sheetid") ? h = 'var r={};var w=p["' + r + '"];var cols=[' + l.columns.map(function (e) {
            return "'" + e.columnid + "'";
          }).join(",") + "];var colas=[" + l.columns.map(function (e) {
            return "'" + (e.as || e.columnid) + "'";
          }).join(",") + "];for (var i=0;i<Object.keys(p['" + r + "']).length;i++) for(var k=0;k<cols.length;k++){if (!r.hasOwnProperty(i)) r[i]={}; r[i][colas[k]]=w[i][cols[k]];}" : d.push("'" + p(e.as || e.columnid) + "':p['" + r + "']['" + e.columnid + "']");else d.push("'" + p(e.as || e.columnid) + "':p['" + r + "']");

          if (u.selectColumns[p(e.as || e.columnid)] = !0, u.aliases[r] && "table" === u.aliases[r].type) {
            if (!gi.databases[n].tables[u.aliases[r].tableid]) throw new Error("Table '" + r + "' does not exist in database");
            var a = gi.databases[n].tables[u.aliases[r].tableid].columns,
                s = gi.databases[n].tables[u.aliases[r].tableid].xcolumns;

            if (s && 0 < a.length) {
              var i = s[e.columnid];
              if (void 0 === i) throw new Error("Column does not exist: " + e.columnid);
              var o = {
                columnid: e.as || e.columnid,
                dbtypeid: i.dbtypeid,
                dbsize: i.dbsize,
                dbpecision: i.dbprecision,
                dbenum: i.dbenum
              };
              u.columns.push(o), u.xcolumns[o.columnid] = o;
            } else {
              o = {
                columnid: e.as || e.columnid
              };
              u.columns.push(o), u.xcolumns[o.columnid] = o, u.dirtyColumns = !0;
            }
          } else {
            o = {
              columnid: e.as || e.columnid
            };
            u.columns.push(o), u.xcolumns[o.columnid] = o;
          }
        }
      } else if (e instanceof D.AggrValue) {
        l.group || (l.group = [""]), e.as || (e.as = p(e.toString())), "SUM" === e.aggregatorid || "MAX" === e.aggregatorid || "MIN" === e.aggregatorid || "FIRST" === e.aggregatorid || "LAST" === e.aggregatorid || "AVG" === e.aggregatorid || "ARRAY" === e.aggregatorid || "REDUCE" === e.aggregatorid ? d.push("'" + p(e.as) + "':" + f(e.expression.toJS("p", u.defaultTableid, u.defcols))) : "COUNT" === e.aggregatorid && d.push("'" + p(e.as) + "':1");
        o = {
          columnid: e.as || e.columnid || e.toString()
        };
        u.columns.push(o), u.xcolumns[o.columnid] = o;
      } else {
        d.push("'" + p(e.as || e.columnid || e.toString()) + "':" + f(e.toJS("p", u.defaultTableid, u.defcols))), u.selectColumns[p(e.as || e.columnid || e.toString())] = !0;
        o = {
          columnid: e.as || e.columnid || e.toString()
        };
        u.columns.push(o), u.xcolumns[o.columnid] = o;
      }
    }), e += d.join(",") + "};" + h;
  }, D.Select.prototype.compileSelect2 = function (n) {
    var a = n.selectfns;
    return this.orderColumns && 0 < this.orderColumns.length && this.orderColumns.forEach(function (e, t) {
      var r = "$$$" + t;
      e instanceof D.Column && n.xcolumns[e.columnid] ? a += "r['" + r + "']=r['" + e.columnid + "'];" : a += "r['" + r + "']=" + e.toJS("p", n.defaultTableid, n.defcols) + ";", n.removeKeys.push(r);
    }), new Function("p,params,alasql", "var y;" + a + "return r");
  }, D.Select.prototype.compileSelectGroup0 = function (a) {
    var s = this;
    s.columns.forEach(function (e, t) {
      if (e instanceof D.Column && "*" === e.columnid) a.groupStar = e.tableid || "default";else {
        var r;
        r = e instanceof D.Column ? p(e.columnid) : p(e.toString(!0));

        for (var n = 0; n < t; n++) if (r === s.columns[n].nick) {
          r = s.columns[n].nick + ":" + t;
          break;
        }

        e.nick = r, !e.funcid || "ROWNUM" !== e.funcid.toUpperCase() && "ROW_NUMBER" !== e.funcid.toUpperCase() || a.rownums.push(e.as);
      }
    }), this.columns.forEach(function (e) {
      e.findAggregator && e.findAggregator(a);
    }), this.having && this.having.findAggregator && this.having.findAggregator(a);
  }, D.Select.prototype.compileSelectGroup1 = function (n) {
    var a = "var r = {};";
    return this.columns.forEach(function (e) {
      if (e instanceof D.Column && "*" === e.columnid) return a += "for(var k in g) {r[k]=g[k]};", "";
      var t = e.as;
      void 0 === t && (t = e instanceof D.Column ? p(e.columnid) : e.nick), n.groupColumns[t] = e.nick, a += "r['" + t + "']=", a += f(e.toJS("g", "")) + ";";

      for (var r = 0; r < n.removeKeys.length; r++) if (n.removeKeys[r] === t) {
        n.removeKeys.splice(r, 1);
        break;
      }
    }), a;
  }, D.Select.prototype.compileSelectGroup2 = function (n) {
    var a = n.selectgfns;
    return this.columns.forEach(function (e) {
      -1 < n.ingroup.indexOf(e.nick) && (a += "r['" + (e.as || e.nick) + "']=g['" + e.nick + "'];");
    }), this.orderColumns && 0 < this.orderColumns.length && this.orderColumns.forEach(function (e, t) {
      var r = "$$$" + t;
      e instanceof D.Column && n.groupColumns[e.columnid] ? a += "r['" + r + "']=r['" + e.columnid + "'];" : a += "r['" + r + "']=" + e.toJS("g", "") + ";", n.removeKeys.push(r);
    }), new Function("g,params,alasql", "var y;" + a + "return r");
  }, D.Select.prototype.compileRemoveColumns = function (e) {
    void 0 !== this.removecolumns && (e.removeKeys = e.removeKeys.concat(this.removecolumns.filter(function (e) {
      return void 0 === e.like;
    }).map(function (e) {
      return e.columnid;
    })), e.removeLikeKeys = this.removecolumns.filter(function (e) {
      return void 0 !== e.like;
    }).map(function (e) {
      return e.like.value;
    }));
  }, D.Select.prototype.compileHaving = function (e) {
    if (this.having) {
      var t = this.having.toJS("g", -1);
      return e.havingfns = t, new Function("g,params,alasql", "var y;return " + t);
    }

    return function () {
      return !0;
    };
  }, D.Select.prototype.compileOrder = function (o) {
    var u = this;

    if (u.orderColumns = [], this.order) {
      if (this.order && 1 == this.order.length && this.order[0].expression && "function" == typeof this.order[0].expression) {
        var a = this.order[0].expression;
        return function (e, t) {
          var r = a(e),
              n = a(t);
          return n < r ? 1 : r == n ? 0 : -1;
        };
      }

      var c = "",
          l = "";
      return this.order.forEach(function (e, t) {
        if (e.expression instanceof D.NumValue) var r = u.columns[e.expression.value - 1];else r = e.expression;
        u.orderColumns.push(r);
        var n = "$$$" + t,
            a = "";

        if (e.expression instanceof D.Column) {
          var s = e.expression.columnid;

          if (o.xcolumns[s]) {
            var i = o.xcolumns[s].dbtypeid;
            "DATE" != i && "DATETIME" != i && "DATETIME2" != i || (a = ".valueOf()");
          } else gi.options.valueof && (a = ".valueOf()");
        }

        e.nocase && (a += ".toUpperCase()"), c += "if((a['" + n + "']||'')" + a + ("ASC" == e.direction ? ">" : "<") + "(b['" + n + "']||'')" + a + ")return 1;", c += "if((a['" + n + "']||'')" + a + "==(b['" + n + "']||'')" + a + "){", l += "}";
      }), c += "return 0;", c += l + "return -1", o.orderfns = c, new Function("a,b", "var y;" + c);
    }
  }, D.Select.prototype.compilePivot = function (e) {
    var t = this,
        h = t.pivot.columnid,
        d = t.pivot.expr.aggregatorid,
        f = t.pivot.inlist,
        p = null;
    if (null == (p = t.pivot.expr.expression.hasOwnProperty("columnid") ? t.pivot.expr.expression.columnid : t.pivot.expr.expression.expression.columnid)) throw "columnid not found";
    return f = f && f.map(function (e) {
      return e.expr.columnid;
    }), function () {
      var r = this,
          n = r.columns.filter(function (e) {
        return e.columnid != h && e.columnid != p;
      }).map(function (e) {
        return e.columnid;
      }),
          a = [],
          s = {},
          i = {},
          o = {},
          u = [];
      if (r.data.forEach(function (t) {
        if (!f || -1 < f.indexOf(t[h])) {
          var e = n.map(function (e) {
            return t[e];
          }).join("`"),
              r = i[e];
          if (r || (r = {}, i[e] = r, u.push(r), n.forEach(function (e) {
            r[e] = t[e];
          })), o[e] || (o[e] = {}), o[e][t[h]] ? o[e][t[h]]++ : o[e][t[h]] = 1, s[t[h]] || (s[t[h]] = !0, a.push(t[h])), "SUM" == d || "AVG" == d) void 0 === r[t[h]] && (r[t[h]] = 0), r[t[h]] += +t[p];else if ("COUNT" == d) void 0 === r[t[h]] && (r[t[h]] = 0), r[t[h]]++;else if ("MIN" == d) void 0 === r[t[h]] && (r[t[h]] = t[p]), t[p] < r[t[h]] && (r[t[h]] = t[p]);else if ("MAX" == d) void 0 === r[t[h]] && (r[t[h]] = t[p]), t[p] > r[t[h]] && (r[t[h]] = t[p]);else if ("FIRST" == d) void 0 === r[t[h]] && (r[t[h]] = t[p]);else if ("LAST" == d) r[t[h]] = t[p];else {
            if (!gi.aggr[d]) throw new Error("Wrong aggregator in PIVOT clause");
            gi.aggr[d](r[t[h]], t[p]);
          }
        }
      }), "AVG" == d) for (var e in i) {
        var t = i[e];

        for (var c in t) -1 == n.indexOf(c) && c != p && (t[c] = t[c] / o[e][c]);
      }
      r.data = u, f && (a = f);
      var l = r.columns.filter(function (e) {
        return e.columnid == p;
      })[0];
      r.columns = r.columns.filter(function (e) {
        return !(e.columnid == h || e.columnid == p);
      }), a.forEach(function (e) {
        var t = b(l);
        t.columnid = e, r.columns.push(t);
      });
    };
  }, D.Select.prototype.compileUnpivot = function (e) {
    var s = this.unpivot.tocolumnid,
        i = this.unpivot.forcolumnid,
        t = this.unpivot.inlist.map(function (e) {
      return e.columnid;
    });
    return function () {
      var n = [],
          a = e.columns.map(function (e) {
        return e.columnid;
      }).filter(function (e) {
        return -1 == t.indexOf(e) && e != i && e != s;
      });
      e.data.forEach(function (r) {
        t.forEach(function (e) {
          var t = {};
          a.forEach(function (e) {
            t[e] = r[e];
          }), t[i] = e, t[s] = r[e], n.push(t);
        });
      }), e.data = n;
    };
  };

  var _ = function (e, t) {
    for (var r = [], n = 0, a = e.length, s = 0; s < a + 1; s++) {
      for (var i = [], o = 0; o < a; o++) {
        if (e[o] instanceof D.Column) {
          e[o].nick = p(e[o].columnid), t.groupColumns[p(e[o].columnid)] = e[o].nick;
          var u = e[o].nick + "\t" + e[o].toJS("p", t.sources[0].alias, t.defcols);
        } else {
          t.groupColumns[p(e[o].toString())] = p(e[o].toString());
          u = p(e[o].toString()) + "\t" + e[o].toJS("p", t.sources[0].alias, t.defcols);
        }

        n & 1 << o && i.push(u);
      }

      r.push(i), n = 1 + (n << 1);
    }

    return r;
  },
      F = function (e, t) {
    for (var r = [], n = e.length, a = 1 << n, s = 0; s < a; s++) {
      for (var i = [], o = 0; o < n; o++) s & 1 << o && (i = i.concat(G(e[o], t)));

      r.push(i);
    }

    return r;
  },
      P = function (e, r) {
    return e.reduce(function (e, t) {
      return e = e.concat(G(t, r));
    }, []);
  },
      q = function (e, t) {
    for (var r = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) r.push(e[n].concat(t[a]));

    return r;
  };

  function G(t, r) {
    if (Array.isArray(t)) {
      for (var e = [[]], n = 0; n < t.length; n++) if (t[n] instanceof D.Column) t[n].nick = p(t[n].columnid), r.groupColumns[t[n].nick] = t[n].nick, e = e.map(function (e) {
        return e.concat(t[n].nick + "\t" + t[n].toJS("p", r.sources[0].alias, r.defcols));
      });else if (t[n] instanceof D.FuncValue) r.groupColumns[p(t[n].toString())] = p(t[n].toString()), e = e.map(function (e) {
        return e.concat(p(t[n].toString()) + "\t" + t[n].toJS("p", r.sources[0].alias, r.defcols));
      });else if (t[n] instanceof D.GroupExpression) {
        if ("ROLLUP" == t[n].type) e = q(e, _(t[n].group, r));else if ("CUBE" == t[n].type) e = q(e, F(t[n].group, r));else {
          if ("GROUPING SETS" != t[n].type) throw new Error("Unknown grouping function");
          e = q(e, P(t[n].group, r));
        }
      } else e = "" === t[n] ? [["1\t1"]] : e.map(function (e) {
        return r.groupColumns[p(t[n].toString())] = p(t[n].toString()), e.concat(p(t[n].toString()) + "\t" + t[n].toJS("p", r.sources[0].alias, r.defcols));
      });

      return e;
    }

    return t instanceof D.FuncValue ? (r.groupColumns[p(t.toString())] = p(t.toString()), [t.toString() + "\t" + t.toJS("p", r.sources[0].alias, r.defcols)]) : t instanceof D.Column ? (t.nick = p(t.columnid), r.groupColumns[t.nick] = t.nick, [t.nick + "\t" + t.toJS("p", r.sources[0].alias, r.defcols)]) : (r.groupColumns[p(t.toString())] = p(t.toString()), [p(t.toString()) + "\t" + t.toJS("p", r.sources[0].alias, r.defcols)]);
  }

  D.Select.prototype.compileDefCols = function (e, n) {
    var a = {
      ".": {}
    };
    return this.from && this.from.forEach(function (e) {
      if (a["."][e.as || e.tableid] = !0, e instanceof D.Table) {
        var t = e.as || e.tableid,
            r = gi.databases[e.databaseid || n].tables[e.tableid];
        if (void 0 === r) throw new Error("Table does not exist: " + e.tableid);
        r.columns && r.columns.forEach(function (e) {
          a[e.columnid] ? a[e.columnid] = "-" : a[e.columnid] = t;
        });
      } else if (e instanceof D.Select) ;else if (e instanceof D.Search) ;else if (e instanceof D.ParamValue) ;else if (e instanceof D.VarValue) ;else if (e instanceof D.FuncValue) ;else if (e instanceof D.FromData) ;else if (e instanceof D.Json) ;else if (!e.inserted) throw new Error("Unknown type of FROM clause");
    }), this.joins && this.joins.forEach(function (e) {
      if (a["."][e.as || e.table.tableid] = !0, e.table) {
        var t = e.table.tableid;
        e.as && (t = e.as);
        t = e.as || e.table.tableid;
        var r = gi.databases[e.table.databaseid || n].tables[e.table.tableid];
        r.columns && r.columns.forEach(function (e) {
          a[e.columnid] ? a[e.columnid] = "-" : a[e.columnid] = t;
        });
      } else if (e.select) ;else if (e.param) ;else if (!e.func) throw new Error("Unknown type of FROM clause");
    }), a;
  }, D.Union = function (e) {
    return D.extend(this, e);
  }, D.Union.prototype.toString = function () {
    return "UNION";
  }, D.Union.prototype.compile = function (e) {
    return null;
  }, D.Apply = function (e) {
    return D.extend(this, e);
  }, D.Apply.prototype.toString = function () {
    var e = this.applymode + " APPLY (" + this.select.toString() + ")";
    return this.as && (e += " AS " + this.as), e;
  }, D.Over = function (e) {
    return D.extend(this, e);
  }, D.Over.prototype.toString = function () {
    var e = "OVER (";
    return this.partition && (e += "PARTITION BY " + this.partition.toString(), this.order && (e += " ")), this.order && (e += "ORDER BY " + this.order.toString()), e += ")";
  }, D.ExpressionStatement = function (e) {
    return D.extend(this, e);
  }, D.ExpressionStatement.prototype.toString = function () {
    return this.expression.toString();
  }, D.ExpressionStatement.prototype.execute = function (e, t, r) {
    if (this.expression) {
      gi.precompile(this, e, t);
      var n = new Function("params,alasql,p", "var y;return " + this.expression.toJS("({})", "", null)).bind(this)(t, gi);
      return r && (n = r(n)), n;
    }
  }, D.Expression = function (e) {
    return D.extend(this, e);
  }, D.Expression.prototype.toString = function (e) {
    var t = this.expression.toString(e);
    return this.order && (t += " " + this.order.toString()), this.nocase && (t += " COLLATE NOCASE"), this.direction && (t += " " + this.direction), t;
  }, D.Expression.prototype.findAggregator = function (e) {
    this.expression.findAggregator && this.expression.findAggregator(e);
  }, D.Expression.prototype.toJS = function (e, t, r) {
    return this.expression.reduced ? "true" : this.expression.toJS(e, t, r);
  }, D.Expression.prototype.compile = function (e, t, r) {
    return !!this.reduced || new Function("p", "var y;return " + this.toJS(e, t, r));
  }, D.JavaScript = function (e) {
    return D.extend(this, e);
  }, D.JavaScript.prototype.toString = function () {
    return "``" + this.value + "``";
  }, D.JavaScript.prototype.toJS = function () {
    return "(" + this.value + ")";
  }, D.JavaScript.prototype.execute = function (e, t, r) {
    var n = 1;
    return new Function("params,alasql,p", this.value)(t, gi), r && (n = r(n)), n;
  }, D.Literal = function (e) {
    return D.extend(this, e);
  }, D.Literal.prototype.toString = function (e) {
    var t = this.value;
    return this.value1 && (t = this.value1 + "." + t), this.alias && !e && (t += " AS " + this.alias), t;
  }, D.Join = function (e) {
    return D.extend(this, e);
  }, D.Join.prototype.toString = function () {
    var e = " ";
    return this.joinmode && (e += this.joinmode + " "), e += "JOIN " + this.table.toString();
  }, D.Table = function (e) {
    return D.extend(this, e);
  }, D.Table.prototype.toString = function () {
    var e = this.tableid;
    return this.databaseid && (e = this.databaseid + "." + e), e;
  }, D.View = function (e) {
    return D.extend(this, e);
  }, D.View.prototype.toString = function () {
    var e = this.viewid;
    return this.databaseid && (e = this.databaseid + "." + e), e;
  }, D.Op = function (e) {
    return D.extend(this, e);
  }, D.Op.prototype.toString = function () {
    if ("IN" === this.op || "NOT IN" === this.op) return this.left.toString() + " " + this.op + " (" + this.right.toString() + ")";
    if (this.allsome) return this.left.toString() + " " + this.op + " " + this.allsome + " (" + this.right.toString() + ")";
    if ("->" !== this.op && "!" !== this.op) return this.left.toString() + " " + this.op + " " + (this.allsome ? this.allsome + " " : "") + this.right.toString();
    var e = this.left.toString() + this.op;
    return "string" != typeof this.right && "number" != typeof this.right && (e += "("), e += this.right.toString(), "string" != typeof this.right && "number" != typeof this.right && (e += ")"), e;
  }, D.Op.prototype.findAggregator = function (e) {
    this.left && this.left.findAggregator && this.left.findAggregator(e), this.right && this.right.findAggregator && !this.allsome && this.right.findAggregator(e);
  }, D.Op.prototype.toType = function (e) {
    if (-1 < ["-", "*", "/", "%", "^"].indexOf(this.op)) return "number";
    if (-1 < ["||"].indexOf(this.op)) return "string";

    if ("+" === this.op) {
      if ("string" === this.left.toType(e) || "string" === this.right.toType(e)) return "string";
      if ("number" === this.left.toType(e) || "number" === this.right.toType(e)) return "number";
    }

    return -1 < ["AND", "OR", "NOT", "=", "==", "===", "!=", "!==", "!===", ">", ">=", "<", "<=", "IN", "NOT IN", "LIKE", "NOT LIKE", "REGEXP", "GLOB"].indexOf(this.op) ? "boolean" : "BETWEEN" === this.op || "NOT BETWEEN" === this.op || "IS NULL" === this.op || "IS NOT NULL" === this.op ? "boolean" : this.allsome ? "boolean" : this.op ? "unknown" : this.left.toType();
  }, D.Op.prototype.toJS = function (t, r, n) {
    function e(e) {
      return e.toJS && (e = e.toJS(t, r, n)), "y[" + (i.push(e) - 1) + "]";
    }

    function a() {
      return e(u.left);
    }

    function s() {
      return e(u.right);
    }

    var i = [],
        o = this.op,
        u = this;

    if ("=" === this.op ? o = "===" : "<>" === this.op ? o = "!=" : "OR" === this.op && (o = "||"), "->" === this.op) {
      var c = "(" + a() + "||{})";
      if ("string" == typeof this.right) h = c + '["' + this.right + '"]';else if ("number" == typeof this.right) h = c + "[" + this.right + "]";else if (this.right instanceof D.FuncValue) {
        var l = [];
        if (this.right.args && 0 !== this.right.args.length) l = this.right.args.map(e);
        h = c + "['" + this.right.funcid + "'](" + l.join(",") + ")";
      } else h = c + "[" + s() + "]";
    }

    if ("!" === this.op && "string" == typeof this.right && (h = "alasql.databases[alasql.useid].objects[" + a() + ']["' + this.right + '"]'), "IS" === this.op && (h = "((" + a() + "==null) === (" + s() + "==null))"), "==" === this.op && (h = "alasql.utils.deepEqual(" + a() + "," + s() + ")"), "===" !== this.op && "!===" !== this.op || (h = "(" + ("!===" === this.op ? "!" : "") + "((" + a() + ").valueOf()===(" + s() + ").valueOf()))"), "!==" === this.op && (h = "(!alasql.utils.deepEqual(" + a() + "," + s() + "))"), "||" === this.op && (h = "(''+(" + a() + "||'')+(" + s() + '||""))'), "LIKE" === this.op || "NOT LIKE" === this.op) {
      var h = "(" + ("NOT LIKE" === this.op ? "!" : "") + "alasql.utils.like(" + s() + "," + a();
      this.escape && (h += "," + e(this.escape)), h += "))";
    }

    if ("REGEXP" === this.op && (h = "alasql.stdfn.REGEXP_LIKE(" + a() + "," + s() + ")"), "GLOB" === this.op && (h = "alasql.utils.glob(" + a() + "," + s() + ")"), "BETWEEN" === this.op || "NOT BETWEEN" === this.op) {
      var d = a();
      h = "(" + ("NOT BETWEEN" === this.op ? "!" : "") + "((" + e(this.right1) + "<=" + d + ") && (" + d + "<=" + e(this.right2) + ")))";
    }

    if ("IN" === this.op && (this.right instanceof D.Select ? (h = "(", h += "alasql.utils.flatArray(this.queriesfn[" + this.queriesidx + "](params,null," + t + "))", h += ".indexOf(", h += a() + ")>-1)") : h = Array.isArray(this.right) ? "([" + this.right.map(e).join(",") + "].indexOf(" + a() + ")>-1)" : "(" + s() + ".indexOf(" + a() + ")>-1)"), "NOT IN" === this.op && (this.right instanceof D.Select ? (h = "(", h += "alasql.utils.flatArray(this.queriesfn[" + this.queriesidx + "](params,null,p))", h += ".indexOf(", h += a() + ")<0)") : Array.isArray(this.right) ? (h = "([" + this.right.map(e).join(",") + "].indexOf(", h += a() + ")<0)") : (h = "(" + s() + ".indexOf(", h += a() + ")==-1)")), "ALL" === this.allsome) if (this.right instanceof D.Select) h = "alasql.utils.flatArray(this.query.queriesfn[" + this.queriesidx + "](params,null,p))", h += ".every(function(b){return (", h += a() + ")" + o + "b})";else {
      if (!Array.isArray(this.right)) throw new Error("NOT IN operator without SELECT");
      h = "" + (1 == this.right.length ? e(this.right[0]) : "[" + this.right.map(e).join(",") + "]"), h += ".every(function(b){return (", h += a() + ")" + o + "b})";
    }
    if ("SOME" === this.allsome || "ANY" === this.allsome) if (this.right instanceof D.Select) h = "alasql.utils.flatArray(this.query.queriesfn[" + this.queriesidx + "](params,null,p))", h += ".some(function(b){return (", h += a() + ")" + o + "b})";else {
      if (!Array.isArray(this.right)) throw new Error("SOME/ANY operator without SELECT");
      h = "" + (1 == this.right.length ? e(this.right[0]) : "[" + this.right.map(e).join(",") + "]"), h += ".some(function(b){return (", h += a() + ")" + o + "b})";
    }

    if ("AND" === this.op) {
      if (this.left.reduced) {
        if (this.right.reduced) return "true";
        h = s();
      } else this.right.reduced && (h = a());

      o = "&&";
    }

    var f = h || "(" + a() + o + s() + ")",
        p = "y=[(" + i.join("), (") + ")]";
    return "&&" === o || "||" === o || "IS" === o || "IS NULL" === o || "IS NOT NULL" === o ? "(" + p + ", " + f + ")" : "(" + p + ", y.some(function(e){return e == null}) ? void 0 : " + f + ")";
  }, D.VarValue = function (e) {
    return D.extend(this, e);
  }, D.VarValue.prototype.toString = function () {
    return "@" + this.variable;
  }, D.VarValue.prototype.toType = function () {
    return "unknown";
  }, D.VarValue.prototype.toJS = function () {
    return "alasql.vars['" + this.variable + "']";
  }, D.NumValue = function (e) {
    return D.extend(this, e);
  }, D.NumValue.prototype.toString = function () {
    return this.value.toString();
  }, D.NumValue.prototype.toType = function () {
    return "number";
  }, D.NumValue.prototype.toJS = function () {
    return "" + this.value;
  }, D.StringValue = function (e) {
    return D.extend(this, e);
  }, D.StringValue.prototype.toString = function () {
    return "'" + this.value.toString() + "'";
  }, D.StringValue.prototype.toType = function () {
    return "string";
  }, D.StringValue.prototype.toJS = function () {
    return "'" + p(this.value) + "'";
  }, D.DomainValueValue = function (e) {
    return D.extend(this, e);
  }, D.DomainValueValue.prototype.toString = function () {
    return "VALUE";
  }, D.DomainValueValue.prototype.toType = function () {
    return "object";
  }, D.DomainValueValue.prototype.toJS = function (e, t, r) {
    return e;
  }, D.ArrayValue = function (e) {
    return D.extend(this, e);
  }, D.ArrayValue.prototype.toString = function () {
    return "ARRAY[]";
  }, D.ArrayValue.prototype.toType = function () {
    return "object";
  }, D.ArrayValue.prototype.toJS = function (t, r, n) {
    return "[(" + this.value.map(function (e) {
      return e.toJS(t, r, n);
    }).join("), (") + ")]";
  }, D.LogicValue = function (e) {
    return D.extend(this, e);
  }, D.LogicValue.prototype.toString = function () {
    return this.value ? "TRUE" : "FALSE";
  }, D.LogicValue.prototype.toType = function () {
    return "boolean";
  }, D.LogicValue.prototype.toJS = function () {
    return this.value ? "true" : "false";
  }, D.NullValue = function (e) {
    return D.extend(this, e);
  }, D.NullValue.prototype.toString = function () {
    return "NULL";
  }, D.NullValue.prototype.toJS = function () {
    return "undefined";
  }, D.ParamValue = function (e) {
    return D.extend(this, e);
  }, D.ParamValue.prototype.toString = function () {
    return "$" + this.param;
  }, D.ParamValue.prototype.toJS = function () {
    return "string" == typeof this.param ? "params['" + this.param + "']" : "params[" + this.param + "]";
  }, D.UniOp = function (e) {
    return D.extend(this, e);
  }, D.UniOp.prototype.toString = function () {
    var e;
    return e = void 0, "~" === this.op && (e = this.op + this.right.toString()), "-" === this.op && (e = this.op + this.right.toString()), "+" === this.op && (e = this.op + this.right.toString()), "#" === this.op && (e = this.op + this.right.toString()), "NOT" === this.op && (e = this.op + "(" + this.right.toString() + ")"), null === this.op && (e = "(" + this.right.toString() + ")"), e = e || "(" + this.right.toString() + ")";
  }, D.UniOp.prototype.findAggregator = function (e) {
    this.right.findAggregator && this.right.findAggregator(e);
  }, D.UniOp.prototype.toType = function () {
    return "-" === this.op ? "number" : "+" === this.op ? "number" : "NOT" === this.op ? "boolean" : void 0;
  }, D.UniOp.prototype.toJS = function (e, t, r) {
    return "~" === this.op ? "(~(" + this.right.toJS(e, t, r) + "))" : "-" === this.op ? "(-(" + this.right.toJS(e, t, r) + "))" : "+" === this.op ? "(" + this.right.toJS(e, t, r) + ")" : "NOT" === this.op ? "!(" + this.right.toJS(e, t, r) + ")" : "#" === this.op ? this.right instanceof D.Column ? "(alasql.databases[alasql.useid].objects['" + this.right.columnid + "'])" : "(alasql.databases[alasql.useid].objects[" + this.right.toJS(e, t, r) + "])" : null == this.op ? "(" + this.right.toJS(e, t, r) + ")" : void 0;
  }, D.Column = function (e) {
    return D.extend(this, e);
  }, D.Column.prototype.toString = function (e) {
    var t;
    return t = this.columnid == +this.columnid ? "[" + this.columnid + "]" : this.columnid, this.tableid && (t = +this.columnid === this.columnid ? this.tableid + t : this.tableid + "." + t, this.databaseid && (t = this.databaseid + "." + t)), this.alias && !e && (t += " AS " + this.alias), t;
  }, D.Column.prototype.toJS = function (e, t, r) {
    var n = "";
    if (this.tableid || "" !== t || r) {
      if ("g" === e) n = "g['" + this.nick + "']";else if (this.tableid) n = "_" !== this.columnid ? e + "['" + this.tableid + "']['" + this.columnid + "']" : "g" === e ? "g['_']" : e + "['" + this.tableid + "']";else if (r) {
        var a = r[this.columnid];
        if ("-" === a) throw new Error('Cannot resolve column "' + this.columnid + '" because it exists in two source tables');
        n = a ? "_" !== this.columnid ? e + "['" + a + "']['" + this.columnid + "']" : e + "['" + a + "']" : "_" !== this.columnid ? e + "['" + (this.tableid || t) + "']['" + this.columnid + "']" : e + "['" + (this.tableid || t) + "']";
      } else n = -1 === t ? e + "['" + this.columnid + "']" : "_" !== this.columnid ? e + "['" + (this.tableid || t) + "']['" + this.columnid + "']" : e + "['" + (this.tableid || t) + "']";
    } else n = "_" !== this.columnid ? e + "['" + this.columnid + "']" : "g" === e ? "g['_']" : e;
    return n;
  }, D.AggrValue = function (e) {
    return D.extend(this, e);
  }, D.AggrValue.prototype.toString = function (e) {
    var t = "";
    return "REDUCE" === this.aggregatorid ? t += this.funcid + "(" : t += this.aggregatorid + "(", this.distinct && (t += "DISTINCT "), this.expression && (t += this.expression.toString()), t += ")", this.over && (t += " " + this.over.toString()), this.alias && !e && (t += " AS " + this.alias), t;
  }, D.AggrValue.prototype.findAggregator = function (e) {
    var t = p(this.toString()) + ":" + e.selectGroup.length;

    if (!(r = !1)) {
      if (!this.nick) {
        this.nick = t;

        for (var r = !1, n = 0; n < e.removeKeys.length; n++) if (e.removeKeys[n] === t) {
          r = !0;
          break;
        }

        r || e.removeKeys.push(t);
      }

      e.selectGroup.push(this);
    }
  }, D.AggrValue.prototype.toType = function () {
    return -1 < ["SUM", "COUNT", "AVG", "MIN", "MAX", "AGGR", "VAR", "STDDEV"].indexOf(this.aggregatorid) ? "number" : -1 < ["ARRAY"].indexOf(this.aggregatorid) ? "array" : -1 < ["FIRST", "LAST"].indexOf(this.aggregatorid) ? this.expression.toType() : void 0;
  }, D.AggrValue.prototype.toJS = function () {
    var e = this.nick;
    return void 0 === e && (e = this.toString()), "g['" + e + "']";
  }, D.OrderExpression = function (e) {
    return D.extend(this, e);
  }, D.OrderExpression.prototype.toString = D.Expression.prototype.toString, D.GroupExpression = function (e) {
    return D.extend(this, e);
  }, D.GroupExpression.prototype.toString = function () {
    return this.type + "(" + this.group.toString() + ")";
  }, D.FromData = function (e) {
    return D.extend(this, e);
  }, D.FromData.prototype.toString = function () {
    return this.data ? "DATA(" + (1e16 * Math.random() | 0) + ")" : "?";
  }, D.FromData.prototype.toJS = function () {}, D.Select.prototype.exec = function (e, t) {
    this.preparams && (e = this.preparams.concat(e));
    var r = gi.useid;
    db = gi.databases[r];
    var n = this.toString(),
        a = E(n),
        s = this.compile(r);
    if (s) return s.sql = n, s.dbversion = db.dbversion, db.sqlCacheSize > gi.MAXSQLCACHESIZE && db.resetSqlCache(), db.sqlCacheSize++, db.sqlCache[a] = s, gi.res = s(e, t);
  }, D.Select.prototype.Select = function () {
    var r = this;
    if (1 < arguments.length) args = Array.prototype.slice.call(arguments);else {
      if (1 != arguments.length) throw new Error("Wrong number of arguments of Select() function");
      Array.isArray(arguments[0]) ? args = arguments[0] : args = [arguments[0]];
    }
    return r.columns = [], args.forEach(function (e) {
      if ("string" == typeof e) r.columns.push(new D.Column({
        columnid: e
      }));else if ("function" == typeof e) {
        var t = 0;
        r.preparams ? t = r.preparams.length : r.preparams = [], r.preparams.push(e), r.columns.push(new D.Column({
          columnid: "*",
          func: e,
          param: t
        }));
      }
    }), r;
  }, D.Select.prototype.From = function (e) {
    var t = this;

    if (t.from || (t.from = []), Array.isArray(e)) {
      var r = 0;
      t.preparams ? r = t.preparams.length : t.preparams = [], t.preparams.push(e), t.from.push(new D.ParamValue({
        param: r
      }));
    } else {
      if ("string" != typeof e) throw new Error("Unknown arguments in From() function");
      t.from.push(new D.Table({
        tableid: e
      }));
    }

    return t;
  }, D.Select.prototype.OrderBy = function () {
    var r = this;
    if (r.order = [], 0 == arguments.length) args = ["_"];else if (1 < arguments.length) args = Array.prototype.slice.call(arguments);else {
      if (1 != arguments.length) throw new Error("Wrong number of arguments of Select() function");
      Array.isArray(arguments[0]) ? args = arguments[0] : args = [arguments[0]];
    }
    return 0 < args.length && args.forEach(function (e) {
      var t = new D.Column({
        columnid: e
      });
      "function" == typeof e && (t = e), r.order.push(new D.OrderExpression({
        expression: t,
        direction: "ASC"
      }));
    }), r;
  }, D.Select.prototype.Top = function (e) {
    return this.top = new D.NumValue({
      value: e
    }), this;
  }, D.Select.prototype.GroupBy = function () {
    var r = this;
    if (1 < arguments.length) args = Array.prototype.slice.call(arguments);else {
      if (1 != arguments.length) throw new Error("Wrong number of arguments of Select() function");
      Array.isArray(arguments[0]) ? args = arguments[0] : args = [arguments[0]];
    }
    return r.group = [], args.forEach(function (e) {
      var t = new D.Column({
        columnid: e
      });
      r.group.push(t);
    }), r;
  }, D.Select.prototype.Where = function (e) {
    return "function" == typeof e && (this.where = e), this;
  }, D.FuncValue = function (e) {
    return D.extend(this, e);
  }, D.FuncValue.prototype.toString = function (e) {
    var t = "";
    return gi.fn[this.funcid] ? t += this.funcid : gi.aggr[this.funcid] ? t += this.funcid : (gi.stdlib[this.funcid.toUpperCase()] || gi.stdfn[this.funcid.toUpperCase()]) && (t += this.funcid.toUpperCase()), t += "(", this.args && 0 < this.args.length && (t += this.args.map(function (e) {
      return e.toString();
    }).join(",")), t += ")", this.as && !e && (t += " AS " + this.as.toString()), t;
  }, D.FuncValue.prototype.execute = function (e, t, r) {
    var n = 1;
    return gi.precompile(this, e, t), new Function("params,alasql", "var y;return " + this.toJS("", "", null))(t, gi), r && (n = r(n)), n;
  }, D.FuncValue.prototype.findAggregator = function (t) {
    this.args && 0 < this.args.length && this.args.forEach(function (e) {
      e.findAggregator && e.findAggregator(t);
    });
  }, D.FuncValue.prototype.toJS = function (t, r, n) {
    var e = "",
        a = this.funcid;
    return !gi.fn[a] && gi.stdlib[a.toUpperCase()] ? this.args && 0 < this.args.length ? e += gi.stdlib[a.toUpperCase()].apply(this, this.args.map(function (e) {
      return e.toJS(t, r);
    })) : e += gi.stdlib[a.toUpperCase()]() : (!gi.fn[a] && gi.stdfn[a.toUpperCase()] ? (this.newid && (e += "new "), e += "alasql.stdfn." + this.funcid.toUpperCase() + "(", this.args && 0 < this.args.length && (e += this.args.map(function (e) {
      return e.toJS(t, r, n);
    }).join(","))) : (this.newid && (e += "new "), e += "alasql.fn." + this.funcid + "(", this.args && 0 < this.args.length && (e += this.args.map(function (e) {
      return e.toJS(t, r, n);
    }).join(","))), e += ")"), e;
  };
  var V = gi.stdlib = {},
      B = gi.stdfn = {};
  V.ABS = function (e) {
    return "Math.abs(" + e + ")";
  }, V.CLONEDEEP = function (e) {
    return "alasql.utils.cloneDeep(" + e + ")";
  }, B.CONCAT = function () {
    return Array.prototype.slice.call(arguments).join("");
  }, V.EXP = function (e) {
    return "Math.pow(Math.E," + e + ")";
  }, V.IIF = function (e, t, r) {
    if (3 == arguments.length) return "((" + e + ")?(" + t + "):(" + r + "))";
    throw new Error("Number of arguments of IFF is not equals to 3");
  }, V.IFNULL = function (e, t) {
    return "(" + e + "||" + t + ")";
  }, V.INSTR = function (e, t) {
    return "((" + e + ").indexOf(" + t + ")+1)";
  }, V.LEN = V.LENGTH = function (e) {
    return n(e, "y.length");
  }, V.LOWER = V.LCASE = function (e) {
    return n(e, "String(y).toLowerCase()");
  }, V.LTRIM = function (e) {
    return n(e, 'y.replace(/^[ ]+/,"")');
  }, V.RTRIM = function (e) {
    return n(e, 'y.replace(/[ ]+$/,"")');
  }, V.MAX = V.GREATEST = function () {
    return "Math.max(" + Array.prototype.join.call(arguments, ",") + ")";
  }, V.MIN = V.LEAST = function () {
    return "Math.min(" + Array.prototype.join.call(arguments, ",") + ")";
  }, V.SUBSTRING = V.SUBSTR = V.MID = function (e, t, r) {
    return 2 == arguments.length ? n(e, "y.substr(" + t + "-1)") : 3 == arguments.length ? n(e, "y.substr(" + t + "-1," + r + ")") : void 0;
  }, B.REGEXP_LIKE = function (e, t, r) {
    return -1 < (e || "").search(RegExp(t, r));
  }, V.ISNULL = V.NULLIF = function (e, t) {
    return "(" + e + "==" + t + "?undefined:" + e + ")";
  }, V.POWER = function (e, t) {
    return "Math.pow(" + e + "," + t + ")";
  }, V.RANDOM = function (e) {
    return 0 == arguments.length ? "Math.random()" : "(Math.random()*(" + e + ")|0)";
  }, V.ROUND = function (e, t) {
    return 2 == arguments.length ? "Math.round((" + e + ")*Math.pow(10,(" + t + ")))/Math.pow(10,(" + t + "))" : "Math.round(" + e + ")";
  }, V.CEIL = V.CEILING = function (e) {
    return "Math.ceil(" + e + ")";
  }, V.FLOOR = function (e) {
    return "Math.floor(" + e + ")";
  }, V.ROWNUM = function () {
    return "1";
  }, V.ROW_NUMBER = function () {
    return "1";
  }, V.SQRT = function (e) {
    return "Math.sqrt(" + e + ")";
  }, V.TRIM = function (e) {
    return n(e, "y.trim()");
  }, V.UPPER = V.UCASE = function (e) {
    return n(e, "String(y).toUpperCase()");
  }, B.CONCAT_WS = function () {
    var e = Array.prototype.slice.call(arguments);
    return e.slice(1, e.length).join(e[0]);
  }, gi.aggr.GROUP_CONCAT = function (e, t, r) {
    return 1 === r ? "" + e : 2 === r ? t += "," + e : t;
  }, gi.aggr.MEDIAN = function (e, t, r) {
    if (2 === r) return null !== e && t.push(e), t;
    if (1 === r) return null === e ? [] : [e];
    if (!t.length) return t;
    var n = t.sort(),
        a = (n.length + 1) / 2;
    return Number.isInteger(a) ? n[a - 1] : (n[Math.floor(a - 1)] + n[Math.ceil(a - 1)]) / 2;
  }, gi.aggr.QUART = function (e, t, r, n) {
    if (2 === r) return null !== e && t.push(e), t;
    if (1 === r) return null === e ? [] : [e];
    if (!t.length) return t;
    n = n || 1;
    var a = t.sort(),
        s = n * (a.length + 1) / 4;
    return Number.isInteger(s) ? a[s - 1] : a[Math.floor(s)];
  }, gi.aggr.QUART2 = function (e, t, r) {
    return gi.aggr.QUART(e, t, r, 2);
  }, gi.aggr.QUART3 = function (e, t, r) {
    return gi.aggr.QUART(e, t, r, 3);
  }, gi.aggr.VAR = function (e, t, r) {
    if (1 === r) return null === e ? {
      arr: [],
      sum: 0
    } : {
      arr: [e],
      sum: e
    };
    if (2 === r) return null === e || (t.arr.push(e), t.sum += e), t;

    for (var n = t.arr.length, a = t.sum / n, s = 0, i = 0; i < n; i++) s += (t.arr[i] - a) * (t.arr[i] - a);

    return s /= n - 1;
  }, gi.aggr.STDEV = function (e, t, r) {
    return 1 === r || 2 === r ? gi.aggr.VAR(e, t, r) : Math.sqrt(gi.aggr.VAR(e, t, r));
  }, gi.aggr.VARP = function (e, t, r) {
    if (1 == r) return {
      arr: [e],
      sum: e
    };
    if (2 == r) return t.arr.push(e), t.sum += e, t;

    for (var n = t.arr.length, a = t.sum / n, s = 0, i = 0; i < n; i++) s += (t.arr[i] - a) * (t.arr[i] - a);

    return s /= n;
  }, gi.aggr.STD = gi.aggr.STDDEV = gi.aggr.STDEVP = function (e, t, r) {
    return 1 == r || 2 == r ? gi.aggr.VARP(e, t, r) : Math.sqrt(gi.aggr.VARP(e, t, r));
  }, gi._aggrOriginal = gi.aggr, gi.aggr = {}, Object.keys(gi._aggrOriginal).forEach(function (n) {
    gi.aggr[n] = function (e, t, r) {
      if (3 !== r || void 0 !== t) return gi._aggrOriginal[n].apply(null, arguments);
    };
  }), B.REPLACE = function (e, t, r) {
    return (e || "").split(t).join(r);
  };

  for (var j = [], H = 0; H < 256; H++) j[H] = (H < 16 ? "0" : "") + H.toString(16);

  B.NEWID = B.UUID = B.GEN_RANDOM_UUID = function () {
    var e = 4294967295 * Math.random() | 0,
        t = 4294967295 * Math.random() | 0,
        r = 4294967295 * Math.random() | 0,
        n = 4294967295 * Math.random() | 0;
    return j[255 & e] + j[e >> 8 & 255] + j[e >> 16 & 255] + j[e >> 24 & 255] + "-" + j[255 & t] + j[t >> 8 & 255] + "-" + j[t >> 16 & 15 | 64] + j[t >> 24 & 255] + "-" + j[63 & r | 128] + j[r >> 8 & 255] + "-" + j[r >> 16 & 255] + j[r >> 24 & 255] + j[255 & n] + j[n >> 8 & 255] + j[n >> 16 & 255] + j[n >> 24 & 255];
  }, D.CaseValue = function (e) {
    return D.extend(this, e);
  }, D.CaseValue.prototype.toString = function () {
    var e = "CASE ";
    return this.expression && (e += this.expression.toString()), this.whens && (e += this.whens.map(function (e) {
      return " WHEN " + e.when.toString() + " THEN " + e.then.toString();
    }).join()), e += " END";
  }, D.CaseValue.prototype.findAggregator = function (t) {
    this.expression && this.expression.findAggregator && this.expression.findAggregator(t), this.whens && 0 < this.whens.length && this.whens.forEach(function (e) {
      e.when.findAggregator && e.when.findAggregator(t), e.then.findAggregator && e.then.findAggregator(t);
    }), this.elses && this.elses.findAggregator && this.elses.findAggregator(t);
  }, D.CaseValue.prototype.toJS = function (t, r, n) {
    var e = "((function(" + t + ",params,alasql){var y,r;";
    return this.expression ? (e += "v=" + this.expression.toJS(t, r, n) + ";", e += (this.whens || []).map(function (e) {
      return " if(v==" + e.when.toJS(t, r, n) + ") {r=" + e.then.toJS(t, r, n) + "}";
    }).join(" else ")) : e += (this.whens || []).map(function (e) {
      return " if(" + e.when.toJS(t, r, n) + ") {r=" + e.then.toJS(t, r, n) + "}";
    }).join(" else "), this.elses && (e += " else {r=" + this.elses.toJS(t, r, n) + "}"), e += ";return r;}).bind(this))(" + t + ",params,alasql)";
  }, D.Json = function (e) {
    return D.extend(this, e);
  }, D.Json.prototype.toString = function () {
    var e = "";
    return e += J(this.value), e += "";
  };

  var J = gi.utils.JSONtoString = function (e) {
    var t = "";
    if ("string" == typeof e) t = '"' + e + '"';else if ("number" == typeof e) t = e;else if ("boolean" == typeof e) t = e;else {
      if ("object" != typeof e) throw new Error("2Can not show JSON object " + JSON.stringify(e));
      if (Array.isArray(e)) t += "[" + e.map(function (e) {
        return J(e);
      }).join(",") + "]";else if (!e.toJS || e instanceof D.Json) {
        t = "{";
        var r = [];

        for (var n in e) {
          var a = "";
          if ("string" == typeof n) a += '"' + n + '"';else if ("number" == typeof n) a += n;else {
            if ("boolean" != typeof n) throw new Error("THis is not ES6... no expressions on left side yet");
            a += n;
          }
          a += ":" + J(e[n]), r.push(a);
        }

        t += r.join(",") + "}";
      } else {
        if (!e.toString) throw new Error("1Can not show JSON object " + JSON.stringify(e));
        t = e.toString();
      }
    }
    return t;
  };

  function Y(e, t, r, n) {
    var a = "";
    if ("string" == typeof e) a = '"' + e + '"';else if ("number" == typeof e) a = "(" + e + ")";else if ("boolean" == typeof e) a = e;else {
      if ("object" != typeof e) throw new Error("2Can not parse JSON object " + JSON.stringify(e));
      if (Array.isArray(e)) a += "[" + e.map(function (e) {
        return Y(e, t, r, n);
      }).join(",") + "]";else if (!e.toJS || e instanceof D.Json) {
        a = "{";
        var s = [];

        for (var i in e) {
          var o = "";
          if ("string" == typeof i) o += '"' + i + '"';else if ("number" == typeof i) o += i;else {
            if ("boolean" != typeof i) throw new Error("THis is not ES6... no expressions on left side yet");
            o += i;
          }
          o += ":" + Y(e[i], t, r, n), s.push(o);
        }

        a += s.join(",") + "}";
      } else {
        if (!e.toJS) throw new Error("1Can not parse JSON object " + JSON.stringify(e));
        a = e.toJS(t, r, n);
      }
    }
    return a;
  }

  D.Json.prototype.toJS = function (e, t, r) {
    return Y(this.value, e, t, r);
  }, D.Convert = function (e) {
    return D.extend(this, e);
  }, D.Convert.prototype.toString = function () {
    var e = "CONVERT(";
    return e += this.dbtypeid, void 0 !== this.dbsize && (e += "(" + this.dbsize, this.dbprecision && (e += "," + this.dbprecision), e += ")"), e += "," + this.expression.toString(), this.style && (e += "," + this.style), e += ")";
  }, D.Convert.prototype.toJS = function (e, t, r) {
    return "alasql.stdfn.CONVERT(" + this.expression.toJS(e, t, r) + ',{dbtypeid:"' + this.dbtypeid + '",dbsize:' + this.dbsize + ",dbprecision:" + this.dbprecision + ",style:" + this.style + "})";
  }, gi.stdfn.CONVERT = function (e, t) {
    var r,
        n = e;
    if (t.style) switch (r = /\d{8}/.test(n) ? new Date(+n.substr(0, 4), +n.substr(4, 2) - 1, +n.substr(6, 2)) : new Date(n), t.style) {
      case 1:
        n = ("0" + (r.getMonth() + 1)).substr(-2) + "/" + ("0" + r.getDate()).substr(-2) + "/" + ("0" + r.getYear()).substr(-2);
        break;

      case 2:
        n = ("0" + r.getYear()).substr(-2) + "." + ("0" + (r.getMonth() + 1)).substr(-2) + "." + ("0" + r.getDate()).substr(-2);
        break;

      case 3:
        n = ("0" + r.getDate()).substr(-2) + "/" + ("0" + (r.getMonth() + 1)).substr(-2) + "/" + ("0" + r.getYear()).substr(-2);
        break;

      case 4:
        n = ("0" + r.getDate()).substr(-2) + "." + ("0" + (r.getMonth() + 1)).substr(-2) + "." + ("0" + r.getYear()).substr(-2);
        break;

      case 5:
        n = ("0" + r.getDate()).substr(-2) + "-" + ("0" + (r.getMonth() + 1)).substr(-2) + "-" + ("0" + r.getYear()).substr(-2);
        break;

      case 6:
        n = ("0" + r.getDate()).substr(-2) + " " + r.toString().substr(4, 3).toLowerCase() + " " + ("0" + r.getYear()).substr(-2);
        break;

      case 7:
        n = r.toString().substr(4, 3) + " " + ("0" + r.getDate()).substr(-2) + "," + ("0" + r.getYear()).substr(-2);
        break;

      case 8:
      case 108:
        n = ("0" + r.getHours()).substr(-2) + ":" + ("0" + r.getMinutes()).substr(-2) + ":" + ("0" + r.getSeconds()).substr(-2);
        break;

      case 10:
        n = ("0" + (r.getMonth() + 1)).substr(-2) + "-" + ("0" + r.getDate()).substr(-2) + "-" + ("0" + r.getYear()).substr(-2);
        break;

      case 11:
        n = ("0" + r.getYear()).substr(-2) + "/" + ("0" + (r.getMonth() + 1)).substr(-2) + "/" + ("0" + r.getDate()).substr(-2);
        break;

      case 12:
        n = ("0" + r.getYear()).substr(-2) + ("0" + (r.getMonth() + 1)).substr(-2) + ("0" + r.getDate()).substr(-2);
        break;

      case 101:
        n = ("0" + (r.getMonth() + 1)).substr(-2) + "/" + ("0" + r.getDate()).substr(-2) + "/" + r.getFullYear();
        break;

      case 102:
        n = r.getFullYear() + "." + ("0" + (r.getMonth() + 1)).substr(-2) + "." + ("0" + r.getDate()).substr(-2);
        break;

      case 103:
        n = ("0" + r.getDate()).substr(-2) + "/" + ("0" + (r.getMonth() + 1)).substr(-2) + "/" + r.getFullYear();
        break;

      case 104:
        n = ("0" + r.getDate()).substr(-2) + "." + ("0" + (r.getMonth() + 1)).substr(-2) + "." + r.getFullYear();
        break;

      case 105:
        n = ("0" + r.getDate()).substr(-2) + "-" + ("0" + (r.getMonth() + 1)).substr(-2) + "-" + r.getFullYear();
        break;

      case 106:
        n = ("0" + r.getDate()).substr(-2) + " " + r.toString().substr(4, 3).toLowerCase() + " " + r.getFullYear();
        break;

      case 107:
        n = r.toString().substr(4, 3) + " " + ("0" + r.getDate()).substr(-2) + "," + r.getFullYear();
        break;

      case 110:
        n = ("0" + (r.getMonth() + 1)).substr(-2) + "-" + ("0" + r.getDate()).substr(-2) + "-" + r.getFullYear();
        break;

      case 111:
        n = r.getFullYear() + "/" + ("0" + (r.getMonth() + 1)).substr(-2) + "/" + ("0" + r.getDate()).substr(-2);
        break;

      case 112:
        n = r.getFullYear() + ("0" + (r.getMonth() + 1)).substr(-2) + ("0" + r.getDate()).substr(-2);
        break;

      default:
        throw new Error("The CONVERT style " + t.style + " is not realized yet.");
    }
    var a = t.dbtypeid.toUpperCase();
    if ("Date" == t.dbtypeid) return new Date(n);
    if ("DATE" == a) return i = (s = new Date(n)).getFullYear() + "." + ("0" + (s.getMonth() + 1)).substr(-2) + "." + ("0" + s.getDate()).substr(-2);

    if ("DATETIME" == a || "DATETIME2" == a) {
      var s,
          i = (s = new Date(n)).getFullYear() + "." + ("0" + (s.getMonth() + 1)).substr(-2) + "." + ("0" + s.getDate()).substr(-2);
      return i += " " + ("0" + s.getHours()).substr(-2) + ":" + ("0" + s.getMinutes()).substr(-2) + ":" + ("0" + s.getSeconds()).substr(-2), i += "." + ("00" + s.getMilliseconds()).substr(-3);
    }

    if (-1 < ["MONEY"].indexOf(a)) return (0 | (o = +n)) + 100 * o % 100 / 100;
    if (-1 < ["BOOLEAN"].indexOf(a)) return !!n;
    if (-1 < ["INT", "INTEGER", "SMALLINT", "BIGINT", "SERIAL", "SMALLSERIAL", "BIGSERIAL"].indexOf(t.dbtypeid.toUpperCase())) return 0 | n;
    if (-1 < ["STRING", "VARCHAR", "NVARCHAR", "CHARACTER VARIABLE"].indexOf(t.dbtypeid.toUpperCase())) return t.dbsize ? ("" + n).substr(0, t.dbsize) : "" + n;
    if (-1 < ["CHAR", "CHARACTER", "NCHAR"].indexOf(a)) return (n + new Array(t.dbsize + 1).join(" ")).substr(0, t.dbsize);

    if (-1 < ["NUMBER", "FLOAT", "DECIMAL", "NUMERIC"].indexOf(a)) {
      var o = +n;
      return o = void 0 !== t.dbsize ? parseFloat(o.toPrecision(t.dbsize)) : o, o = void 0 !== t.dbprecision ? parseFloat(o.toFixed(t.dbprecision)) : o;
    }

    if (-1 < ["JSON"].indexOf(a)) {
      if ("object" == typeof n) return n;

      try {
        return JSON.parse(n);
      } catch (e) {
        throw new Error("Cannot convert string to JSON");
      }
    }

    return n;
  }, D.ColumnDef = function (e) {
    return D.extend(this, e);
  }, D.ColumnDef.prototype.toString = function () {
    var e = this.columnid;
    return this.dbtypeid && (e += " " + this.dbtypeid), this.dbsize && (e += "(" + this.dbsize, this.dbprecision && (e += "," + this.dbprecision), e += ")"), this.primarykey && (e += " PRIMARY KEY"), this.notnull && (e += " NOT NULL"), e;
  }, D.CreateTable = function (e) {
    return D.extend(this, e);
  }, D.CreateTable.prototype.toString = function () {
    var e = "CREATE";
    (this.temporary && (e += " TEMPORARY"), this.view ? e += " VIEW" : e += " " + (this.class ? "CLASS" : "TABLE"), this.ifnotexists && (e += " IF  NOT EXISTS"), e += " " + this.table.toString(), this.viewcolumns && (e += "(" + this.viewcolumns.map(function (e) {
      return e.toString();
    }).join(",") + ")"), this.as) ? e += " AS " + this.as : e += " (" + this.columns.map(function (e) {
      return e.toString();
    }).join(",") + ")";
    return this.view && this.select && (e += " AS " + this.select.toString()), e;
  }, D.CreateTable.prototype.execute = function (f, p, e) {
    var t = gi.databases[this.table.databaseid || f],
        r = this.table.tableid;
    if (!r) throw new Error("Table name is not defined");
    var n = this.columns,
        a = this.constraints || [];
    if (this.ifnotexists && t.tables[r]) return e ? e(0) : 0;
    if (t.tables[r]) throw new Error("Can not create table '" + r + "', because it already exists in the database '" + t.databaseid + "'");
    var c = t.tables[r] = new gi.Table();
    this.class && (c.isclass = !0);
    var s,
        o = [],
        u = [];

    if (n && n.forEach(function (n) {
      var e = n.dbtypeid;
      gi.fn[e] || (e = e.toUpperCase()), -1 < ["SERIAL", "SMALLSERIAL", "BIGSERIAL"].indexOf(e) && (n.identity = {
        value: 1,
        step: 1
      });
      var t = {
        columnid: n.columnid,
        dbtypeid: e,
        dbsize: n.dbsize,
        dbprecision: n.dbprecision,
        notnull: n.notnull,
        identity: n.identity
      };

      if (n.identity && (c.identities[n.columnid] = {
        value: +n.identity.value,
        step: +n.identity.step
      }), n.check && c.checks.push({
        id: n.check.constrantid,
        fn: new Function("r", "var y;return " + n.check.expression.toJS("r", ""))
      }), n.default && o.push("'" + n.columnid + "':" + n.default.toJS("r", "")), n.primarykey) {
        var r = c.pk = {};
        r.columns = [n.columnid], r.onrightfns = "r['" + n.columnid + "']", r.onrightfn = new Function("r", "var y;return " + r.onrightfns), r.hh = E(r.onrightfns), c.uniqs[r.hh] = {};
      }

      if (n.unique) {
        var a = {};
        c.uk = c.uk || [], c.uk.push(a), a.columns = [n.columnid], a.onrightfns = "r['" + n.columnid + "']", a.onrightfn = new Function("r", "var y;return " + a.onrightfns), a.hh = E(a.onrightfns), c.uniqs[a.hh] = {};
      }

      if (n.foreignkey) {
        var s = n.foreignkey.table,
            i = gi.databases[s.databaseid || f].tables[s.tableid];

        if (void 0 === s.columnid) {
          if (!(i.pk.columns && 0 < i.pk.columns.length)) throw new Error("FOREIGN KEY allowed only to tables with PRIMARY KEYs");
          s.columnid = i.pk.columns[0];
        }

        c.checks.push({
          fn: function (e) {
            var t = {};
            if (void 0 === e[n.columnid]) return !0;
            t[s.columnid] = e[n.columnid];
            var r = i.pk.onrightfn(t);
            if (!i.uniqs[i.pk.hh][r]) throw new Error('Foreign key "' + e[n.columnid] + '" is not found in table ' + i.tableid);
            return !0;
          }
        });
      }

      n.onupdate && u.push("r['" + n.columnid + "']=" + n.onupdate.toJS("r", "")), c.columns.push(t), c.xcolumns[t.columnid] = t;
    }), c.defaultfns = o.join(","), c.onupdatefns = u.join(";"), a.forEach(function (e) {
      var t;

      if ("PRIMARY KEY" === e.type) {
        if (c.pk) throw new Error("Primary key already exists");
        var r = c.pk = {};
        r.columns = e.columns, r.onrightfns = r.columns.map(function (e) {
          return "r['" + e + "']";
        }).join("+'`'+"), r.onrightfn = new Function("r", "var y;return " + r.onrightfns), r.hh = E(r.onrightfns), c.uniqs[r.hh] = {};
      } else if ("CHECK" === e.type) t = new Function("r", "var y;return " + e.expression.toJS("r", ""));else if ("UNIQUE" === e.type) {
        var n = {};
        c.uk = c.uk || [], c.uk.push(n), n.columns = e.columns, n.onrightfns = n.columns.map(function (e) {
          return "r['" + e + "']";
        }).join("+'`'+"), n.onrightfn = new Function("r", "var y;return " + n.onrightfns), n.hh = E(n.onrightfns), c.uniqs[n.hh] = {};
      } else if ("FOREIGN KEY" === e.type) {
        var a = c.xcolumns[e.columns[0]],
            s = e.fktable;
        e.fkcolumns && 0 < e.fkcolumns.length && (s.columnid = e.fkcolumns[0]);
        var i = gi.databases[s.databaseid || f].tables[s.tableid];
        void 0 === s.columnid && (s.columnid = i.pk.columns[0]), t = function (e) {
          var t = {};
          if (void 0 === e[a.columnid]) return !0;
          t[s.columnid] = e[a.columnid];
          var r = i.pk.onrightfn(t);
          if (!i.uniqs[i.pk.hh][r]) throw new Error('Foreign key "' + e[a.columnid] + '" is not found in table ' + i.tableid);
          return !0;
        };
      }

      t && c.checks.push({
        fn: t,
        id: e.constraintid,
        fk: "FOREIGN KEY" === e.type
      });
    }), this.view && this.viewcolumns) {
      var i = this;
      this.viewcolumns.forEach(function (e, t) {
        i.select.columns[t].as = e.columnid;
      });
    }

    return this.view && this.select && (c.view = !0, c.select = this.select.compile(this.table.databaseid || f)), t.engineid ? gi.engines[t.engineid].createTable(this.table.databaseid || f, r, this.ifnotexists, e) : (c.insert = function (r, n) {
      var e = gi.inserted;
      gi.inserted = [r];
      var a = this,
          s = !1,
          t = !1;

      for (var i in a.beforeinsert) {
        (d = a.beforeinsert[i]) && (d.funcid ? !1 === gi.fn[d.funcid](r) && (t = t || !0) : d.statement && !1 === d.statement.execute(f) && (t = t || !0));
      }

      if (!t) {
        var o = !1;

        for (i in a.insteadofinsert) o = !0, (d = a.insteadofinsert[i]) && (d.funcid ? gi.fn[d.funcid](r) : d.statement && d.statement.execute(f));

        if (!o) {
          for (var u in a.identities) {
            var c = a.identities[u];
            r[u] = c.value;
          }

          if (a.checks && 0 < a.checks.length && a.checks.forEach(function (e) {
            if (!e.fn(r)) throw new Error("Violation of CHECK constraint " + (e.id || ""));
          }), a.columns.forEach(function (e) {
            if (e.notnull && void 0 === r[e.columnid]) throw new Error("Wrong NULL value in NOT NULL column " + e.columnid);
          }), a.pk) {
            var l = (h = a.pk).onrightfn(r);

            if (void 0 !== a.uniqs[h.hh][l]) {
              if (!n) throw new Error("Cannot insert record, because it already exists in primary key index");
              s = a.uniqs[h.hh][l];
            }
          }

          if (a.uk && a.uk.length && a.uk.forEach(function (e) {
            var t = e.onrightfn(r);

            if (void 0 !== a.uniqs[e.hh][t]) {
              if (!n) throw new Error("Cannot insert record, because it already exists in unique index");
              s = a.uniqs[e.hh][t];
            }
          }), s) a.update(function (e) {
            for (var t in r) e[t] = r[t];
          }, a.data.indexOf(s), p);else {
            for (var u in a.data.push(r), a.identities) {
              (c = a.identities[u]).value += c.step;
            }

            if (a.pk) {
              var h;
              l = (h = a.pk).onrightfn(r);
              a.uniqs[h.hh][l] = r;
            }

            a.uk && a.uk.length && a.uk.forEach(function (e) {
              var t = e.onrightfn(r);
              a.uniqs[e.hh][t] = r;
            });
          }

          for (var i in a.afterinsert) {
            var d;
            (d = a.afterinsert[i]) && (d.funcid ? gi.fn[d.funcid](r) : d.statement && d.statement.execute(f));
          }

          gi.inserted = e;
        }
      }
    }, c.delete = function (e) {
      var r = this,
          n = r.data[e],
          t = !1;

      for (var a in r.beforedelete) {
        (i = r.beforedelete[a]) && (i.funcid ? !1 === gi.fn[i.funcid](n) && (t = t || !0) : i.statement && !1 === i.statement.execute(f) && (t = t || !0));
      }

      if (t) return !1;
      var s = !1;

      for (var a in r.insteadofdelete) {
        var i;
        s = !0, (i = r.insteadofdelete[a]) && (i.funcid ? gi.fn[i.funcid](n) : i.statement && i.statement.execute(f));
      }

      if (!s) {
        if (this.pk) {
          var o = this.pk,
              u = o.onrightfn(n);
          if (void 0 === this.uniqs[o.hh][u]) throw new Error("Something wrong with primary key index on table");
          this.uniqs[o.hh][u] = void 0;
        }

        r.uk && r.uk.length && r.uk.forEach(function (e) {
          var t = e.onrightfn(n);
          if (void 0 === r.uniqs[e.hh][t]) throw new Error("Something wrong with unique index on table");
          r.uniqs[e.hh][t] = void 0;
        });
      }
    }, c.deleteall = function () {
      this.data.length = 0, this.pk && (this.uniqs[this.pk.hh] = {}), c.uk && c.uk.length && c.uk.forEach(function (e) {
        c.uniqs[e.hh] = {};
      });
    }, c.update = function (e, t, r) {
      var n,
          a = b(this.data[t]);
      if (this.pk && ((n = this.pk).pkaddr = n.onrightfn(a, r), void 0 === this.uniqs[n.hh][n.pkaddr])) throw new Error("Something wrong with index on table");
      c.uk && c.uk.length && c.uk.forEach(function (e) {
        if (e.ukaddr = e.onrightfn(a), void 0 === c.uniqs[e.hh][e.ukaddr]) throw new Error("Something wrong with unique index on table");
      }), e(a, r, gi);
      var s = !1;

      for (var i in c.beforeupdate) {
        (u = c.beforeupdate[i]) && (u.funcid ? !1 === gi.fn[u.funcid](this.data[t], a) && (s = s || !0) : u.statement && !1 === u.statement.execute(f) && (s = s || !0));
      }

      if (s) return !1;
      var o = !1;

      for (var i in c.insteadofupdate) {
        o = !0, (u = c.insteadofupdate[i]) && (u.funcid ? gi.fn[u.funcid](this.data[t], a) : u.statement && u.statement.execute(f));
      }

      if (!o) {
        if (c.checks && 0 < c.checks.length && c.checks.forEach(function (e) {
          if (!e.fn(a)) throw new Error("Violation of CHECK constraint " + (e.id || ""));
        }), c.columns.forEach(function (e) {
          if (e.notnull && void 0 === a[e.columnid]) throw new Error("Wrong NULL value in NOT NULL column " + e.columnid);
        }), this.pk && (n.newpkaddr = n.onrightfn(a), void 0 !== this.uniqs[n.hh][n.newpkaddr] && n.newpkaddr !== n.pkaddr)) throw new Error("Record already exists");

        for (var i in c.uk && c.uk.length && c.uk.forEach(function (e) {
          if (e.newukaddr = e.onrightfn(a), void 0 !== c.uniqs[e.hh][e.newukaddr] && e.newukaddr !== e.ukaddr) throw new Error("Record already exists");
        }), this.pk && (this.uniqs[n.hh][n.pkaddr] = void 0, this.uniqs[n.hh][n.newpkaddr] = a), c.uk && c.uk.length && c.uk.forEach(function (e) {
          c.uniqs[e.hh][e.ukaddr] = void 0, c.uniqs[e.hh][e.newukaddr] = a;
        }), this.data[t] = a, c.afterupdate) {
          var u;
          (u = c.afterupdate[i]) && (u.funcid ? gi.fn[u.funcid](this.data[t], a) : u.statement && u.statement.execute(f));
        }
      }
    }, gi.options.nocount || (s = 1), e && (s = e(s)), s);
  }, gi.fn.Date = Object, gi.fn.Date = Date, gi.fn.Number = Number, gi.fn.String = String, gi.fn.Boolean = Boolean, B.EXTEND = gi.utils.extend, B.CHAR = String.fromCharCode.bind(String), B.ASCII = function (e) {
    return e.charCodeAt(0);
  }, B.COALESCE = function () {
    for (var e = 0; e < arguments.length; e++) if (void 0 !== arguments[e] && ("number" != typeof arguments[e] || !isNaN(arguments[e]))) return arguments[e];
  }, B.USER = function () {
    return "alasql";
  }, B.OBJECT_ID = function (e) {
    return !!gi.tables[e];
  }, B.DATE = function (e) {
    return /\d{8}/.test(e) ? new Date(+e.substr(0, 4), +e.substr(4, 2) - 1, +e.substr(6, 2)) : new Date(e);
  }, B.NOW = function () {
    var e = new Date(),
        t = e.getFullYear() + "." + ("0" + (e.getMonth() + 1)).substr(-2) + "." + ("0" + e.getDate()).substr(-2);
    return t += " " + ("0" + e.getHours()).substr(-2) + ":" + ("0" + e.getMinutes()).substr(-2) + ":" + ("0" + e.getSeconds()).substr(-2), t += "." + ("00" + e.getMilliseconds()).substr(-3);
  }, B.GETDATE = B.NOW, B.CURRENT_TIMESTAMP = B.NOW, B.SECOND = function (e) {
    return (e = new Date(e)).getSeconds();
  }, B.MINUTE = function (e) {
    return (e = new Date(e)).getMinutes();
  }, B.HOUR = function (e) {
    return (e = new Date(e)).getHours();
  }, B.DAYOFWEEK = B.WEEKDAY = function (e) {
    return (e = new Date(e)).getDay();
  }, B.DAY = B.DAYOFMONTH = function (e) {
    return (e = new Date(e)).getDate();
  }, B.MONTH = function (e) {
    return (e = new Date(e)).getMonth() + 1;
  }, B.YEAR = function (e) {
    return (e = new Date(e)).getFullYear();
  };
  var X = {
    year: 31536e6,
    quarter: 7884e6,
    month: 2592e6,
    week: 6048e5,
    day: 864e5,
    dayofyear: 864e5,
    weekday: 864e5,
    hour: 36e5,
    minute: 6e4,
    second: 1e3,
    millisecond: 1,
    microsecond: .001
  };

  function K(t) {
    var r = "";
    if (void 0 === t) r += "undefined";else if (Array.isArray(t)) {
      r += "<style>", r += "table {border:1px black solid; border-collapse: collapse; border-spacing: 0px;}", r += "td,th {border:1px black solid; padding-left:5px; padding-right:5px}", r += "th {background-color: #EEE}", r += "</style>", r += "<table>";
      var e = [];

      for (var n in t[0]) e.push(n);

      r += "<tr><th>#", e.forEach(function (e) {
        r += "<th>" + e;
      });

      for (var a = 0, s = t.length; a < s; a++) r += "<tr><th>" + (a + 1), e.forEach(function (e) {
        r += "<td> ", t[a][e] == +t[a][e] ? (r += '<div style="text-align:right">', void 0 === t[a][e] ? r += "NULL" : r += t[a][e], r += "</div>") : void 0 === t[a][e] ? r += "NULL" : "string" == typeof t[a][e] ? r += t[a][e] : r += J(t[a][e]);
      });

      r += "</table>";
    } else r += "<p>" + J(t) + "</p>";
    return r;
  }

  function Q(e, t, r) {
    if (!(r <= 0)) {
      var n = (t - e.scrollTop) / r * 10;
      setTimeout(function () {
        e.scrollTop !== t && (e.scrollTop = e.scrollTop + n, Q(e, t, r - 10));
      }, 10);
    }
  }

  function z(m, e, t, v, S, T) {
    var A = {};

    function y(e) {
      return e && !1 === gi.options.casesensitive ? e.toLowerCase() : e;
    }

    t = t || {}, gi.utils.extend(A, t), void 0 === A.headers && (A.headers = !0), e = gi.utils.autoExtFilename(e, "xls", t), gi.utils.loadBinaryFile(e, !!v, function (e) {
      if (e instanceof ArrayBuffer) var t = function (e) {
        for (var t = "", r = 0, n = 10240; r < e.byteLength / n; ++r) t += String.fromCharCode.apply(null, new Uint8Array(e.slice(r * n, r * n + n)));

        return t += String.fromCharCode.apply(null, new Uint8Array(e.slice(r * n)));
      }(e),
          r = m.read(btoa(t), {
        type: "base64"
      });else r = m.read(e, {
        type: "binary"
      });
      var n, a;
      n = void 0 === A.sheetid ? r.SheetNames[0] : "number" == typeof A.sheetid ? r.SheetNames[A.sheetid] : A.sheetid;
      var s = [];

      if (void 0 === A.range ? a = r.Sheets[n]["!ref"] : (a = A.range, r.Sheets[n][a] && (a = r.Sheets[n][a])), a) {
        for (var i = a.split(":"), o = i[0].match(/[A-Z]+/)[0], u = +i[0].match(/[0-9]+/)[0], c = i[1].match(/[A-Z]+/)[0], l = +i[1].match(/[0-9]+/)[0], h = {}, d = gi.utils.xlscn(o), f = gi.utils.xlscn(c), p = d; p <= f; p++) {
          var b = gi.utils.xlsnc(p);
          A.headers ? r.Sheets[n][b + "" + u] ? h[b] = y(r.Sheets[n][b + "" + u].v) : h[b] = y(b) : h[b] = b;
        }

        A.headers && u++;

        for (var E = u; E <= l; E++) {
          var g = {};

          for (p = d; p <= f; p++) {
            b = gi.utils.xlsnc(p);
            r.Sheets[n][b + "" + E] && (g[h[b]] = r.Sheets[n][b + "" + E].v);
          }

          s.push(g);
        }
      } else s.push([]);

      0 < s.length && s[s.length - 1] && 0 == Object.keys(s[s.length - 1]).length && s.pop(), v && (s = v(s, S, T));
    }, function (e) {
      throw e;
    });
  }

  gi.stdfn.DATEDIFF = function (e, t, r) {
    return (new Date(r).getTime() - new Date(t).getTime()) / X[e.toLowerCase()];
  }, gi.stdfn.DATEADD = function (e, t, r) {
    var n = new Date(r).getTime() + t * X[e.toLowerCase()];
    return new Date(n);
  }, gi.stdfn.INTERVAL = function (e, t) {
    return e * X[t.toLowerCase()];
  }, gi.stdfn.DATE_ADD = gi.stdfn.ADDDATE = function (e, t) {
    var r = new Date(e).getTime() + t;
    return new Date(r);
  }, gi.stdfn.DATE_SUB = gi.stdfn.SUBDATE = function (e, t) {
    var r = new Date(e).getTime() - t;
    return new Date(r);
  }, D.DropTable = function (e) {
    return D.extend(this, e);
  }, D.DropTable.prototype.toString = function () {
    var e = "DROP ";
    return this.view ? e += "VIEW" : e += "TABLE", this.ifexists && (e += " IF EXISTS"), e += " " + this.tables.toString();
  }, D.DropTable.prototype.execute = function (n, e, a) {
    var s = this.ifexists,
        i = 0,
        o = 0,
        u = this.tables.length;
    return this.tables.forEach(function (e) {
      var t = gi.databases[e.databaseid || n],
          r = e.tableid;

      if (!s || s && t.tables[r]) {
        if (t.tables[r]) t.engineid ? gi.engines[t.engineid].dropTable(e.databaseid || n, r, s, function (e) {
          delete t.tables[r], i += e, ++o == u && a && a(i);
        }) : (delete t.tables[r], i++, ++o == u && a && a(i));else if (!gi.options.dropifnotexists) throw new Error("Can not drop table '" + e.tableid + "', because it does not exist in the database.");
      } else ++o == u && a && a(i);
    }), i;
  }, D.TruncateTable = function (e) {
    return D.extend(this, e);
  }, D.TruncateTable.prototype.toString = function () {
    var e = "TRUNCATE TABLE";
    return e += " " + this.table.toString();
  }, D.TruncateTable.prototype.execute = function (e, t, r) {
    var n = gi.databases[this.table.databaseid || e],
        a = this.table.tableid;
    if (n.engineid) return gi.engines[n.engineid].truncateTable(this.table.databaseid || e, a, this.ifexists, r);
    if (!n.tables[a]) throw new Error("Cannot truncate table becaues it does not exist");
    return n.tables[a].data = [], r ? r(0) : 0;
  }, D.CreateVertex = function (e) {
    return D.extend(this, e);
  }, D.CreateVertex.prototype.toString = function () {
    var e = "CREATE VERTEX ";
    return this.class && (e += this.class + " "), this.sharp && (e += "#" + this.sharp + " "), this.sets ? e += this.sets.toString() : this.content ? e += this.content.toString() : this.select && (e += this.select.toString()), e;
  }, D.CreateVertex.prototype.toJS = function (e) {
    return "this.queriesfn[" + (this.queriesidx - 1) + "](this.params,null," + e + ")";
  }, D.CreateVertex.prototype.compile = function (e) {
    var s = e,
        i = this.sharp;
    if (void 0 !== this.name) var t = "x.name=" + this.name.toJS(),
        o = new Function("x", t);

    if (this.sets && 0 < this.sets.length) {
      t = this.sets.map(function (e) {
        return "x['" + e.column.columnid + "']=" + e.expression.toJS("x", "");
      }).join(";");
      var u = new Function("x,params,alasql", t);
    }

    return function (e, t) {
      var r,
          n = gi.databases[s],
          a = {
        $id: void 0 !== i ? i : n.counter++,
        $node: "VERTEX"
      };
      return r = n.objects[a.$id] = a, o && o(a), u && u(a, e, gi), t && (r = t(r)), r;
    };
  }, D.CreateEdge = function (e) {
    return D.extend(this, e);
  }, D.CreateEdge.prototype.toString = function () {
    var e = "CREATE EDGE ";
    return this.class && (e += this.class + " "), e;
  }, D.CreateEdge.prototype.toJS = function (e) {
    return "this.queriesfn[" + (this.queriesidx - 1) + "](this.params,null," + e + ")";
  }, D.CreateEdge.prototype.compile = function (e) {
    var o = e,
        u = new Function("params,alasql", "var y;return " + this.from.toJS()),
        c = new Function("params,alasql", "var y;return " + this.to.toJS());
    if (void 0 !== this.name) var t = "x.name=" + this.name.toJS(),
        l = new Function("x", t);

    if (this.sets && 0 < this.sets.length) {
      t = this.sets.map(function (e) {
        return "x['" + e.column.columnid + "']=" + e.expression.toJS("x", "");
      }).join(";");
      var h = new Function("x,params,alasql", "var y;" + t);
    }

    return function (e, t) {
      var r = 0,
          n = gi.databases[o],
          a = {
        $id: n.counter++,
        $node: "EDGE"
      },
          s = u(e, gi),
          i = c(e, gi);
      return a.$in = [s.$id], a.$out = [i.$id], void 0 === s.$out && (s.$out = []), s.$out.push(a.$id), i.$in, i.$in.push(a.$id), r = n.objects[a.$id] = a, l && l(a), h && h(a, e, gi), t && (r = t(r)), r;
    };
  }, D.CreateGraph = function (e) {
    return D.extend(this, e);
  }, D.CreateGraph.prototype.toString = function () {
    var e = "CREATE GRAPH ";
    return this.class && (e += this.class + " "), e;
  }, D.CreateGraph.prototype.execute = function (u, c, e) {
    var l = [];
    return this.from && gi.from[this.from.funcid] && (this.graph = gi.from[this.from.funcid.toUpperCase()]), this.graph.forEach(function (e) {
      if (e.source) {
        var t = {};
        void 0 !== e.as && (gi.vars[e.as] = t), void 0 !== e.prop && (t.name = e.prop), void 0 !== e.sharp && (t.$id = e.sharp), void 0 !== e.name && (t.name = e.name), void 0 !== e.class && (t.$class = e.class);
        var r,
            n,
            a = gi.databases[u];

        if (void 0 === t.$id && (t.$id = a.counter++), t.$node = "EDGE", void 0 !== e.json && g(t, new Function("params,alasql", "var y;return " + e.json.toJS())(c, gi)), e.source.vars) {
          r = "object" == typeof (i = gi.vars[e.source.vars]) ? i : a.objects[i];
        } else {
          var s = e.source.sharp;
          void 0 === s && (s = e.source.prop), void 0 !== (r = gi.databases[u].objects[s]) || !gi.options.autovertex || void 0 === e.source.prop && void 0 === e.source.name || void 0 === (r = h(e.source.prop || e.source.name)) && (r = d(e.source));
        }

        if (e.source.vars) {
          var i;
          n = "object" == typeof (i = gi.vars[e.target.vars]) ? i : a.objects[i];
        } else {
          var o = e.target.sharp;
          void 0 === o && (o = e.target.prop), void 0 !== (n = gi.databases[u].objects[o]) || !gi.options.autovertex || void 0 === e.target.prop && void 0 === e.target.name || void 0 === (n = h(e.target.prop || e.target.name)) && (n = d(e.target));
        }

        if (t.$in = [r.$id], t.$out = [n.$id], void 0 === r.$out && (r.$out = []), r.$out.push(t.$id), void 0 === n.$in && (n.$in = []), n.$in.push(t.$id), void 0 !== (a.objects[t.$id] = t).$class) {
          if (void 0 === gi.databases[u].tables[t.$class]) throw new Error("No such class. Pleace use CREATE CLASS");
          gi.databases[u].tables[t.$class].data.push(t);
        }

        l.push(t.$id);
      } else d(e);
    }), e && (l = e(l)), l;

    function h(e) {
      var t = gi.databases[gi.useid].objects;

      for (var r in t) if (t[r].name === e) return t[r];
    }

    function d(e) {
      var t = {};
      void 0 !== e.as && (gi.vars[e.as] = t), void 0 !== e.prop && (t.$id = e.prop, t.name = e.prop), void 0 !== e.sharp && (t.$id = e.sharp), void 0 !== e.name && (t.name = e.name), void 0 !== e.class && (t.$class = e.class);
      var r = gi.databases[u];

      if (void 0 === t.$id && (t.$id = r.counter++), t.$node = "VERTEX", void 0 !== e.json && g(t, new Function("params,alasql", "var y;return " + e.json.toJS())(c, gi)), void 0 !== (r.objects[t.$id] = t).$class) {
        if (void 0 === gi.databases[u].tables[t.$class]) throw new Error("No such class. Pleace use CREATE CLASS");
        gi.databases[u].tables[t.$class].data.push(t);
      }

      return l.push(t.$id), t;
    }
  }, D.CreateGraph.prototype.compile1 = function (e) {
    var o = e,
        u = new Function("params,alasql", "var y;return " + this.from.toJS()),
        c = new Function("params,alasql", "var y;return " + this.to.toJS());
    if (void 0 !== this.name) var t = "x.name=" + this.name.toJS(),
        l = new Function("x", t);

    if (this.sets && 0 < this.sets.length) {
      t = this.sets.map(function (e) {
        return "x['" + e.column.columnid + "']=" + e.expression.toJS("x", "");
      }).join(";");
      var h = new Function("x,params,alasql", "var y;" + t);
    }

    return function (e, t) {
      var r = 0,
          n = gi.databases[o],
          a = {
        $id: n.counter++,
        $node: "EDGE"
      },
          s = u(e, gi),
          i = c(e, gi);
      return a.$in = [s.$id], a.$out = [i.$id], void 0 === s.$out && (s.$out = []), s.$out.push(a.$id), void 0 === i.$in && (i.$in = []), i.$in.push(a.$id), r = n.objects[a.$id] = a, l && l(a), h && h(a, e, gi), t && (r = t(r)), r;
    };
  }, D.AlterTable = function (e) {
    return D.extend(this, e);
  }, D.AlterTable.prototype.toString = function () {
    var e = "ALTER TABLE " + this.table.toString();
    return this.renameto && (e += " RENAME TO " + this.renameto), e;
  }, D.AlterTable.prototype.execute = function (e, t, r) {
    if ((p = gi.databases[e]).dbversion = Date.now(), this.renameto) {
      var n = this.table.tableid,
          a = this.renameto,
          s = 1;
      if (p.tables[a]) throw new Error("Can not rename a table '" + n + "' to '" + a + "', because the table with this name already exists");
      if (a === n) throw new Error("Can not rename a table '" + n + "' to itself");
      return p.tables[a] = p.tables[n], delete p.tables[n], s = 1, r && r(s), s;
    }

    if (this.addcolumn) {
      (p = gi.databases[this.table.databaseid || e]).dbversion++;
      var i = this.table.tableid,
          o = p.tables[i],
          u = this.addcolumn.columnid;
      if (o.xcolumns[u]) throw new Error('Cannot add column "' + u + '", because it already exists in the table "' + i + '"');
      var c = {
        columnid: u,
        dbtypeid: this.dbtypeid,
        dbsize: this.dbsize,
        dbprecision: this.dbprecision,
        dbenum: this.dbenum,
        defaultfns: null
      };
      o.columns.push(c), o.xcolumns[u] = c;

      for (var l = 0, h = o.data.length; l < h; l++) o.data[l][u] = void 0;

      return r ? r(1) : 1;
    }

    if (this.modifycolumn) {
      (p = gi.databases[this.table.databaseid || e]).dbversion++;
      i = this.table.tableid, o = p.tables[i], u = this.modifycolumn.columnid;
      if (!o.xcolumns[u]) throw new Error('Cannot modify column "' + u + '", because it was not found in the table "' + i + '"');
      return (c = o.xcolumns[u]).dbtypeid = this.dbtypeid, c.dbsize = this.dbsize, c.dbprecision = this.dbprecision, c.dbenum = this.dbenum, r ? r(1) : 1;
    }

    if (this.renamecolumn) {
      (p = gi.databases[this.table.databaseid || e]).dbversion++;
      i = this.table.tableid, o = p.tables[i], u = this.renamecolumn;
      var d = this.to;
      if (!o.xcolumns[u]) throw new Error('Column "' + u + '" is not found in the table "' + i + '"');
      if (o.xcolumns[d]) throw new Error('Column "' + d + '" already exists in the table "' + i + '"');
      if (u == d) return r ? r(0) : 0;

      for (var f = 0; f < o.columns.length; f++) o.columns[f].columnid == u && (o.columns[f].columnid = d);

      o.xcolumns[d] = o.xcolumns[u], delete o.xcolumns[u];

      for (l = 0, h = o.data.length; l < h; l++) o.data[l][d] = o.data[l][u], delete o.data[l][u];

      return o.data.length;
    }

    if (this.dropcolumn) {
      var p;
      (p = gi.databases[this.table.databaseid || e]).dbversion++;
      i = this.table.tableid, o = p.tables[i], u = this.dropcolumn;
      var b = !1;

      for (f = 0; f < o.columns.length; f++) if (o.columns[f].columnid == u) {
        b = !0, o.columns.splice(f, 1);
        break;
      }

      if (!b) throw new Error('Cannot drop column "' + u + '", because it was not found in the table "' + i + '"');

      for (delete o.xcolumns[u], l = 0, h = o.data.length; l < h; l++) delete o.data[l][u];

      return r ? r(o.data.length) : o.data.length;
    }

    throw Error("Unknown ALTER TABLE method");
  }, D.CreateIndex = function (e) {
    return D.extend(this, e);
  }, D.CreateIndex.prototype.toString = function () {
    var e = "CREATE";
    return this.unique && (e += " UNIQUE"), e += " INDEX " + this.indexid + " ON " + this.table.toString(), e += "(" + this.columns.toString() + ")";
  }, D.CreateIndex.prototype.execute = function (e, t, r) {
    var n = gi.databases[e],
        a = this.table.tableid,
        s = n.tables[a],
        i = this.indexid;
    n.indices[i] = a;
    var o = this.columns.map(function (e) {
      return e.expression.toJS("r", "");
    }).join("+'`'+"),
        u = new Function("r,params,alasql", "return " + o);

    if (this.unique) {
      s.uniqdefs[i] = {
        rightfns: o
      };
      var c = s.uniqs[i] = {};
      if (0 < s.data.length) for (var l = 0, h = s.data.length; l < h; l++) {
        c[p = o(s.data[l])] || (c[p] = {
          num: 0
        }), c[p].num++;
      }
    } else {
      var d = E(o);
      s.inddefs[i] = {
        rightfns: o,
        hh: d
      }, s.indices[d] = {};
      var f = s.indices[d] = {};
      if (0 < s.data.length) for (l = 0, h = s.data.length; l < h; l++) {
        var p;
        f[p = u(s.data[l], t, gi)] || (f[p] = []), f[p].push(s.data[l]);
      }
    }

    var b = 1;
    return r && (b = r(b)), b;
  }, D.Reindex = function (e) {
    return D.extend(this, e);
  }, D.Reindex.prototype.toString = function () {
    return "REINDEX " + this.indexid;
  }, D.Reindex.prototype.execute = function (e, t, r) {
    var n = gi.databases[e],
        a = this.indexid,
        s = n.indices[a];
    n.tables[s].indexColumns();
    var i = 1;
    return r && (i = r(i)), i;
  }, D.DropIndex = function (e) {
    return D.extend(this, e);
  }, D.DropIndex.prototype.toString = function () {
    return "DROP INDEX" + this.indexid;
  }, D.DropIndex.prototype.compile = function (e) {
    this.indexid;
    return function () {
      return 1;
    };
  }, D.WithSelect = function (e) {
    return D.extend(this, e);
  }, D.WithSelect.prototype.toString = function () {
    var e = "WITH ";
    return e += this.withs.map(function (e) {
      return e.name + " AS (" + e.select.toString() + ")";
    }).join(",") + " ", e += this.select.toString();
  }, D.WithSelect.prototype.execute = function (r, t, n) {
    var a = this,
        s = [];
    a.withs.forEach(function (e) {
      s.push(gi.databases[r].tables[e.name]), (gi.databases[r].tables[e.name] = new O({
        tableid: e.name
      })).data = e.select.execute(r, t);
    });
    return this.select.execute(r, t, function (e) {
      return a.withs.forEach(function (e, t) {
        s[t] ? gi.databases[r].tables[e.name] = s[t] : delete gi.databases[r].tables[e.name];
      }), n && (e = n(e)), e;
    });
  }, D.If = function (e) {
    return D.extend(this, e);
  }, D.If.prototype.toString = function () {
    var e = "IF ";
    return e += this.expression.toString(), e += " " + this.thenstat.toString(), this.elsestat && (e += " ELSE " + this.thenstat.toString()), e;
  }, D.If.prototype.execute = function (e, t, r) {
    var n;
    return new Function("params,alasql,p", "var y;return " + this.expression.toJS("({})", "", null)).bind(this)(t, gi) ? n = this.thenstat.execute(e, t, r) : this.elsestat ? n = this.elsestat.execute(e, t, r) : r && (n = r(n)), n;
  }, D.While = function (e) {
    return D.extend(this, e);
  }, D.While.prototype.toString = function () {
    var e = "WHILE ";
    return e += this.expression.toString(), e += " " + this.loopstat.toString();
  }, D.While.prototype.execute = function (t, r, n) {
    var a = this,
        s = [],
        i = new Function("params,alasql,p", "var y;return " + this.expression.toJS());

    if (n) {
      var o = !1,
          u = function (e) {
        o ? s.push(e) : o = !0, setTimeout(function () {
          i(r, gi) ? a.loopstat.execute(t, r, u) : s = n(s);
        }, 0);
      };

      u();
    } else for (; i(r, gi);) {
      var e = a.loopstat.execute(t, r);
      s.push(e);
    }

    return s;
  }, D.Break = function (e) {
    return D.extend(this, e);
  }, D.Break.prototype.toString = function () {
    return "BREAK";
  }, D.Break.prototype.execute = function (e, t, r, n) {
    var a = 1;
    return r && (a = r(a)), a;
  }, D.Continue = function (e) {
    return D.extend(this, e);
  }, D.Continue.prototype.toString = function () {
    return "CONTINUE";
  }, D.Continue.prototype.execute = function (e, t, r, n) {
    var a = 1;
    return r && (a = r(a)), a;
  }, D.BeginEnd = function (e) {
    return D.extend(this, e);
  }, D.BeginEnd.prototype.toString = function () {
    return "BEGIN " + this.statements.toString() + " END";
  }, D.BeginEnd.prototype.execute = function (e, r, n, t) {
    var a = this,
        s = [],
        i = 0;
    return function t() {
      a.statements[i].execute(e, r, function (e) {
        if (s.push(e), ++i < a.statements.length) return t();
        n && (s = n(s));
      });
    }(), s;
  }, D.Insert = function (e) {
    return D.extend(this, e);
  }, D.Insert.prototype.toString = function () {
    var e = "INSERT ";
    return this.orreplace && (e += "OR REPLACE "), this.replaceonly && (e = "REPLACE "), e += "INTO " + this.into.toString(), this.columns && (e += "(" + this.columns.toString() + ")"), this.values && (e += " VALUES " + this.values.toString()), this.select && (e += " " + this.select.toString()), e;
  }, D.Insert.prototype.toJS = function (e, t, r) {
    return "this.queriesfn[" + (this.queriesidx - 1) + "](this.params,null," + e + ")";
  }, D.Insert.prototype.compile = function (s) {
    var o = this;
    s = o.into.databaseid || s;
    var i = gi.databases[s],
        u = o.into.tableid,
        c = i.tables[u];
    if (!c) throw "Table '" + u + "' could not be found";
    var n,
        e = "",
        t = "",
        r = (e = "db.tables['" + u + "'].dirty=true;", "var a,aa=[],x;");

    if (this.values) {
      this.exists && (this.existsfn = this.exists.map(function (e) {
        var t = e.compile(s);
        return t.query.modifier = "RECORDSET", t;
      })), this.queries && (this.queriesfn = this.queries.map(function (e) {
        var t = e.compile(s);
        return t.query.modifier = "RECORDSET", t;
      })), o.values.forEach(function (n) {
        var a = [];
        o.columns ? o.columns.forEach(function (e, t) {
          var r = "'" + e.columnid + "':";
          c.xcolumns && c.xcolumns[e.columnid] ? 0 <= ["INT", "FLOAT", "NUMBER", "MONEY"].indexOf(c.xcolumns[e.columnid].dbtypeid) ? r += "(x=" + n[t].toJS() + ",x==undefined?undefined:+x)" : gi.fn[c.xcolumns[e.columnid].dbtypeid] ? (r += "(new " + c.xcolumns[e.columnid].dbtypeid + "(", r += n[t].toJS(), r += "))") : r += n[t].toJS() : r += n[t].toJS(), a.push(r);
        }) : Array.isArray(n) && c.columns && 0 < c.columns.length ? c.columns.forEach(function (e, t) {
          var r = "'" + e.columnid + "':";
          0 <= ["INT", "FLOAT", "NUMBER", "MONEY"].indexOf(e.dbtypeid) ? r += "+" + n[t].toJS() : gi.fn[e.dbtypeid] ? (r += "(new " + e.dbtypeid + "(", r += n[t].toJS(), r += "))") : r += n[t].toJS(), a.push(r);
        }) : t = Y(n), i.tables[u].defaultfns && a.unshift(i.tables[u].defaultfns), e += t ? "a=" + t + ";" : "a={" + a.join(",") + "};", i.tables[u].isclass && (e += "var db=alasql.databases['" + s + "'];", e += 'a.$class="' + u + '";', e += "a.$id=db.counter++;", e += "db.objects[a.$id]=a;"), i.tables[u].insert ? (e += "var db=alasql.databases['" + s + "'];", e += "db.tables['" + u + "'].insert(a," + (o.orreplace ? "true" : "false") + ");") : e += "aa.push(a);";
      }), n = r + e, i.tables[u].insert || (e += "alasql.databases['" + s + "'].tables['" + u + "'].data=alasql.databases['" + s + "'].tables['" + u + "'].data.concat(aa);"), i.tables[u].insert && i.tables[u].isclass ? e += "return a.$id;" : e += "return " + o.values.length;
      var a = new Function("db, params, alasql", "var y;" + r + e).bind(this);
    } else if (this.select) {
      this.select.modifier = "RECORDSET";
      var l = this.select.compile(s);
      if (i.engineid && gi.engines[i.engineid].intoTable) return p = function (e, t) {
        var r = l(e);
        return gi.engines[i.engineid].intoTable(i.databaseid, u, r.data, null, t);
      };
      var h = "return alasql.utils.extend(r,{" + c.defaultfns + "})",
          d = new Function("r,db,params,alasql", h);

      a = function (e, t, r) {
        var n = l(t).data;
        if (e.tables[u].insert) for (var a = 0, s = n.length; a < s; a++) {
          var i = b(n[a]);
          d(i, e, t, r), e.tables[u].insert(i, o.orreplace);
        } else e.tables[u].data = e.tables[u].data.concat(n);
        return r.options.nocount ? void 0 : n.length;
      };
    } else {
      if (!this.default) throw new Error("Wrong INSERT parameters");
      var f = "db.tables['" + u + "'].data.push({" + c.defaultfns + "});return 1;";
      a = new Function("db,params,alasql", f);
    }

    if (i.engineid && gi.engines[i.engineid].intoTable && gi.options.autocommit) var p = function (e, t) {
      var r = new Function("db,params", "var y;" + n + "return aa;")(i, e);
      return gi.engines[i.engineid].intoTable(i.databaseid, u, r, null, t);
    };else p = function (e, t) {
      var r = gi.databases[s];
      gi.options.autocommit && r.engineid && gi.engines[r.engineid].loadTableData(s, u);
      var n = a(r, e, gi);
      return gi.options.autocommit && r.engineid && gi.engines[r.engineid].saveTableData(s, u), gi.options.nocount && (n = void 0), t && t(n), n;
    };
    return p;
  }, D.Insert.prototype.execute = function (e, t, r) {
    return this.compile(e)(t, r);
  }, D.CreateTrigger = function (e) {
    return D.extend(this, e);
  }, D.CreateTrigger.prototype.toString = function () {
    var e = "CREATE TRIGGER " + this.trigger + " ";
    return this.when && (e += this.when + " "), e += this.action + " ON ", this.table.databaseid && (e += this.table.databaseid + "."), e += this.table.tableid + " ", e += this.statement.toString();
  }, D.CreateTrigger.prototype.execute = function (e, t, r) {
    var n = 1,
        a = this.trigger;
    e = this.table.databaseid || e;
    var s = gi.databases[e],
        i = this.table.tableid,
        o = {
      action: this.action,
      when: this.when,
      statement: this.statement,
      funcid: this.funcid
    };
    return "INSERT" == (s.triggers[a] = o).action && "BEFORE" == o.when ? s.tables[i].beforeinsert[a] = o : "INSERT" == o.action && "AFTER" == o.when ? s.tables[i].afterinsert[a] = o : "INSERT" == o.action && "INSTEADOF" == o.when ? s.tables[i].insteadofinsert[a] = o : "DELETE" == o.action && "BEFORE" == o.when ? s.tables[i].beforedelete[a] = o : "DELETE" == o.action && "AFTER" == o.when ? s.tables[i].afterdelete[a] = o : "DELETE" == o.action && "INSTEADOF" == o.when ? s.tables[i].insteadofdelete[a] = o : "UPDATE" == o.action && "BEFORE" == o.when ? s.tables[i].beforeupdate[a] = o : "UPDATE" == o.action && "AFTER" == o.when ? s.tables[i].afterupdate[a] = o : "UPDATE" == o.action && "INSTEADOF" == o.when && (s.tables[i].insteadofupdate[a] = o), r && (n = r(n)), n;
  }, D.DropTrigger = function (e) {
    return D.extend(this, e);
  }, D.DropTrigger.prototype.toString = function () {
    return "DROP TRIGGER " + this.trigger;
  }, D.DropTrigger.prototype.execute = function (e, t, r) {
    var n = 0,
        a = gi.databases[e],
        s = this.trigger,
        i = a.triggers[s];
    if (!i) throw new Error("Trigger not found");
    return n = 1, delete a.tables[i].beforeinsert[s], delete a.tables[i].afterinsert[s], delete a.tables[i].insteadofinsert[s], delete a.tables[i].beforedelte[s], delete a.tables[i].afterdelete[s], delete a.tables[i].insteadofdelete[s], delete a.tables[i].beforeupdate[s], delete a.tables[i].afterupdate[s], delete a.tables[i].insteadofupdate[s], delete a.triggers[s], r && (n = r(n)), n;
  }, D.Delete = function (e) {
    return D.extend(this, e);
  }, D.Delete.prototype.toString = function () {
    var e = "DELETE FROM " + this.table.toString();
    return this.where && (e += " WHERE " + this.where.toString()), e;
  }, D.Delete.prototype.compile = function (l) {
    l = this.table.databaseid || l;
    var e,
        h = this.table.tableid,
        d = gi.databases[l];

    if (this.where) {
      this.exists && (this.existsfn = this.exists.map(function (e) {
        var t = e.compile(l);
        return t.query.modifier = "RECORDSET", t;
      })), this.queries && (this.queriesfn = this.queries.map(function (e) {
        var t = e.compile(l);
        return t.query.modifier = "RECORDSET", t;
      }));
      var f = new Function("r,params,alasql", "var y;return (" + this.where.toJS("r", "") + ")").bind(this);

      e = function (e, t) {
        if (d.engineid && gi.engines[d.engineid].deleteFromTable) return gi.engines[d.engineid].deleteFromTable(l, h, f, e, t);
        gi.options.autocommit && d.engineid && "LOCALSTORAGE" == d.engineid && gi.engines[d.engineid].loadTableData(l, h);

        for (var r = d.tables[h], n = r.data.length, a = [], s = 0, i = r.data.length; s < i; s++) f(r.data[s], e, gi) ? r.delete && r.delete(s, e, gi) : a.push(r.data[s]);

        for (var o in r.data = a, r.afterdelete) {
          var u = r.afterdelete[o];
          u && (u.funcid ? gi.fn[u.funcid]() : u.statement && u.statement.execute(l));
        }

        var c = n - r.data.length;
        return gi.options.autocommit && d.engineid && "LOCALSTORAGE" == d.engineid && gi.engines[d.engineid].saveTableData(l, h), t && t(c), c;
      };
    } else e = function (e, t) {
      gi.options.autocommit && d.engineid && gi.engines[d.engineid].loadTableData(l, h), d.tables[h].dirty = !0;
      var r = d.tables[h].data.length;

      for (var n in d.tables[h].data.length = 0, d.tables[h].uniqs) d.tables[h].uniqs[n] = {};

      for (var n in d.tables[h].indices) d.tables[h].indices[n] = {};

      return gi.options.autocommit && d.engineid && gi.engines[d.engineid].saveTableData(l, h), t && t(r), r;
    };

    return e;
  }, D.Delete.prototype.execute = function (e, t, r) {
    return this.compile(e)(t, r);
  }, D.Update = function (e) {
    return D.extend(this, e);
  }, D.Update.prototype.toString = function () {
    var e = "UPDATE " + this.table.toString();
    return this.columns && (e += " SET " + this.columns.toString()), this.where && (e += " WHERE " + this.where.toString()), e;
  }, D.SetColumn = function (e) {
    return D.extend(this, e);
  }, D.SetColumn.prototype.toString = function () {
    return this.column.toString() + "=" + this.expression.toString();
  }, D.Update.prototype.compile = function (o) {
    o = this.table.databaseid || o;
    var u = this.table.tableid;

    if (this.where) {
      this.exists && (this.existsfn = this.exists.map(function (e) {
        var t = e.compile(o);
        return t.query.modifier = "RECORDSET", t;
      })), this.queries && (this.queriesfn = this.queries.map(function (e) {
        var t = e.compile(o);
        return t.query.modifier = "RECORDSET", t;
      }));
      var c = new Function("r,params,alasql", "var y;return " + this.where.toJS("r", "")).bind(this);
    }

    var t = gi.databases[o].tables[u].onupdatefns || "";
    t += ";", this.columns.forEach(function (e) {
      t += "r['" + e.column.columnid + "']=" + e.expression.toJS("r", "") + ";";
    });
    var l = new Function("r,params,alasql", "var y;" + t);
    return function (e, t) {
      var r = gi.databases[o];
      if (r.engineid && gi.engines[r.engineid].updateTable) return gi.engines[r.engineid].updateTable(o, u, l, c, e, t);
      gi.options.autocommit && r.engineid && gi.engines[r.engineid].loadTableData(o, u);
      var n = r.tables[u];
      if (!n) throw new Error("Table '" + u + "' not exists");

      for (var a = 0, s = 0, i = n.data.length; s < i; s++) c && !c(n.data[s], e, gi) || (n.update ? n.update(l, s, e) : l(n.data[s], e, gi), a++);

      return gi.options.autocommit && r.engineid && gi.engines[r.engineid].saveTableData(o, u), t && t(a), a;
    };
  }, D.Update.prototype.execute = function (e, t, r) {
    return this.compile(e)(t, r);
  }, D.Merge = function (e) {
    return D.extend(this, e);
  }, D.Merge.prototype.toString = function () {
    var t = "MERGE ";
    return t += this.into.tableid + " ", this.into.as && (t += "AS " + this.into.as + " "), t += "USING " + this.using.tableid + " ", this.using.as && (t += "AS " + this.using.as + " "), t += "ON " + this.on.toString() + " ", this.matches.forEach(function (e) {
      t += "WHEN ", e.matched || (t += "NOT "), t += "MATCHED ", e.bytarget && (t += "BY TARGET "), e.bysource && (t += "BY SOURCE "), e.expr && (t += "AND " + e.expr.toString() + " "), t += "THEN ", e.action.delete && (t += "DELETE "), e.action.insert && (t += "INSERT ", e.action.columns && (t += "(" + e.action.columns.toString() + ") "), e.action.values && (t += "VALUES (" + e.action.values.toString() + ") "), e.action.defaultvalues && (t += "DEFAULT VALUES ")), e.action.update && (t += "UPDATE ", t += e.action.update.map(function (e) {
        return e.toString();
      }).join(",") + " ");
    }), t;
  }, D.Merge.prototype.execute = function (e, t, r) {
    var n = 1;
    return r && (n = r(n)), n;
  }, D.CreateDatabase = function (e) {
    return D.extend(this, e);
  }, D.CreateDatabase.prototype.toString = function () {
    var e = "CREATE";
    return this.engineid && (e += " " + this.engineid), e += " DATABASE", this.ifnotexists && (e += " IF NOT EXISTS"), e += " " + this.databaseid, this.args && 0 < this.args.length && (e += "(" + this.args.map(function (e) {
      return e.toString();
    }).join(", ") + ")"), this.as && (e += " AS " + this.as), e;
  }, D.CreateDatabase.prototype.execute = function (e, t, r) {
    if (this.args && 0 < this.args.length && this.args.map(function (e) {
      return new Function("params,alasql", "var y;return " + e.toJS())(t, gi);
    }), this.engineid) return a = gi.engines[this.engineid].createDatabase(this.databaseid, this.args, this.ifnotexists, this.as, r);
    var n = this.databaseid;
    if (gi.databases[n]) throw new Error("Database '" + n + "' already exists");
    new gi.Database(n);
    var a = 1;
    return r ? r(a) : a;
  }, D.AttachDatabase = function (e) {
    return D.extend(this, e);
  }, D.AttachDatabase.prototype.toString = function (e) {
    var t = "ATTACH";
    return this.engineid && (t += " " + this.engineid), t += " DATABASE " + this.databaseid, e && (t += "(", 0 < e.length && (t += e.map(function (e) {
      return e.toString();
    }).join(", ")), t += ")"), this.as && (t += " AS " + this.as), t;
  }, D.AttachDatabase.prototype.execute = function (e, t, r) {
    if (!gi.engines[this.engineid]) throw new Error('Engine "' + this.engineid + '" is not defined.');
    return gi.engines[this.engineid].attachDatabase(this.databaseid, this.as, this.args, t, r);
  }, D.DetachDatabase = function (e) {
    return D.extend(this, e);
  }, D.DetachDatabase.prototype.toString = function () {
    var e = "DETACH";
    return e += " DATABASE " + this.databaseid;
  }, D.DetachDatabase.prototype.execute = function (e, t, r) {
    if (!gi.databases[this.databaseid].engineid) throw new Error('Cannot detach database "' + this.engineid + '", because it was not attached.');
    var n,
        a = this.databaseid;
    if (a === gi.DEFAULTDATABASEID) throw new Error("Drop of default database is prohibited");
    if (gi.databases[a]) delete gi.databases[a], a === gi.useid && gi.use(), n = 1;else {
      if (!this.ifexists) throw new Error("Database '" + a + "' does not exist");
      n = 0;
    }
    return r && r(n), n;
  }, D.UseDatabase = function (e) {
    return D.extend(this, e);
  }, D.UseDatabase.prototype.toString = function () {
    return "USE DATABASE " + this.databaseid;
  }, D.UseDatabase.prototype.execute = function (e, t, r) {
    var n = this.databaseid;
    if (!gi.databases[n]) throw new Error("Database '" + n + "' does not exist");
    gi.use(n);
    return r && r(1), 1;
  }, D.DropDatabase = function (e) {
    return D.extend(this, e);
  }, D.DropDatabase.prototype.toString = function () {
    var e = "DROP";
    return this.ifexists && (e += " IF EXISTS"), e += " DATABASE " + this.databaseid;
  }, D.DropDatabase.prototype.execute = function (e, t, r) {
    if (this.engineid) return gi.engines[this.engineid].dropDatabase(this.databaseid, this.ifexists, r);
    var n,
        a = this.databaseid;
    if (a === gi.DEFAULTDATABASEID) throw new Error("Drop of default database is prohibited");

    if (gi.databases[a]) {
      if (gi.databases[a].engineid) throw new Error("Cannot drop database '" + a + "', because it is attached. Detach it.");
      delete gi.databases[a], a === gi.useid && gi.use(), n = 1;
    } else {
      if (!this.ifexists) throw new Error("Database '" + a + "' does not exist");
      n = 0;
    }

    return r && r(n), n;
  }, D.Declare = function (e) {
    return D.extend(this, e);
  }, D.Declare.prototype.toString = function () {
    var e = "DECLARE ";
    return this.declares && 0 < this.declares.length && (e = this.declares.map(function (e) {
      var t = "";
      return t += "@" + e.variable + " ", t += e.dbtypeid, this.dbsize && (t += "(" + this.dbsize, this.dbprecision && (t += "," + this.dbprecision), t += ")"), e.expression && (t += " = " + e.expression.toString()), t;
    }).join(",")), e;
  }, D.Declare.prototype.execute = function (e, r, t) {
    var n = 1;
    return this.declares && 0 < this.declares.length && this.declares.map(function (e) {
      var t = e.dbtypeid;
      gi.fn[t] || (t = t.toUpperCase()), gi.declares[e.variable] = {
        dbtypeid: t,
        dbsize: e.dbsize,
        dbprecision: e.dbprecision
      }, e.expression && (gi.vars[e.variable] = new Function("params,alasql", "return " + e.expression.toJS("({})", "", null))(r, gi), gi.declares[e.variable] && (gi.vars[e.variable] = gi.stdfn.CONVERT(gi.vars[e.variable], gi.declares[e.variable])));
    }), t && (n = t(n)), n;
  }, D.ShowDatabases = function (e) {
    return D.extend(this, e);
  }, D.ShowDatabases.prototype.toString = function () {
    var e = "SHOW DATABASES";
    return this.like && (e += "LIKE " + this.like.toString()), e;
  }, D.ShowDatabases.prototype.execute = function (e, t, r) {
    if (this.engineid) return gi.engines[this.engineid].showDatabases(this.like, r);
    var n = this,
        a = [];

    for (var s in gi.databases) a.push({
      databaseid: s
    });

    return n.like && a && 0 < a.length && (a = a.filter(function (e) {
      return gi.utils.like(n.like.value, e.databaseid);
    })), r && r(a), a;
  }, D.ShowTables = function (e) {
    return D.extend(this, e);
  }, D.ShowTables.prototype.toString = function () {
    var e = "SHOW TABLES";
    return this.databaseid && (e += " FROM " + this.databaseid), this.like && (e += " LIKE " + this.like.toString()), e;
  }, D.ShowTables.prototype.execute = function (e, t, r) {
    var n = gi.databases[this.databaseid || e],
        a = this,
        s = [];

    for (var i in n.tables) s.push({
      tableid: i
    });

    return a.like && s && 0 < s.length && (s = s.filter(function (e) {
      return gi.utils.like(a.like.value, e.tableid);
    })), r && r(s), s;
  }, D.ShowColumns = function (e) {
    return D.extend(this, e);
  }, D.ShowColumns.prototype.toString = function () {
    var e = "SHOW COLUMNS";
    return this.table.tableid && (e += " FROM " + this.table.tableid), this.databaseid && (e += " FROM " + this.databaseid), e;
  }, D.ShowColumns.prototype.execute = function (e, t, r) {
    var n = gi.databases[this.databaseid || e].tables[this.table.tableid];

    if (n && n.columns) {
      var a = n.columns.map(function (e) {
        return {
          columnid: e.columnid,
          dbtypeid: e.dbtypeid,
          dbsize: e.dbsize
        };
      });
      return r && r(a), a;
    }

    return r && r([]), [];
  }, D.ShowIndex = function (e) {
    return D.extend(this, e);
  }, D.ShowIndex.prototype.toString = function () {
    var e = "SHOW INDEX";
    return this.table.tableid && (e += " FROM " + this.table.tableid), this.databaseid && (e += " FROM " + this.databaseid), e;
  }, D.ShowIndex.prototype.execute = function (e, t, r) {
    var n = gi.databases[this.databaseid || e].tables[this.table.tableid],
        a = [];
    if (n && n.indices) for (var s in n.indices) a.push({
      hh: s,
      len: Object.keys(n.indices[s]).length
    });
    return r && r(a), a;
  }, D.ShowCreateTable = function (e) {
    return D.extend(this, e);
  }, D.ShowCreateTable.prototype.toString = function () {
    var e = "SHOW CREATE TABLE " + this.table.tableid;
    return this.databaseid && (e += " FROM " + this.databaseid), e;
  }, D.ShowCreateTable.prototype.execute = function (e) {
    var t = gi.databases[this.databaseid || e].tables[this.table.tableid];

    if (t) {
      var r = "CREATE TABLE " + this.table.tableid + " (",
          n = [];
      return t.columns && (t.columns.forEach(function (e) {
        var t = e.columnid + " " + e.dbtypeid;
        e.dbsize && (t += "(" + e.dbsize + ")"), e.primarykey && (t += " PRIMARY KEY"), n.push(t);
      }), r += n.join(", ")), r += ")";
    }

    throw new Error('There is no such table "' + this.table.tableid + '"');
  }, D.SetVariable = function (e) {
    return D.extend(this, e);
  }, D.SetVariable.prototype.toString = function () {
    var e = "SET ";
    return void 0 !== this.value && (e += this.variable.toUpperCase() + " " + (this.value ? "ON" : "OFF")), this.expression && (e += this.method + this.variable + " = " + this.expression.toString()), e;
  }, D.SetVariable.prototype.execute = function (r, e, t) {
    if (void 0 !== this.value) {
      var n = this.value;
      "ON" == n ? n = !0 : "OFF" == n && (n = !1), gi.options[this.variable] = n;
    } else if (this.expression) {
      this.exists && (this.existsfn = this.exists.map(function (e) {
        var t = e.compile(r);
        return t.query && !t.query.modifier && (t.query.modifier = "RECORDSET"), t;
      })), this.queries && (this.queriesfn = this.queries.map(function (e) {
        var t = e.compile(r);
        return t.query && !t.query.modifier && (t.query.modifier = "RECORDSET"), t;
      }));
      var a = new Function("params,alasql", "return " + this.expression.toJS("({})", "", null)).bind(this)(e, gi);

      if (gi.declares[this.variable] && (a = gi.stdfn.CONVERT(a, gi.declares[this.variable])), this.props && 0 < this.props.length) {
        if ("@" == this.method) var s = "alasql.vars['" + this.variable + "']";else s = "params['" + this.variable + "']";
        s += this.props.map(function (e) {
          return "string" == typeof e ? "['" + e + "']" : "number" == typeof e ? "[" + e + "]" : "[" + e.toJS() + "]";
        }).join(), new Function("value,params,alasql", "var y;" + s + "=value")(a, e, gi);
      } else "@" == this.method ? gi.vars[this.variable] = a : e[this.variable] = a;
    }

    a = 1;
    return t && (a = t(a)), a;
  }, gi.test = function (e, t, r) {
    if (0 !== arguments.length) {
      var n = Date.now();
      if (1 === arguments.length) return r(), void gi.con.log(Date.now() - n);
      2 === arguments.length && (r = t, t = 1);

      for (var a = 0; a < t; a++) r();

      gi.con.results[e] = Date.now() - n;
    } else gi.log(gi.con.results);
  }, gi.log = function (e, t) {
    var r,
        n = gi.useid,
        a = gi.options.logtarget;
    if (c.isNode && (a = "console"), r = "string" == typeof e ? gi(e, t) : e, "console" === a || c.isNode) "string" == typeof e && gi.options.logprompt && console.log(n + ">", e), Array.isArray(r) && console.table ? console.table(r) : console.log(J(r));else {
      var s;
      s = "output" === a ? document.getElementsByTagName("output")[0] : "string" == typeof a ? document.getElementById(a) : a;
      var i = "";
      if ("string" == typeof e && gi.options.logprompt && (i += "<pre><code>" + gi.pretty(e) + "</code></pre>"), Array.isArray(r)) {
        if (0 === r.length) i += "<p>[ ]</p>";else if ("object" != typeof r[0] || Array.isArray(r[0])) for (var o = 0, u = r.length; o < u; o++) i += "<p>" + K(r[o]) + "</p>";else i += K(r);
      } else i += K(r);
      s.innerHTML += i;
    }
  }, gi.clear = function () {
    var e = gi.options.logtarget;
    c.isNode || c.isMeteorServer ? console.clear && console.clear() : ("output" === e ? document.getElementsByTagName("output")[0] : "string" == typeof e ? document.getElementById(e) : e).innerHTML = "";
  }, gi.write = function (e) {
    var t = gi.options.logtarget;
    c.isNode || c.isMeteorServer ? console.log && console.log(e) : ("output" === t ? document.getElementsByTagName("output")[0] : "string" == typeof t ? document.getElementById(t) : t).innerHTML += e;
  }, gi.prompt = function (s, i, e) {
    if (c.isNode) throw new Error("The prompt not realized for Node.js");
    var o = 0;

    if ("string" == typeof s && (s = document.getElementById(s)), "string" == typeof i && (i = document.getElementById(i)), i.textContent = gi.useid, e) {
      gi.prompthistory.push(e), o = gi.prompthistory.length;

      try {
        var t = Date.now();
        gi.log(e), gi.write('<p style="color:blue">' + (Date.now() - t) + " ms</p>");
      } catch (e) {
        gi.write("<p>" + olduseid + "&gt;&nbsp;<b>" + sql + "</b></p>"), gi.write('<p style="color:red">' + e + "<p>");
      }
    }

    var r = s.getBoundingClientRect().top + document.getElementsByTagName("body")[0].scrollTop;
    Q(document.getElementsByTagName("body")[0], r, 500), s.onkeydown = function (e) {
      if (13 === e.which) {
        var t = s.value,
            r = gi.useid;
        s.value = "", gi.prompthistory.push(t), o = gi.prompthistory.length;

        try {
          var n = Date.now();
          gi.log(t), gi.write('<p style="color:blue">' + (Date.now() - n) + " ms</p>");
        } catch (e) {
          gi.write("<p>" + r + "&gt;&nbsp;" + gi.pretty(t, !1) + "</p>"), gi.write('<p style="color:red">' + e + "<p>");
        }

        s.focus(), i.textContent = gi.useid;
        var a = s.getBoundingClientRect().top + document.getElementsByTagName("body")[0].scrollTop;
        Q(document.getElementsByTagName("body")[0], a, 500);
      } else 38 === e.which ? (--o < 0 && (o = 0), gi.prompthistory[o] && (s.value = gi.prompthistory[o], e.preventDefault())) : 40 === e.which && (++o >= gi.prompthistory.length ? (o = gi.prompthistory.length, s.value = "") : gi.prompthistory[o] && (s.value = gi.prompthistory[o], e.preventDefault()));
    };
  }, D.BeginTransaction = function (e) {
    return D.extend(this, e);
  }, D.BeginTransaction.prototype.toString = function () {
    return "BEGIN TRANSACTION";
  }, D.BeginTransaction.prototype.execute = function (e, t, r) {
    return gi.databases[e].engineid ? gi.engines[gi.databases[gi.useid].engineid].begin(e, r) : (r && r(1), 1);
  }, D.CommitTransaction = function (e) {
    return D.extend(this, e);
  }, D.CommitTransaction.prototype.toString = function () {
    return "COMMIT TRANSACTION";
  }, D.CommitTransaction.prototype.execute = function (e, t, r) {
    return gi.databases[e].engineid ? gi.engines[gi.databases[gi.useid].engineid].commit(e, r) : (r && r(1), 1);
  }, D.RollbackTransaction = function (e) {
    return D.extend(this, e);
  }, D.RollbackTransaction.prototype.toString = function () {
    return "ROLLBACK TRANSACTION";
  }, D.RollbackTransaction.prototype.execute = function (e, t, r) {
    return gi.databases[e].engineid ? gi.engines[gi.databases[e].engineid].rollback(e, r) : (r && r(1), 1);
  }, gi.options.tsql && (gi.stdfn.OBJECT_ID = function (e, t) {
    void 0 === t && (t = "T"), t = t.toUpperCase();
    var r = e.split("."),
        n = gi.useid,
        a = r[0];
    2 == r.length && (n = r[0], a = r[1]);
    var s = gi.databases[n].tables;

    for (var i in n = gi.databases[n].databaseid, s) if (i == a) return s[i].view && "V" == t ? n + "." + i : s[i].view || "T" != t ? void 0 : n + "." + i;
  }), gi.options.mysql, (gi.options.mysql || gi.options.sqlite) && (gi.from.INFORMATION_SCHEMA = function (e, t, r, n, a) {
    if ("VIEWS" != e && "TABLES" != e) throw new Error("Unknown INFORMATION_SCHEMA table");
    var s = [];

    for (var i in gi.databases) {
      var o = gi.databases[i].tables;

      for (var u in o) (o[u].view && "VIEWS" == e || !o[u].view && "TABLES" == e) && s.push({
        TABLE_CATALOG: i,
        TABLE_NAME: u
      });
    }

    return r && (s = r(s, n, a)), s;
  }), gi.options.postgres, gi.options.oracle, gi.options.sqlite, gi.into.SQL = function (e, t, r, n, a) {
    var s;
    "object" == typeof e && (t = e, e = void 0);
    var i = {};
    if (gi.utils.extend(i, t), void 0 === i.tableid) throw new Error("Table for INSERT TO is not defined.");
    var o = "";
    0 === n.length && "object" == typeof r[0] && (n = Object.keys(r[0]).map(function (e) {
      return {
        columnid: e
      };
    }));

    for (var u = 0, c = r.length; u < c; u++) o += "INSERT INTO " + t.tableid + "(", o += n.map(function (e) {
      return e.columnid;
    }).join(","), o += ") VALUES (", o += n.map(function (e) {
      var t = r[u][e.columnid];
      return e.typeid ? "STRING" !== e.typeid && "VARCHAR" !== e.typeid && "NVARCHAR" !== e.typeid && "CHAR" !== e.typeid && "NCHAR" !== e.typeid || (t = "'" + l(t) + "'") : "string" == typeof t && (t = "'" + l(t) + "'"), t;
    }), o += ");\n";

    return e = gi.utils.autoExtFilename(e, "sql", t), s = gi.utils.saveFile(e, o), a && (s = a(s)), s;
  }, gi.into.HTML = function (e, t, r, n, a) {
    var s = 1;

    if ("object" != typeof exports) {
      var i = {
        headers: !0
      };
      gi.utils.extend(i, t);
      var o = document.querySelector(e);
      if (!o) throw new Error("Selected HTML element is not found");
      0 === n.length && "object" == typeof r[0] && (n = Object.keys(r[0]).map(function (e) {
        return {
          columnid: e
        };
      }));
      var u = document.createElement("table"),
          c = document.createElement("thead");

      if (u.appendChild(c), i.headers) {
        for (var l = document.createElement("tr"), h = 0; h < n.length; h++) {
          (p = document.createElement("th")).textContent = n[h].columnid, l.appendChild(p);
        }

        c.appendChild(l);
      }

      var d = document.createElement("tbody");
      u.appendChild(d);

      for (var f = 0; f < r.length; f++) {
        for (l = document.createElement("tr"), h = 0; h < n.length; h++) {
          var p;
          (p = document.createElement("td")).textContent = r[f][n[h].columnid], l.appendChild(p);
        }

        d.appendChild(l);
      }

      gi.utils.domEmptyChildren(o), o.appendChild(u);
    }

    return a && (s = a(s)), s;
  }, gi.into.JSON = function (e, t, r, n, a) {
    var s = 1;
    "object" == typeof e && (t = e, e = void 0);
    var i = JSON.stringify(r);
    return e = gi.utils.autoExtFilename(e, "json", t), s = gi.utils.saveFile(e, i), a && (s = a(s)), s;
  }, gi.into.TXT = function (e, t, r, n, a) {
    0 === n.length && 0 < r.length && (n = Object.keys(r[0]).map(function (e) {
      return {
        columnid: e
      };
    })), "object" == typeof e && (t = e, e = void 0);
    var s = r.length,
        i = "";

    if (0 < r.length) {
      var o = n[0].columnid;
      i += r.map(function (e) {
        return e[o];
      }).join("\n");
    }

    return e = gi.utils.autoExtFilename(e, "txt", t), s = gi.utils.saveFile(e, i), a && (s = a(s)), s;
  }, gi.into.TAB = gi.into.TSV = function (e, t, r, n, a) {
    var s = {};
    return gi.utils.extend(s, t), s.separator = "\t", e = gi.utils.autoExtFilename(e, "tab", t), s.autoExt = !1, gi.into.CSV(e, s, r, n, a);
  }, gi.into.CSV = function (e, t, r, n, a) {
    0 === n.length && 0 < r.length && (n = Object.keys(r[0]).map(function (e) {
      return {
        columnid: e
      };
    })), "object" == typeof e && (t = e, e = void 0);
    var s = {
      headers: !0,
      separator: ";",
      quote: '"',
      utf8Bom: !0
    };
    t && !t.headers && void 0 !== t.headers && (s.utf8Bom = !1), gi.utils.extend(s, t);
    var i = r.length,
        o = s.utf8Bom ? "\ufeff" : "";
    return s.headers && (o += s.quote + n.map(function (e) {
      return e.columnid.trim();
    }).join(s.quote + s.separator + s.quote) + s.quote + "\r\n"), r.forEach(function (r) {
      o += n.map(function (e) {
        var t = r[e.columnid];
        return "" !== s.quote && (t = (t + "").replace(new RegExp("\\" + s.quote, "g"), s.quote + s.quote)), +t != t && (t = s.quote + t + s.quote), t;
      }).join(s.separator) + "\r\n";
    }), e = gi.utils.autoExtFilename(e, "csv", t), i = gi.utils.saveFile(e, o, null, {
      disableAutoBom: !0
    }), a && (i = a(i)), i;
  }, gi.into.XLS = function (e, h, t, r, n) {
    "object" == typeof e && (h = e, e = void 0);
    var a = {};
    h && h.sheets && (a = h.sheets);
    var d = {
      headers: !0
    };
    void 0 !== a.Sheet1 ? d = a[0] : void 0 !== h && (d = h), void 0 === d.sheetid && (d.sheetid = "Sheet1");

    var s = function () {
      var l = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" \t\txmlns="http://www.w3.org/TR/REC-html40"><head> \t\t<meta charset="utf-8" /> \t\t\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets> ';
      l += " <x:ExcelWorksheet><x:Name>" + d.sheetid + "</x:Name><x:WorksheetOptions><x:DisplayGridlines/>     </x:WorksheetOptions> \t\t</x:ExcelWorksheet>", l += "</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head>", l += "<body", void 0 !== d.style && (l += ' style="', "function" == typeof d.style ? l += d.style(d) : l += d.style, l += '"');

      if (l += ">", l += "<table>", void 0 !== d.caption) {
        var e = d.caption;
        "string" == typeof e && (e = {
          title: e
        }), l += "<caption", void 0 !== e.style && (l += ' style="', "function" == typeof e.style ? l += e.style(d, e) : l += e.style, l += '" '), l += ">", l += e.title, l += "</caption>";
      }

      void 0 !== d.columns ? r = d.columns : 0 == r.length && 0 < t.length && "object" == typeof t[0] && (r = Array.isArray(t[0]) ? t[0].map(function (e, t) {
        return {
          columnid: t
        };
      }) : Object.keys(t[0]).map(function (e) {
        return {
          columnid: e
        };
      }));
      r.forEach(function (e, t) {
        void 0 !== d.column && g(e, d.column), void 0 === e.width && (d.column && "undefined" != d.column.width ? e.width = d.column.width : e.width = "120px"), "number" == typeof e.width && (e.width = e.width + "px"), void 0 === e.columnid && (e.columnid = t), void 0 === e.title && (e.title = "" + e.columnid.trim()), d.headers && Array.isArray(d.headers) && (e.title = d.headers[t]);
      }), l += "<colgroups>", r.forEach(function (e) {
        l += '<col style="width: ' + e.width + '"></col>';
      }), l += "</colgroups>", d.headers && (l += "<thead>", l += "<tr>", r.forEach(function (e, t) {
        l += "<th ", void 0 !== e.style && (l += ' style="', "function" == typeof e.style ? l += e.style(d, e, t) : l += e.style, l += '" '), l += ">", void 0 !== e.title && ("function" == typeof e.title ? l += e.title(d, e, t) : l += e.title), l += "</th>";
      }), l += "</tr>", l += "</thead>");
      l += "<tbody>", t && 0 < t.length && t.forEach(function (o, u) {
        if (!(u > d.limit)) {
          l += "<tr";
          var c = {};
          g(c, d.row), d.rows && d.rows[u] && g(c, d.rows[u]), void 0 !== c && void 0 !== c.style && (l += ' style="', "function" == typeof c.style ? l += c.style(d, o, u) : l += c.style, l += '" '), l += ">", r.forEach(function (e, t) {
            var r = {};
            g(r, d.cell), g(r, c.cell), void 0 !== d.column && g(r, d.column.cell), g(r, e.cell), d.cells && d.cells[u] && d.cells[u][t] && g(r, d.cells[u][t]);
            var n = o[e.columnid];
            "function" == typeof r.value && (n = r.value(n, d, o, e, r, u, t));
            var a = r.typeid;
            "function" == typeof a && (a = a(n, d, o, e, r, u, t)), void 0 === a && ("number" == typeof n ? a = "number" : "string" == typeof n ? a = "string" : "boolean" == typeof n ? a = "boolean" : "object" == typeof n && n instanceof Date && (a = "date"));
            var s = "";
            "money" == a ? s = 'mso-number-format:"\\#\\,\\#\\#0\\\\ _р_\\.";white-space:normal;' : "number" == a ? s = " " : "date" == a ? s = 'mso-number-format:"Short Date";' : h.types && h.types[a] && h.types[a].typestyle && (s = h.types[a].typestyle), l += "<td style='" + (s = s || 'mso-number-format:"\\@";') + "' ", void 0 !== r.style && (l += ' style="', "function" == typeof r.style ? l += r.style(n, d, o, e, u, t) : l += r.style, l += '" '), l += ">";
            var i = r.format;
            if (void 0 === n) l += "";else if (void 0 !== i) {
              if ("function" == typeof i) l += i(n);else {
                if ("string" != typeof i) throw new Error("Unknown format type. Should be function or string");
                l += n;
              }
            } else l += "number" == a || "date" == a ? n.toString() : "money" == a ? (+n).toFixed(2) : n;
            l += "</td>";
          }), l += "</tr>";
        }
      });
      return l += "</tbody>", l += "</table>", l += "</body>", l += "</html>";
    }();

    e = gi.utils.autoExtFilename(e, "xls", h);
    var i = gi.utils.saveFile(e, s);
    return n && (i = n(i)), i;
  }, gi.into.XLSXML = function (e, b, t, r, n) {
    b = b || {}, "object" == typeof e && (b = e, e = void 0);
    var u,
        c,
        l = {};
    c = b && b.sheets ? (l = b.sheets, u = t, r) : (l.Sheet1 = b, u = [t], [r]), e = gi.utils.autoExtFilename(e, "xls", b);
    var a = gi.utils.saveFile(e, function () {
      var s = "",
          h = " </Styles>",
          i = {},
          o = 62;

      function d(e) {
        var t = "";

        for (var r in e) {
          for (var n in t += "<" + r, e[r]) t += " ", "x:" == n.substr(0, 2) ? t += n : t += "ss:", t += n + '="' + e[r][n] + '"';

          t += "/>";
        }

        var a = E(t);
        return i[a] || (i[a] = {
          styleid: o
        }, s += '<Style ss:ID="s' + o + '">', s += t, s += "</Style>", o++), "s" + i[a].styleid;
      }

      function e(t) {
        try {
          return Object.values(t);
        } catch (e) {
          return Object.keys(t).map(function (e) {
            return t[e];
          });
        }
      }

      var t = 0;

      for (var r in l) {
        var f = l[r],
            n = void 0 !== f.dataidx ? f.dataidx : t++,
            a = e(u[n]),
            p = void 0;
        void 0 !== f.columns ? p = f.columns : (void 0 === (p = c[n]) || 0 == p.length && 0 < a.length) && "object" == typeof a[0] && (p = Array.isArray(a[0]) ? a[0].map(function (e, t) {
          return {
            columnid: t
          };
        }) : Object.keys(a[0]).map(function (e) {
          return {
            columnid: e
          };
        })), p.forEach(function (e, t) {
          void 0 !== f.column && g(e, f.column), void 0 === e.width && (f.column && void 0 !== f.column.width ? e.width = f.column.width : e.width = 120), "number" == typeof e.width && (e.width = e.width), void 0 === e.columnid && (e.columnid = t), void 0 === e.title && (e.title = "" + e.columnid.trim()), f.headers && Array.isArray(f.headers) && (e.title = f.headers[t]);
        }), h += '<Worksheet ss:Name="' + r + '"> \t  \t\t\t<Table ss:ExpandedColumnCount="' + p.length + '" ss:ExpandedRowCount="' + ((f.headers ? 1 : 0) + Math.min(a.length, f.limit || a.length)) + '" x:FullColumns="1" \t   \t\t\tx:FullRows="1" ss:DefaultColumnWidth="65" ss:DefaultRowHeight="15">', p.forEach(function (e, t) {
          h += '<Column ss:Index="' + (t + 1) + '" ss:AutoFitWidth="0" ss:Width="' + e.width + '"/>';
        }), f.headers && (h += '<Row ss:AutoFitHeight="0">', p.forEach(function (e, t) {
          if (h += "<Cell ", void 0 !== e.style) {
            var r = {};
            "function" == typeof e.style ? g(r, e.style(f, e, t)) : g(r, e.style), h += 'ss:StyleID="' + d(r) + '"';
          }

          h += '><Data ss:Type="String">', void 0 !== e.title && ("function" == typeof e.title ? h += e.title(f, e, t) : h += e.title), h += "</Data></Cell>";
        }), h += "</Row>"), a && 0 < a.length && a.forEach(function (u, c) {
          if (!(c > f.limit)) {
            var l = {};

            if (g(l, f.row), f.rows && f.rows[c] && g(l, f.rows[c]), h += "<Row ", void 0 !== l) {
              var e = {};
              void 0 !== l.style && ("function" == typeof l.style ? g(e, l.style(f, u, c)) : g(e, l.style), h += 'ss:StyleID="' + d(e) + '"');
            }

            h += ">", p.forEach(function (e, t) {
              var r = {};
              g(r, f.cell), g(r, l.cell), void 0 !== f.column && g(r, f.column.cell), g(r, e.cell), f.cells && f.cells[c] && f.cells[c][t] && g(r, f.cells[c][t]);
              var n = u[e.columnid];
              "function" == typeof r.value && (n = r.value(n, f, u, e, r, c, t));
              var a = r.typeid;
              "function" == typeof a && (a = a(n, f, u, e, r, c, t)), void 0 === a && ("number" == typeof n ? a = "number" : "string" == typeof n ? a = "string" : "boolean" == typeof n ? a = "boolean" : "object" == typeof n && n instanceof Date && (a = "date"));
              var s = "String";
              "number" == a ? s = "Number" : "date" == a && (s = "Date");
              "money" == a || "number" == a || "date" == a || b.types && b.types[a] && b.types[a].typestyle && b.types[a].typestyle, h += "<Cell ";
              var i = {};
              void 0 !== r.style && ("function" == typeof r.style ? g(i, r.style(n, f, u, e, c, t)) : g(i, r.style), h += 'ss:StyleID="' + d(i) + '"'), h += ">", h += '<Data ss:Type="' + s + '">';
              var o = r.format;
              if (void 0 === n) h += "";else if (void 0 !== o) {
                if ("function" == typeof o) h += o(n);else {
                  if ("string" != typeof o) throw new Error("Unknown format type. Should be function or string");
                  h += n;
                }
              } else h += "number" == a || "date" == a ? n.toString() : "money" == a ? (+n).toFixed(2) : n;
              h += "</Data></Cell>";
            }), h += "</Row>";
          }
        }), h += "</Table></Worksheet>";
      }

      return '<?xml version="1.0"?> \t\t<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" \t\t xmlns:o="urn:schemas-microsoft-com:office:office" \t\t xmlns:x="urn:schemas-microsoft-com:office:excel" \t\t xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" \t\t xmlns:html="http://www.w3.org/TR/REC-html40"> \t\t <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"> \t\t </DocumentProperties> \t\t <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office"> \t\t  <AllowPNG/> \t\t </OfficeDocumentSettings> \t\t <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"> \t\t  <ActiveSheet>0</ActiveSheet> \t\t </ExcelWorkbook> \t\t <Styles> \t\t  <Style ss:ID="Default" ss:Name="Normal"> \t\t   <Alignment ss:Vertical="Bottom"/> \t\t   <Borders/> \t\t   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"/> \t\t   <Interior/> \t\t   <NumberFormat/> \t\t   <Protection/> \t\t  </Style>' + s + (h += "</Workbook>");
    }());
    return n && (a = n(a)), a;
  }, gi.into.XLSX = function (r, n, e, t, a) {
    var s = 1;
    N(t, [{
      columnid: "_"
    }]) && (e = e.map(function (e) {
      return e._;
    }), t = void 0), r = gi.utils.autoExtFilename(r, "xlsx", n);
    var i = C();
    "object" == typeof r && (n = r, r = void 0);
    var g = {
      SheetNames: [],
      Sheets: {}
    };
    return n.sourcefilename ? gi.utils.loadBinaryFile(n.sourcefilename, !!a, function (e) {
      g = i.read(e, {
        type: "binary"
      }), o();
    }) : o(), a && (s = a(s)), s;

    function o() {
      "object" == typeof n && Array.isArray(n) ? e && 0 < e.length && e.forEach(function (e, t) {
        u(n[t], e, void 0, t + 1);
      }) : u(n, e, t, 1), function () {
        var e;
        if (void 0 === r) s = g;else if (e = C(), c.isNode || c.isMeteorServer) e.writeFile(g, r);else {
          var t = e.write(g, {
            bookType: "xlsx",
            bookSST: !1,
            type: "binary"
          });
          if (9 == h()) throw new Error("Cannot save XLSX files in IE9. Please use XLS() export function");
          ae(new Blob([function (e) {
            for (var t = new ArrayBuffer(e.length), r = new Uint8Array(t), n = 0; n != e.length; ++n) r[n] = 255 & e.charCodeAt(n);

            return t;
          }(t)], {
            type: "application/octet-stream"
          }), r);
        }
      }();
    }

    function u(e, n, t, r) {
      var a = {
        sheetid: "Sheet " + r,
        headers: !0
      };
      gi.utils.extend(a, e);
      var s = Object.keys(n).length;
      (!t || 0 == t.length) && 0 < s && (t = Object.keys(n[0]).map(function (e) {
        return {
          columnid: e
        };
      }));
      var i = {};
      i = (-1 < g.SheetNames.indexOf(a.sheetid) || (g.SheetNames.push(a.sheetid), g.Sheets[a.sheetid] = {}), g.Sheets[a.sheetid]);
      var o = "A1";
      a.range && (o = a.range);
      var u = gi.utils.xlscn(o.match(/[A-Z]+/)[0]),
          c = +o.match(/[0-9]+/)[0] - 1;
      if (g.Sheets[a.sheetid]["!ref"]) var l = g.Sheets[a.sheetid]["!ref"],
          h = gi.utils.xlscn(l.match(/[A-Z]+/)[0]),
          d = +l.match(/[0-9]+/)[0] - 1;else h = 1, d = 1;
      var f = Math.max(u + t.length, h),
          p = Math.max(c + s + 2, d),
          b = 1 + c;
      g.Sheets[a.sheetid]["!ref"] = "A1:" + gi.utils.xlsnc(f) + p, a.headers && (t.forEach(function (e, t) {
        i[gi.utils.xlsnc(u + t) + "" + b] = {
          v: e.columnid.trim()
        };
      }), b++);

      for (var E = 0; E < s; E++) t.forEach(function (e, t) {
        var r = {
          v: n[E][e.columnid]
        };
        "number" == typeof n[E][e.columnid] ? r.t = "n" : "string" == typeof n[E][e.columnid] ? r.t = "s" : "boolean" == typeof n[E][e.columnid] ? r.t = "b" : "object" == typeof n[E][e.columnid] && n[E][e.columnid] instanceof Date && (r.t = "d"), i[gi.utils.xlsnc(u + t) + "" + b] = r;
      }), b++;
    }
  }, gi.from.METEOR = function (e, t, r, n, a) {
    var s = e.find(t).fetch();
    return r && (s = r(s, n, a)), s;
  }, gi.from.TABLETOP = function (e, t, r, n, a) {
    var s = [],
        i = {
      headers: !0,
      simpleSheet: !0,
      key: e
    };
    return gi.utils.extend(i, t), i.callback = function (e) {
      s = e, r && (s = r(s, n, a));
    }, Tabletop.init(i), null;
  }, gi.from.HTML = function (e, t, r, n, a) {
    var s = {};
    gi.utils.extend(s, t);
    var i = document.querySelector(e);
    if (!i && "TABLE" !== i.tagName) throw new Error("Selected HTML element is not a TABLE");
    var o = [],
        u = s.headers;

    if (u && !Array.isArray(u)) {
      u = [];

      for (var c = i.querySelector("thead tr").children, l = 0; l < c.length; l++) c.item(l).style && "none" === c.item(l).style.display && s.skipdisplaynone ? u.push(void 0) : u.push(c.item(l).textContent);
    }

    for (var h = i.querySelectorAll("tbody tr"), d = 0; d < h.length; d++) {
      var f = h.item(d).children,
          p = {};

      for (l = 0; l < f.length; l++) f.item(l).style && "none" === f.item(l).style.display && s.skipdisplaynone || (u ? p[u[l]] = f.item(l).textContent : p[l] = f.item(l).textContent);

      o.push(p);
    }

    return r && (o = r(o, n, a)), o;
  }, gi.from.RANGE = function (e, t, r, n, a) {
    for (var s = [], i = e; i <= t; i++) s.push(i);

    return r && (s = r(s, n, a)), s;
  }, gi.from.FILE = function (e, t, r, n, a) {
    var s;
    if ("string" == typeof e) s = e;else {
      if (!(e instanceof Event)) throw new Error("Wrong usage of FILE() function");
      s = e.target.files[0].name;
    }
    var i = s.split("."),
        o = i[i.length - 1].toUpperCase();
    if (gi.from[o]) return gi.from[o](e, t, r, n, a);
    throw new Error("Cannot recognize file type for loading");
  }, gi.from.JSON = function (e, t, r, n, a) {
    var s;
    return e = gi.utils.autoExtFilename(e, "json", t), gi.utils.loadFile(e, !!r, function (e) {
      s = JSON.parse(e), r && (s = r(s, n, a));
    }), s;
  }, gi.from.TXT = function (e, t, n, a, s) {
    var i;
    return e = gi.utils.autoExtFilename(e, "txt", t), gi.utils.loadFile(e, !!n, function (e) {
      "" === (i = e.split(/\r?\n/))[i.length - 1] && i.pop();

      for (var t = 0, r = i.length; t < r; t++) i[t] == +i[t] && (i[t] = +i[t]), i[t] = [i[t]];

      n && (i = n(i, a, s));
    }), i;
  }, gi.from.TAB = gi.from.TSV = function (e, t, r, n, a) {
    return (t = t || {}).separator = "\t", e = gi.utils.autoExtFilename(e, "tab", t), t.autoext = !1, gi.from.CSV(e, t, r, n, a);
  }, gi.from.CSV = function (e, t, b, E, g) {
    var m,
        v = {
      separator: ",",
      quote: '"',
      headers: !0
    };
    gi.utils.extend(v, t);
    var S = [];

    function r(a) {
      var e,
          s,
          i = v.separator.charCodeAt(0),
          o = v.quote.charCodeAt(0),
          u = {},
          c = {},
          t = [],
          l = a.length,
          h = 0,
          r = 0;

      function n() {
        if (l <= h) return c;
        if (s) return s = !1, u;
        var e = h;

        if (a.charCodeAt(e) === o) {
          for (var t = e; t++ < l;) if (a.charCodeAt(t) === o) {
            if (a.charCodeAt(t + 1) !== o) break;
            ++t;
          }

          return h = t + 2, 13 === (r = a.charCodeAt(t + 1)) ? (s = !0, 10 === a.charCodeAt(t + 2) && ++h) : 10 === r && (s = !0), a.substring(e + 1, t).replace(/""/g, '"');
        }

        for (; h < l;) {
          var r,
              n = 1;
          if (10 === (r = a.charCodeAt(h++))) s = !0;else if (13 === r) s = !0, 10 === a.charCodeAt(h) && (++h, ++n);else if (r !== i) continue;
          return a.substring(e, h - n);
        }

        return a.substring(e);
      }

      for (; (e = n()) !== c;) {
        for (var d = []; e !== u && e !== c;) d.push(e.trim()), e = n();

        if (v.headers) {
          if (0 === r) {
            if ("boolean" == typeof v.headers) S = d;else if (Array.isArray(v.headers)) {
              S = v.headers;
              var f = {};
              S.forEach(function (e, t) {
                f[e] = d[t], void 0 !== f[e] && 0 !== f[e].length && f[e].trim() == +f[e] && (f[e] = +f[e]);
              }), t.push(f);
            }
          } else {
            f = {};
            S.forEach(function (e, t) {
              f[e] = d[t], void 0 !== f[e] && 0 !== f[e].length && f[e].trim() == +f[e] && (f[e] = +f[e]);
            }), t.push(f);
          }

          r++;
        } else t.push(d);
      }

      if (m = t, v.headers && g && g.sources && g.sources[E]) {
        var p = g.sources[E].columns = [];
        S.forEach(function (e) {
          p.push({
            columnid: e
          });
        });
      }

      b && (m = b(m, E, g));
    }

    return new RegExp("\n").test(e) ? r(e) : (e = gi.utils.autoExtFilename(e, "csv", t), gi.utils.loadFile(e, !!b, r, g.cb)), m;
  }, gi.from.XLS = function (e, t, r, n, a) {
    return t = t || {}, e = gi.utils.autoExtFilename(e, "xls", t), t.autoExt = !1, z(C(), e, t, r, n, a);
  }, gi.from.XLSX = function (e, t, r, n, a) {
    return t = t || {}, e = gi.utils.autoExtFilename(e, "xlsx", t), t.autoExt = !1, z(C(), e, t, r, n, a);
  }, gi.from.ODS = function (e, t, r, n, a) {
    return t = t || {}, e = gi.utils.autoExtFilename(e, "ods", t), t.autoExt = !1, z(C(), e, t, r, n, a);
  }, gi.from.XML = function (e, t, r, n, a) {
    var s;
    return gi.utils.loadFile(e, !!r, function (e) {
      s = function (r) {
        return r = (r = r.trim()).replace(/<!--[\s\S]*?-->/g, ""), function () {
          return {
            declaration: function () {
              if (!o(/^<\?xml\s*/)) return;
              var e = {
                attributes: {}
              };

              for (; !u() && !c("?>");) {
                var t = i();
                if (!t) return e;
                e.attributes[t.name] = t.value;
              }

              return o(/\?>\s*/), e;
            }(),
            root: function e() {
              var t = o(/^<([\w-:.]+)\s*/);
              if (!t) return;
              var r = {
                name: t[1],
                attributes: {},
                children: []
              };

              for (; !(u() || c(">") || c("?>") || c("/>"));) {
                var n = i();
                if (!n) return r;
                r.attributes[n.name] = n.value;
              }

              if (o(/^\s*\/>\s*/)) return r;
              o(/\??>\s*/);
              r.content = s();
              var a;

              for (; a = e();) r.children.push(a);

              o(/^<\/[\w-:.]+>\s*/);
              return r;
            }()
          };
        }();

        function s() {
          var e = o(/^([^<]*)/);
          return e ? e[1] : "";
        }

        function i() {
          var e = o(/([\w:-]+)\s*=\s*("[^"]*"|'[^']*'|\w+)\s*/);
          if (e) return {
            name: e[1],
            value: function (e) {
              return e.replace(/^['"]|['"]$/g, "");
            }(e[2])
          };
        }

        function o(e) {
          var t = r.match(e);
          if (t) return r = r.slice(t[0].length), t;
        }

        function u() {
          return 0 == r.length;
        }

        function c(e) {
          return 0 == r.indexOf(e);
        }
      }(e).root, r && (s = r(s, n, a));
    }), s;
  }, gi.from.GEXF = function (e, t, r, n, a) {
    var s;
    return gi("SEARCH FROM XML(" + e + ")", [], function (e) {
      s = e, r && (s = r(s));
    }), s;
  }, D.Print = function (e) {
    return D.extend(this, e);
  }, D.Print.prototype.toString = function () {
    var e = "PRINT";
    return this.statement && (e += " " + this.statement.toString()), e;
  }, D.Print.prototype.execute = function (e, r, t) {
    var n = this,
        a = 1;

    if (gi.precompile(this, e, r), this.exprs && 0 < this.exprs.length) {
      var s = this.exprs.map(function (e) {
        var t = new Function("params,alasql,p", "var y;return " + e.toJS("({})", "", null)).bind(n)(r, gi);
        return J(t);
      });
      console.log.apply(console, s);
    } else if (this.select) {
      var i = this.select.execute(e, r);
      console.log(J(i));
    } else console.log();

    return t && (a = t(a)), a;
  }, D.Source = function (e) {
    return D.extend(this, e);
  }, D.Source.prototype.toString = function () {
    var e = "SOURCE";
    return this.url && (e += " '" + this.url + " '"), e;
  }, D.Source.prototype.execute = function (e, t, r) {
    var n;
    return o(this.url, !!r, function (e) {
      return n = gi(e), r && (n = r(n)), n;
    }, function (e) {
      throw e;
    }), n;
  }, D.Require = function (e) {
    return D.extend(this, e);
  }, D.Require.prototype.toString = function () {
    var e = "REQUIRE";
    return this.paths && 0 < this.paths.length && (e += this.paths.map(function (e) {
      return e.toString();
    }).join(",")), this.plugins && 0 < this.plugins.length && (e += this.plugins.map(function (e) {
      return e.toUpperCase();
    }).join(",")), e;
  }, D.Require.prototype.execute = function (e, r, n) {
    var a = this,
        s = 0,
        i = "";
    return this.paths && 0 < this.paths.length ? this.paths.forEach(function (e) {
      o(e.value, !!n, function (e) {
        i += e, ++s < a.paths.length || (new Function("params,alasql", i)(r, gi), n && (s = n(s)));
      });
    }) : this.plugins && 0 < this.plugins.length ? this.plugins.forEach(function (t) {
      gi.plugins[t] || o(gi.path + "/alasql-" + t.toLowerCase() + ".js", !!n, function (e) {
        i += e, ++s < a.plugins.length || (new Function("params,alasql", i)(r, gi), gi.plugins[t] = !0, n && (s = n(s)));
      });
    }) : n && (s = n(s)), s;
  }, D.Assert = function (e) {
    return D.extend(this, e);
  }, D.Source.prototype.toString = function () {
    var e = "ASSERT";
    return this.value && (e += " " + JSON.stringify(this.value)), e;
  }, D.Assert.prototype.execute = function (e) {
    if (!N(gi.res, this.value)) throw new Error((this.message || "Assert wrong") + ": " + JSON.stringify(gi.res) + " == " + JSON.stringify(this.value));
    return 1;
  };

  var Z = gi.engines.WEBSQL = function () {};

  Z.createDatabase = function (e, t, r, n) {
    var a = openDatabase(e, t[0], t[1], t[2]);

    if (this.dbid) {
      var s = gi.createDatabase(this.dbid);
      s.engineid = "WEBSQL", s.wdbid = e, sb.wdb = s;
    }

    if (!a) throw new Error('Cannot create WebSQL database "' + databaseid + '"');
    return n && n(1), 1;
  }, Z.dropDatabase = function (e) {
    throw new Error("This is impossible to drop WebSQL database.");
  }, Z.attachDatabase = function (e, t, r, n, a) {
    if (gi.databases[t]) throw new Error('Unable to attach database as "' + t + '" because it already exists');
    return alasqlopenDatabase(e, r[0], r[1], r[2]), 1;
  };

  var ee = gi.engines.INDEXEDDB = function () {};

  c.hasIndexedDB && ("function" == typeof c.global.indexedDB.webkitGetDatabaseNames ? ee.getDatabaseNames = c.global.indexedDB.webkitGetDatabaseNames.bind(c.global.indexedDB) : (ee.getDatabaseNames = function () {
    var t = {},
        r = {
      contains: function (e) {
        return !0;
      },
      notsupported: !0
    };
    return setTimeout(function () {
      var e = {
        target: {
          result: r
        }
      };
      t.onsuccess(e);
    }, 0), t;
  }, ee.getDatabaseNamesNotSupported = !0)), ee.showDatabases = function (s, i) {
    ee.getDatabaseNames().onsuccess = function (e) {
      var t = e.target.result;
      if (ee.getDatabaseNamesNotSupported) throw new Error("SHOW DATABASE is not supported in this browser");
      var r = [];
      if (s) var n = new RegExp(s.value.replace(/\%/g, ".*"), "g");

      for (var a = 0; a < t.length; a++) s && !t[a].match(n) || r.push({
        databaseid: t[a]
      });

      i(r);
    };
  }, ee.createDatabase = function (t, e, r, n, a) {
    var s = c.global.indexedDB;

    if (r) {
      s.open(t, 1).onsuccess = function (e) {
        e.target.result.close(), a && a(1);
      };
    } else {
      var i = s.open(t, 1);
      i.onupgradeneeded = function (e) {
        e.target.transaction.abort();
      }, i.onsuccess = function (e) {
        if (!r) throw new Error('IndexedDB: Cannot create new database "' + t + '" because it already exists');
        a && a(0);
      };
    }
  }, ee.createDatabase = function (t, e, r, n, a) {
    var s = c.global.indexedDB;
    if (ee.getDatabaseNamesNotSupported) {
      if (r) {
        var i = !0,
            o = s.open(t);
        o.onupgradeneeded = function (e) {
          i = !1;
        }, o.onsuccess = function (e) {
          e.target.result.close(), i ? a && a(0) : a && a(1);
        };
      } else {
        var u;
        (u = s.open(t)).onupgradeneeded = function (e) {
          e.target.transaction.abort();
        }, u.onabort = function (e) {
          a && a(1);
        }, u.onsuccess = function (e) {
          throw e.target.result.close(), new Error('IndexedDB: Cannot create new database "' + t + '" because it already exists');
        };
      }
    } else (u = ee.getDatabaseNames()).onsuccess = function (e) {
      if (e.target.result.contains(t)) {
        if (r) return void (a && a(0));
        throw new Error('IndexedDB: Cannot create new database "' + t + '" because it already exists');
      }

      s.open(t, 1).onsuccess = function (e) {
        e.target.result.close(), a && a(1);
      };
    };
  }, ee.dropDatabase = function (t, r, n) {
    var a = c.global.indexedDB;

    ee.getDatabaseNames().onsuccess = function (e) {
      if (!e.target.result.contains(t)) {
        if (r) return void (n && n(0));
        throw new Error('IndexedDB: Cannot drop new database "' + t + '" because it does not exist');
      }

      a.deleteDatabase(t).onsuccess = function (e) {
        n && n(1);
      };
    };
  }, ee.attachDatabase = function (s, i, e, t, o) {
    if (!c.hasIndexedDB) throw new Error("The current browser does not support IndexedDB");
    var r = c.global.indexedDB;

    ee.getDatabaseNames().onsuccess = function (e) {
      if (!e.target.result.contains(s)) throw new Error('IndexedDB: Cannot attach database "' + s + '" because it does not exist');

      r.open(s).onsuccess = function (e) {
        var t = e.target.result,
            r = new gi.Database(i || s);
        r.engineid = "INDEXEDDB", r.ixdbid = s, r.tables = [];

        for (var n = t.objectStoreNames, a = 0; a < n.length; a++) r.tables[n[a]] = {};

        e.target.result.close(), o && o(1);
      };
    };
  }, ee.createTable = function (n, a, e, s) {
    var i = c.global.indexedDB,
        o = gi.databases[n].ixdbid;

    ee.getDatabaseNames().onsuccess = function (e) {
      if (!e.target.result.contains(o)) throw new Error('IndexedDB: Cannot create table in database "' + o + '" because it does not exist');
      var t = i.open(o);
      t.onversionchange = function (e) {
        e.target.result.close();
      }, t.onsuccess = function (e) {
        var t = e.target.result.version;
        e.target.result.close();
        var r = i.open(o, t + 1);
        r.onupgradeneeded = function (e) {
          e.target.result.createObjectStore(a, {
            autoIncrement: !0
          });
        }, r.onsuccess = function (e) {
          e.target.result.close(), s && s(1);
        }, r.onerror = function (e) {
          throw e;
        }, r.onblocked = function (e) {
          throw new Error('Cannot create table "' + a + '" because database "' + n + '"  is blocked');
        };
      };
    };
  }, ee.dropTable = function (n, a, s, i) {
    var o = c.global.indexedDB,
        u = gi.databases[n].ixdbid;

    ee.getDatabaseNames().onsuccess = function (e) {
      if (!e.target.result.contains(u)) throw new Error('IndexedDB: Cannot drop table in database "' + u + '" because it does not exist');
      var t = o.open(u);
      t.onversionchange = function (e) {
        e.target.result.close();
      }, t.onsuccess = function (e) {
        var t = e.target.result.version;
        e.target.result.close();
        var r = o.open(u, t + 1);
        r.onupgradeneeded = function (e) {
          var t = e.target.result;
          if (t.objectStoreNames.contains(a)) t.deleteObjectStore(a), delete gi.databases[n].tables[a];else if (!s) throw new Error('IndexedDB: Cannot drop table "' + a + '" because it does not exist');
        }, r.onsuccess = function (e) {
          e.target.result.close(), i && i(1);
        }, r.onerror = function (e) {
          throw e;
        }, r.onblocked = function (e) {
          throw new Error('Cannot drop table "' + a + '" because database "' + n + '" is blocked');
        };
      };
    };
  }, ee.intoTable = function (e, i, o, t, u) {
    var r = c.global.indexedDB,
        n = gi.databases[e].ixdbid;

    r.open(n).onsuccess = function (e) {
      for (var t = e.target.result, r = t.transaction([i], "readwrite"), n = r.objectStore(i), a = 0, s = o.length; a < s; a++) n.add(o[a]);

      r.oncomplete = function () {
        t.close(), u && u(s);
      };
    };
  }, ee.fromTable = function (e, a, s, i, o) {
    var t = c.global.indexedDB,
        r = gi.databases[e].ixdbid;

    t.open(r).onsuccess = function (e) {
      var r = [],
          n = e.target.result,
          t = n.transaction([a]).objectStore(a).openCursor();
      t.onblocked = function (e) {}, t.onerror = function (e) {}, t.onsuccess = function (e) {
        var t = e.target.result;
        t ? (r.push(t.value), t.continue()) : (n.close(), s && s(r, i, o));
      };
    };
  }, ee.deleteFromTable = function (e, a, s, i, o) {
    var t = c.global.indexedDB,
        r = gi.databases[e].ixdbid;

    t.open(r).onsuccess = function (e) {
      var r = e.target.result,
          t = r.transaction([a], "readwrite").objectStore(a).openCursor(),
          n = 0;
      t.onblocked = function (e) {}, t.onerror = function (e) {}, t.onsuccess = function (e) {
        var t = e.target.result;
        t ? (s && !s(t.value, i) || (t.delete(), n++), t.continue()) : (r.close(), o && o(n));
      };
    };
  }, ee.updateTable = function (e, r, s, i, o, u) {
    var t = c.global.indexedDB,
        n = gi.databases[e].ixdbid;

    t.open(n).onsuccess = function (e) {
      var n = e.target.result,
          t = n.transaction([r], "readwrite").objectStore(r).openCursor(),
          a = 0;
      t.onblocked = function (e) {}, t.onerror = function (e) {}, t.onsuccess = function (e) {
        var t = e.target.result;

        if (t) {
          if (!i || i(t.value, o)) {
            var r = t.value;
            s(r, o), t.update(r), a++;
          }

          t.continue();
        } else n.close(), u && u(a);
      };
    };
  };

  var te = gi.engines.LOCALSTORAGE = function () {};

  te.get = function (e) {
    var t = localStorage.getItem(e);

    if (void 0 !== t) {
      var r;

      try {
        r = JSON.parse(t);
      } catch (e) {
        throw new Error("Cannot parse JSON object from localStorage" + t);
      }

      return r;
    }
  }, te.set = function (e, t) {
    void 0 === t ? localStorage.removeItem(e) : localStorage.setItem(e, JSON.stringify(t));
  }, te.storeTable = function (e, t) {
    var r = gi.databases[e],
        n = r.tables[t],
        a = {};
    a.columns = n.columns, a.data = n.data, a.identities = n.identities, te.set(r.lsdbid + "." + t, a);
  }, te.restoreTable = function (e, t) {
    var r = gi.databases[e],
        n = te.get(r.lsdbid + "." + t),
        a = new gi.Table();

    for (var s in n) a[s] = n[s];

    return (r.tables[t] = a).indexColumns(), a;
  }, te.removeTable = function (e, t) {
    var r = gi.databases[e];
    localStorage.removeItem(r.lsdbid + "." + t);
  }, te.createDatabase = function (e, t, r, n, a) {
    var s = 1,
        i = te.get("alasql");
    if (r && i && i.databases && i.databases[e]) s = 0;else {
      if ((i = i || {
        databases: {}
      }).databases && i.databases[e]) throw new Error('localStorage: Cannot create new database "' + e + '" because it already exists');
      i.databases[e] = !0, te.set("alasql", i), te.set(e, {
        databaseid: e,
        tables: {}
      });
    }
    return a && (s = a(s)), s;
  }, te.dropDatabase = function (e, t, r) {
    var n = 1,
        a = te.get("alasql");
    if (t && a && a.databases && !a.databases[e]) n = 0;else {
      if (!a) {
        if (t) return r ? r(0) : 0;
        throw new Error("There is no any AlaSQL databases in localStorage");
      }

      if (a.databases && !a.databases[e]) throw new Error('localStorage: Cannot drop database "' + e + '" because there is no such database');
      delete a.databases[e], te.set("alasql", a);
      var s = te.get(e);

      for (var i in s.tables) localStorage.removeItem(e + "." + i);

      localStorage.removeItem(e);
    }
    return r && (n = r(n)), n;
  }, te.attachDatabase = function (e, t, r, n, a) {
    var s = 1;
    if (gi.databases[t]) throw new Error('Unable to attach database as "' + t + '" because it already exists');
    t = t || e;
    var i = new gi.Database(t);
    if (i.engineid = "LOCALSTORAGE", i.lsdbid = e, i.tables = te.get(e).tables, !gi.options.autocommit && i.tables) for (var o in i.tables) te.restoreTable(t, o);
    return a && (s = a(s)), s;
  }, te.showDatabases = function (e, t) {
    var r = [],
        n = te.get("alasql");
    if (e) var a = new RegExp(e.value.replace(/%/g, ".*"), "g");

    if (n && n.databases) {
      for (var s in n.databases) r.push({
        databaseid: s
      });

      e && r && 0 < r.length && (r = r.filter(function (e) {
        return e.databaseid.match(a);
      }));
    }

    return t && (r = t(r)), r;
  }, te.createTable = function (e, t, r, n) {
    var a = 1,
        s = gi.databases[e].lsdbid;
    if (te.get(s + "." + t) && !r) throw new Error('Table "' + t + '" alsready exists in localStorage database "' + s + '"');
    var i = te.get(s);
    gi.databases[e].tables[t];
    return i.tables[t] = !0, te.set(s, i), te.storeTable(e, t), n && (a = n(a)), a;
  }, te.truncateTable = function (e, t, r, n) {
    var a,
        s = 1,
        i = gi.databases[e].lsdbid;
    if (a = gi.options.autocommit ? te.get(i) : gi.databases[e], !r && !a.tables[t]) throw new Error('Cannot truncate table "' + t + '" in localStorage, because it does not exist');
    return te.restoreTable(e, t).data = [], te.storeTable(e, t), n && (s = n(s)), s;
  }, te.dropTable = function (e, t, r, n) {
    var a,
        s = 1,
        i = gi.databases[e].lsdbid;
    if (a = gi.options.autocommit ? te.get(i) : gi.databases[e], !r && !a.tables[t]) throw new Error('Cannot drop table "' + t + '" in localStorage, because it does not exist');
    return delete a.tables[t], te.set(i, a), te.removeTable(e, t), n && (s = n(s)), s;
  }, te.fromTable = function (e, t, r, n, a) {
    gi.databases[e].lsdbid;
    var s = te.restoreTable(e, t).data;
    return r && (s = r(s, n, a)), s;
  }, te.intoTable = function (e, t, r, n, a) {
    gi.databases[e].lsdbid;
    var s = r.length,
        i = te.restoreTable(e, t);

    for (var o in i.identities) {
      var u = i.identities[o];

      for (var c in r) r[c][o] = u.value, u.value += u.step;
    }

    return i.data || (i.data = []), i.data = i.data.concat(r), te.storeTable(e, t), a && (s = a(s)), s;
  }, te.loadTableData = function (e, t) {
    gi.databases[e], gi.databases[e].lsdbid;
    te.restoreTable(e, t);
  }, te.saveTableData = function (e, t) {
    var r = gi.databases[e],
        n = gi.databases[e].lsdbid;
    te.storeTable(n, t), r.tables[t].data = void 0;
  }, te.commit = function (e, t) {
    var r = gi.databases[e],
        n = gi.databases[e].lsdbid,
        a = {
      databaseid: n,
      tables: {}
    };
    if (r.tables) for (var s in r.tables) a.tables[s] = !0, te.storeTable(e, s);
    return te.set(n, a), t ? t(1) : 1;
  }, te.begin = te.commit, te.rollback = function (e, t) {};

  var re = gi.engines.SQLITE = function () {};

  re.createDatabase = function (e, t, r, n, a) {
    throw new Error("Connot create SQLITE database in memory. Attach it.");
  }, re.dropDatabase = function (e) {
    throw new Error("This is impossible to drop SQLite database. Detach it.");
  }, re.attachDatabase = function (r, a, t, e, s) {
    if (gi.databases[a]) throw new Error('Unable to attach database as "' + a + '" because it already exists');

    if (t[0] && t[0] instanceof D.StringValue || t[0] instanceof D.ParamValue) {
      if (t[0] instanceof D.StringValue) var n = t[0].value;else if (t[0] instanceof D.ParamValue) n = e[t[0].param];
      return gi.utils.loadBinaryFile(n, !0, function (e) {
        var n = new gi.Database(a || r);
        n.engineid = "SQLITE", n.sqldbid = r;
        var t = n.sqldb = new SQL.Database(e);
        n.tables = [], t.exec("SELECT * FROM sqlite_master WHERE type='table'")[0].values.forEach(function (e) {
          n.tables[e[1]] = {};
          var t = n.tables[e[1]].columns = [],
              r = gi.parse(e[4]).statements[0].columns;
          r && 0 < r.length && r.forEach(function (e) {
            t.push(e);
          });
        }), s(1);
      }, function (e) {
        throw new Error('Cannot open SQLite database file "' + t[0].value + '"');
      }), 1;
    }

    throw new Error("Cannot attach SQLite database without a file");
  }, re.fromTable = function (e, t, r, n, a) {
    var s = gi.databases[e].sqldb.exec("SELECT * FROM " + t),
        i = a.sources[n].columns = [];
    0 < s[0].columns.length && s[0].columns.forEach(function (e) {
      i.push({
        columnid: e
      });
    });
    var o = [];
    0 < s[0].values.length && s[0].values.forEach(function (r) {
      var n = {};
      i.forEach(function (e, t) {
        n[e.columnid] = r[t];
      }), o.push(n);
    }), r && r(o, n, a);
  }, re.intoTable = function (e, t, r, n, a) {
    for (var s = gi.databases[e].sqldb, i = 0, o = r.length; i < o; i++) {
      var u = "INSERT INTO " + t + " (",
          c = r[i],
          l = Object.keys(c);
      u += l.join(","), u += ") VALUES (", u += l.map(function (e) {
        return v = c[e], "string" == typeof v && (v = "'" + v + "'"), v;
      }).join(","), u += ")", s.exec(u);
    }

    var h = o;
    return a && a(h), h;
  };

  var ne = gi.engines.FILESTORAGE = gi.engines.FILE = function () {};

  if (ne.createDatabase = function (e, t, r, n, a) {
    var s = 1,
        i = t[0].value;
    return gi.utils.fileExists(i, function (e) {
      if (e) {
        if (r) return s = 0, a && (s = a(s)), s;
        throw new Error("Cannot create new database file, because it already exists");
      }

      gi.utils.saveFile(i, JSON.stringify({
        tables: {}
      }), function (e) {
        a && (s = a(s));
      });
    }), s;
  }, ne.dropDatabase = function (e, t, r) {
    var n,
        a = e.value;
    return gi.utils.fileExists(a, function (e) {
      if (e) n = 1, gi.utils.deleteFile(a, function () {
        n = 1, r && (n = r(n));
      });else {
        if (!t) throw new Error("Cannot drop database file, because it does not exist");
        n = 0, r && (n = r(n));
      }
    }), n;
  }, ne.attachDatabase = function (e, t, r, n, a) {
    var s = 1;
    if (gi.databases[t]) throw new Error('Unable to attach database as "' + t + '" because it already exists');
    var i = new gi.Database(t || e);
    return i.engineid = "FILESTORAGE", i.filename = r[0].value, o(i.filename, !!a, function (e) {
      try {
        i.data = JSON.parse(e);
      } catch (e) {
        throw new Error("Data in FileStorage database are corrupted");
      }

      if (i.tables = i.data.tables, !gi.options.autocommit && i.tables) for (var t in i.tables) i.tables[t].data = i.data[t];
      a && (s = a(s));
    }), s;
  }, ne.createTable = function (e, t, r, n) {
    var a = gi.databases[e];
    if (a.data[t] && !r) throw new Error('Table "' + t + '" alsready exists in the database "' + fsdbid + '"');
    var s = gi.databases[e].tables[t];
    return a.data.tables[t] = {
      columns: s.columns
    }, a.data[t] = [], ne.updateFile(e), n && n(1), 1;
  }, ne.updateFile = function (e) {
    var t = gi.databases[e];
    t.issaving ? t.postsave = !0 : (t.issaving = !0, t.postsave = !1, gi.utils.saveFile(t.filename, JSON.stringify(t.data), function () {
      t.issaving = !1, t.postsave && setTimeout(function () {
        ne.updateFile(e);
      }, 50);
    }));
  }, ne.dropTable = function (e, t, r, n) {
    var a = gi.databases[e];
    if (!r && !a.tables[t]) throw new Error('Cannot drop table "' + t + '" in fileStorage, because it does not exist');
    return delete a.tables[t], delete a.data.tables[t], delete a.data[t], ne.updateFile(e), n && n(1), 1;
  }, ne.fromTable = function (e, t, r, n, a) {
    var s = gi.databases[e].data[t];
    return r && (s = r(s, n, a)), s;
  }, ne.intoTable = function (e, t, r, n, a) {
    var s = gi.databases[e],
        i = r.length,
        o = s.data[t];
    return o = o || [], s.data[t] = o.concat(r), ne.updateFile(e), a && a(i), i;
  }, ne.loadTableData = function (e, t) {
    var r = gi.databases[e];
    r.tables[t].data = r.data[t];
  }, ne.saveTableData = function (e, t) {
    var r = gi.databases[e];
    r.data[t] = r.tables[t].data, r.tables[t].data = null, ne.updateFile(e);
  }, ne.commit = function (e, t) {
    var r = gi.databases[e];
    if (r.tables) for (var n in r.tables) r.data.tables[n] = {
      columns: r.tables[n].columns
    }, r.data[n] = r.tables[n].data;
    return ne.updateFile(e), t ? t(1) : 1;
  }, ne.begin = ne.commit, ne.rollback = function (n, a) {
    var s = 1,
        i = gi.databases[n];
    i.dbversion++, function e() {
      setTimeout(function () {
        if (i.issaving) return e();
        gi.loadFile(i.filename, !!a, function (e) {
          for (var t in i.data = e, i.tables = {}, i.data.tables) {
            var r = new gi.Table({
              columns: i.data.tables[t].columns
            });
            g(r, i.data.tables[t]), i.tables[t] = r, gi.options.autocommit || (i.tables[t].data = i.data[t]), i.tables[t].indexColumns();
          }

          delete gi.databases[n], gi.databases[n] = new gi.Database(n), g(gi.databases[n], i), gi.databases[n].engineid = "FILESTORAGE", gi.databases[n].filename = i.filename, a && (s = a(s));
        });
      }, 100);
    }();
  }, c.isBrowser && !c.isWebWorker) {
    if (!(gi = gi || !1)) throw new Error("alasql was not found");
    gi.worker = function () {
      throw new Error("Can find webworker in this enviroment");
    }, "undefined" != typeof Worker && (gi.worker = function (e, t, r) {
      if (!0 === e && (e = void 0), void 0 === e) for (var n = document.getElementsByTagName("script"), a = 0; a < n.length; a++) {
        if ("alasql-worker.js" === n[a].src.substr(-16).toLowerCase()) {
          e = n[a].src.substr(0, n[a].src.length - 16) + "alasql.js";
          break;
        }

        if ("alasql-worker.min.js" === n[a].src.substr(-20).toLowerCase()) {
          e = n[a].src.substr(0, n[a].src.length - 20) + "alasql.min.js";
          break;
        }

        if ("alasql.js" === n[a].src.substr(-9).toLowerCase()) {
          e = n[a].src;
          break;
        }

        if ("alasql.min.js" === n[a].src.substr(-13).toLowerCase()) {
          e = n[a].src.substr(0, n[a].src.length - 13) + "alasql.min.js";
          break;
        }
      }
      if (void 0 === e) throw new Error("Path to alasql.js is not specified");

      if (!1 !== e) {
        var s = "importScripts('";
        s += e, s += "');self.onmessage = function(event) {alasql(event.data.sql,event.data.params, function(data){postMessage({id:event.data.id, data:data});});}";
        var i = new Blob([s], {
          type: "text/plain"
        });

        if (gi.webworker = new Worker(URL.createObjectURL(i)), gi.webworker.onmessage = function (e) {
          var t = e.data.id;
          gi.buffer[t](e.data.data), delete gi.buffer[t];
        }, gi.webworker.onerror = function (e) {
          throw e;
        }, 1 < arguments.length) {
          var o = "REQUIRE " + t.map(function (e) {
            return '"' + e + '"';
          }).join(",");
          gi(o, [], r);
        }
      } else if (!1 === e) return void delete gi.webworker;
    });

    var ae = ae || function (o) {
      if (!(void 0 === o || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var e = o.document,
            u = function () {
          return o.URL || o.webkitURL || o;
        },
            c = e.createElementNS("http://www.w3.org/1999/xhtml", "a"),
            l = "download" in c,
            h = /constructor/i.test(o.HTMLElement) || o.safari,
            d = /CriOS\/[\d]+/.test(navigator.userAgent),
            f = function (e) {
          (o.setImmediate || o.setTimeout)(function () {
            throw e;
          }, 0);
        },
            p = function (e) {
          setTimeout(function () {
            "string" == typeof e ? u().revokeObjectURL(e) : e.remove();
          }, 4e4);
        },
            b = function (e) {
          return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([String.fromCharCode(65279), e], {
            type: e.type
          }) : e;
        },
            n = function (e, t, r) {
          r || (e = b(e));

          function n() {
            !function (e, t, r) {
              for (var n = (t = [].concat(t)).length; n--;) {
                var a = e["on" + t[n]];
                if ("function" == typeof a) try {
                  a.call(e, r || e);
                } catch (e) {
                  f(e);
                }
              }
            }(s, "writestart progress write writeend".split(" "));
          }

          var a,
              s = this,
              i = "application/octet-stream" === e.type;
          if (s.readyState = s.INIT, l) return a = u().createObjectURL(e), void setTimeout(function () {
            c.href = a, c.download = t, function (e) {
              var t = new MouseEvent("click");
              e.dispatchEvent(t);
            }(c), n(), p(a), s.readyState = s.DONE;
          });
          !function () {
            if ((d || i && h) && o.FileReader) {
              var t = new FileReader();
              return t.onloadend = function () {
                var e = d ? t.result : t.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                o.open(e, "_blank") || (o.location.href = e), e = void 0, s.readyState = s.DONE, n();
              }, t.readAsDataURL(e), s.readyState = s.INIT;
            }

            (a = a || u().createObjectURL(e), i) ? o.location.href = a : o.open(a, "_blank") || (o.location.href = a);
            s.readyState = s.DONE, n(), p(a);
          }();
        },
            t = n.prototype;

        return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function (e, t, r) {
          return t = t || e.name || "download", r || (e = b(e)), navigator.msSaveOrOpenBlob(e, t);
        } : (t.abort = function () {}, t.readyState = t.INIT = 0, t.WRITING = 1, t.DONE = 2, t.error = t.onwritestart = t.onprogress = t.onwrite = t.onabort = t.onerror = t.onwriteend = null, function (e, t, r) {
          return new n(e, t || e.name || "download", r);
        });
      }
    }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);

    "undefined" != typeof module && module.exports ? module.exports.saveAs = ae : "undefined" != typeof define && null !== define && null !== define.amd && define("FileSaver.js", function () {
      return ae;
    }), (c.isCordova || c.isMeteorServer || c.isNode) && console.warn("It looks like you are using the browser version of AlaSQL. Please use the alasql.fs.js file instead."), gi.utils.saveAs = ae;
  }

  return new s("alasql"), gi.use("alasql"), gi;
});
},{"process":"g5I+"}],"E/Os":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.customScaledProjection = customScaledProjection;
exports.makeQueryFunc = makeQueryFunc;
exports.normalize = normalize;
exports.toID = toID;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var d3 = _interopRequireWildcard(require("d3"));

var _alasql = _interopRequireDefault(require("alasql"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function customScaledProjection(xMult, yMult, rawProjection) {
  return d3.geoProjection(function () {
    var _rawProjection = rawProjection.apply(void 0, arguments),
        _rawProjection2 = (0, _slicedToArray2.default)(_rawProjection, 2),
        x = _rawProjection2[0],
        y = _rawProjection2[1];

    return [x * xMult, y * yMult];
  });
}

function makeQueryFunc(obj) {
  return function (query) {
    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      params[_key - 1] = arguments[_key];
    }

    return (0, _alasql.default)(query, [obj].concat(params));
  };
}

function normalize(value, min, max, lower, upper) {
  return (value - min) / (max - min) * (upper - lower) + lower;
}

function toID(prefix, s) {
  var use_hash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return "".concat(use_hash ? '#' : '').concat(prefix, "-").concat(s.replace(/\s/, '-').toLowerCase());
}
},{"@babel/runtime/helpers/slicedToArray":"xw6J","d3":"BG5c","alasql":"n6wC"}],"Fjy7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.countLocation = countLocation;
exports.countLocationNormalized = countLocationNormalized;
exports.clearMousedOvers = clearMousedOvers;

var _utils = require("./utils.js");

var LOCATION_STORAGE = {};
var MAX_LOCATION = -1;

function countLocation(loc, query) {
  if (!(loc in LOCATION_STORAGE)) {
    LOCATION_STORAGE[loc] = query('SELECT COUNT(*) as n FROM $0 WHERE location = $1', loc)[0]['n'];
  }

  return LOCATION_STORAGE[loc];
}

function countLocationNormalized(loc, query, lower, upper) {
  if (MAX_LOCATION < 0) {
    MAX_LOCATION = query('SELECT COUNT(location) as n FROM $0 GROUP BY location ORDER BY n DESC LIMIT 1')[0]['n'];
  }

  return Math.ceil((0, _utils.normalize)(countLocation(loc, query), 1, MAX_LOCATION, lower, upper));
}

function clearMousedOvers(set) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el = _step.value;
      el.dispatch('mouseout');
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  set.clear();
}
},{"./utils.js":"E/Os"}],"4p1Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var oneOff = _interopRequireWildcard(require("../scripts/oneOffHelpers.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'Pin',
  props: {
    coords: Array,
    place: Object,
    parentClicked: Boolean,
    multiplier: {
      type: Number,
      default: 1.5
    },
    MIN_RAD: {
      type: Number,
      default: 4
    },
    MAX_RAD: {
      type: Number,
      default: 10
    }
  },
  data: function data() {
    return {
      defaultRadius: oneOff.countLocationNormalized(this.place.name, this.$root.respondentQuery, this.MIN_RAD, this.MAX_RAD),
      hover: false,
      clicked: false
    };
  },
  computed: {
    radius: function radius() {
      if (this.hover) {
        return this.defaultRadius * this.multiplier;
      }

      return this.defaultRadius;
    }
  },
  watch: {
    parentClicked: function parentClicked(val) {
      if (val) {
        this.clicked = false;
      }
    }
  },
  methods: {
    click: function click() {
      if (this.parentClicked) {
        return;
      }

      this.clicked = !this.clicked;

      if (this.clicked) {// TODO: emit stuff
      }
    }
  }
};
exports.default = _default;
        var $a71f5c = exports.default || module.exports;
      
      if (typeof $a71f5c === 'function') {
        $a71f5c = $a71f5c.options;
      }
    
        /* template */
        Object.assign($a71f5c, (function () {
          var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('circle',{class:{parentClicked: _vm.parentClicked, clicked: _vm.clicked && !_vm.parentClicked, pin: true},attrs:{"cx":_vm.coords[0],"cy":_vm.coords[1],"r":_vm.radius},on:{"click":_vm.click,"mouseover":function($event){_vm.hover = true},"mouseout":function($event){_vm.hover = false}}})}
var staticRenderFns = []

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-a71f5c",
            functional: undefined
          };
        })());
      
},{"../scripts/oneOffHelpers.js":"Fjy7"}],"9R3g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pin = _interopRequireDefault(require("./pin.vue"));

var _d = require("d3");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'Pins',
  components: {
    Pin: _pin.default
  },
  props: {
    locations: Array,
    projection: _d.GeoProjection,
    clicked: Boolean
  },
  data: function data() {
    var _this = this;

    var arr = [];
    Object.values(this.locations || {}).forEach(function (place) {
      return arr.push({
        coords: _this.projection(place.location),
        place: place
      });
    });
    return {
      pins: arr
    };
  }
};
exports.default = _default;
        var $fbe4c4 = exports.default || module.exports;
      
      if (typeof $fbe4c4 === 'function') {
        $fbe4c4 = $fbe4c4.options;
      }
    
        /* template */
        Object.assign($fbe4c4, (function () {
          var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('g',_vm._l((_vm.pins),function(p){return _c('pin',{key:p.place.name,attrs:{"coords":p.coords,"place":p.place,"parent-clicked":_vm.clicked}})}),1)}
var staticRenderFns = []

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: null,
            functional: undefined
          };
        })());
      
},{"./pin.vue":"4p1Q","d3":"BG5c"}],"9rak":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d = require("d3");

var _pins = _interopRequireDefault(require("./pins.vue"));

var utils = _interopRequireWildcard(require("../scripts/utils.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'Region',
  components: {
    Pins: _pins.default
  },
  props: {
    d: _d.GeoPath,
    district: String,
    projection: _d.GeoProjection
  },
  data: function data() {
    return {
      id: utils.toID('path', this.district),
      hover: false,
      clicked: false
    };
  },
  methods: {
    click: function click() {
      this.clicked = !this.clicked;

      if (this.clicked) {// TODO: emit stuff
      }
    }
  }
};
exports.default = _default;
        var $81196e = exports.default || module.exports;
      
      if (typeof $81196e === 'function') {
        $81196e = $81196e.options;
      }
    
        /* template */
        Object.assign($81196e, (function () {
          var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.district !== undefined)?_c('g',{on:{"mouseover":function($event){_vm.hover = true},"mouseout":function($event){_vm.hover = false}}},[_c('path',{class:{hover: _vm.hover, clicked: _vm.clicked, region: true},attrs:{"id":_vm.id,"d":_vm.d},on:{"click":_vm.click}}),_vm._v(" "),_c('pins',{attrs:{"locations":_vm.$root.locationsByDistrict['$' + _vm.district],"projection":_vm.projection,"clicked":_vm.clicked}})],1):_vm._e()}
var staticRenderFns = []

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-81196e",
            functional: undefined
          };
        })());
      
},{"d3":"BG5c","./pins.vue":"9R3g","../scripts/utils.js":"E/Os"}],"e4Hw":[function(require,module,exports) {
module.exports = "lb_2009_administrative_districts.28577fb1.geojson";
},{}],"wlok":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _dummyRegion = _interopRequireDefault(require("./components/dummy-region.vue"));

var _region = _interopRequireDefault(require("./components/region.vue"));

var d3 = _interopRequireWildcard(require("d3"));

var utils = _interopRequireWildcard(require("./scripts/utils.js"));

var _lb_2009_administrative_districts = _interopRequireDefault(require("./data/map/lb_2009_administrative_districts.geojson"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  name: 'App',
  components: {
    DummyRegion: _dummyRegion.default,
    Region: _region.default
  },
  props: {
    defaultWidth: {
      type: Number,
      default: 600
    },
    defaultHeight: {
      type: Number,
      default: 600
    }
  },
  data: function data() {
    return {
      mapJSON: {
        features: []
      },
      regionPaths: []
    };
  },
  computed: {
    width: function width() {
      return this.defaultWidth;
    },
    height: function height() {
      return this.defaultHeight;
    },
    projection: function projection() {
      if (!this.mapJSON.features.length) {
        return d3.geoMercator();
      }

      return utils.customScaledProjection(1.1, 1, d3.geoMercatorRaw).fitSize([this.width, this.height], this.mapJSON);
    },
    path: function path() {
      return d3.geoPath(this.projection);
    }
  },
  mounted: function () {
    var _mounted = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee() {
      var _this = this;

      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return d3.json(_lb_2009_administrative_districts.default);

            case 2:
              this.mapJSON = _context.sent;
              this.mapJSON.features.forEach(function (o) {
                return _this.regionPaths.push({
                  d: _this.path(o),
                  district: o.properties.DISTRICT,
                  _o: o
                });
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function mounted() {
      return _mounted.apply(this, arguments);
    }

    return mounted;
  }()
};
exports.default = _default;
        var $4e3a0b = exports.default || module.exports;
      
      if (typeof $4e3a0b === 'function') {
        $4e3a0b = $4e3a0b.options;
      }
    
        /* template */
        Object.assign($4e3a0b, (function () {
          var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.regionPaths.length)?_c('svg',{attrs:{"width":"600","height":"600"}},[_c('g',_vm._l((_vm.regionPaths),function(p){return _c('dummy-region',{key:p._o.ID_2,attrs:{"d":p.d}})}),1),_vm._v(" "),_c('g',_vm._l((_vm.regionPaths),function(p,index){return _c('region',{key:p.district + index,attrs:{"district":p.district,"d":p.d,"projection":_vm.projection}})}),1)]):_vm._e()}
var staticRenderFns = []

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-4e3a0b",
            functional: undefined
          };
        })());
      
},{"@babel/runtime/regenerator":"8m4e","@babel/runtime/helpers/asyncToGenerator":"2fws","./components/dummy-region.vue":"IKrb","./components/region.vue":"9rak","d3":"BG5c","./scripts/utils.js":"E/Os","./data/map/lb_2009_administrative_districts.geojson":"e4Hw"}],"y5NW":[function(require,module,exports) {
module.exports={url: "respondents.7d2067cc.json", data: [
    {
        "timeCompleted": "2019/08/13 5:15:44 AM MDT",
        "number": 0,
        "location": "Khalwat",
        "3a": "Yes, Dubai",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [-1],
            "1.0": [1],
            "1.1": [0],
            "1.2": [1],
            "1.3": [0],
            "2.0": [0],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [0],
            "4.1": [1],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [1],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [0],
            "19.1": [0],
            "19.2": [0],
            "19.3": [0],
            "20": [3],
            "21": [3],
            "22": [0],
            "23": [
                0,
                1,
                4
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3,
                4
            ],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [0],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {
            "0.3": [null]
        }
    },
    {
        "timeCompleted": "2019/08/13 5:27:37 AM MDT",
        "number": 1,
        "location": "Halba",
        "3a": "No",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [0],
            "3.5": [4],
            "3.6": [2],
            "3.7": [4],
            "4.0": [1],
            "4.1": [2],
            "4.2": [2],
            "4.3": [1],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [3],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [0],
            "9.4": [2],
            "9.5": [2],
            "10.0": [0],
            "10.1": [0],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [0],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [0],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [4],
            "22": [1],
            "23": [4],
            "24": [2],
            "25": [3],
            "26": [2],
            "27": [
                1,
                2
            ],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [1],
            "32.0": [0],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                1,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [0],
            "35": [
                0,
                3
            ],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [1],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:43:20 AM MDT",
        "number": 2,
        "location": "Marjaayoun",
        "3a": "\u0628\u064a\u0631\u0648\u062a",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [2],
            "7": [3],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [0],
            "23": [4],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [0],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [-1],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {
            "34.1": [null]
        }
    },
    {
        "timeCompleted": "2019/08/13 5:47:35 AM MDT",
        "number": 3,
        "location": "Kfarshima",
        "3a": "Qatar",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [1],
            "3.0": [
                0,
                3
            ],
            "3.1": [1],
            "3.2": [2],
            "3.3": [3],
            "3.4": [1],
            "3.5": [3],
            "3.6": [1],
            "3.7": [4],
            "4.0": [0],
            "4.1": [2],
            "4.2": [2],
            "4.3": [2],
            "4.4": [2],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [2],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [0],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [
                0,
                1
            ],
            "19.2": [0],
            "19.3": [0],
            "20": [1],
            "21": [4],
            "22": [0],
            "23": [
                0,
                1,
                -1
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [
                1,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [
                1,
                3
            ],
            "33": [
                0,
                1
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                2,
                3,
                4
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                1,
                4
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {
            "23": ["Other: \u0644"]
        }
    },
    {
        "timeCompleted": "2019/08/13 5:48:11 AM MDT",
        "number": 4,
        "location": "Zahle",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [2],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [0],
            "23": [1],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [1],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:48:14 AM MDT",
        "number": 5,
        "location": "Qoubaiyat",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [-1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [4],
            "3.2": [4],
            "3.3": [
                2,
                3,
                4
            ],
            "3.4": [0],
            "3.5": [4],
            "3.6": [
                2,
                3,
                4
            ],
            "3.7": [0],
            "4.0": [1],
            "4.1": [
                0,
                1
            ],
            "4.2": [
                0,
                1
            ],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [1],
            "4.6": [
                0,
                1
            ],
            "5": [2],
            "6.0": [
                1,
                2
            ],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [
                0,
                1
            ],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [
                1,
                3
            ],
            "16.1": [1],
            "16.2": [3],
            "16.3": [1],
            "16.4": [3],
            "16.5": [1],
            "16.6": [
                1,
                3
            ],
            "16.7": [1],
            "17.0": [
                0,
                2,
                1
            ],
            "17.1": [
                0,
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                0,
                1,
                3,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                2,
                3
            ],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                3,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                -1
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [
                1,
                5
            ]
        },
        "otherAnswers": {
            "0.3": [null],
            "35": ["Other: Ech bek (may be offensive/mashkal or casual if you're talking to a friend)"]
        }
    },
    {
        "timeCompleted": "2019/08/13 6:04:45 AM MDT",
        "number": 6,
        "location": "Kfour El Arabi",
        "3a": "Batroun city",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [1],
            "3.5": [2],
            "3.6": [2],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [
                0,
                1
            ],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                0,
                1,
                2,
                3
            ],
            "10.1": [
                0,
                1,
                2,
                3
            ],
            "10.2": [
                0,
                1,
                2,
                3
            ],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [1],
            "22": [1],
            "23": [
                0,
                4
            ],
            "24": [0],
            "25": [
                2,
                3
            ],
            "26": [2],
            "27": [1],
            "28": [
                0,
                1
            ],
            "29": [
                0,
                2
            ],
            "30": [
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                3
            ],
            "36": [
                2,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:28:30 AM MDT",
        "number": 7,
        "location": "Tannourine",
        "3a": "Mashgharah",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [1],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                3
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [0],
            "15.2": [0],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [1],
            "25": [2],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:30:09 AM MDT",
        "number": 8,
        "location": "Beirut",
        "3a": "nope",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                2,
                3
            ],
            "3.2": [
                2,
                3
            ],
            "3.3": [
                2,
                3
            ],
            "3.4": [
                2,
                3
            ],
            "3.5": [
                2,
                3
            ],
            "3.6": [
                2,
                3
            ],
            "3.7": [0],
            "4.0": [1],
            "4.1": [1],
            "4.2": [2],
            "4.3": [1],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                1,
                2
            ],
            "24": [
                0,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [1],
            "35": [1],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [
                4,
                5
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:32:31 AM MDT",
        "number": 9,
        "location": "Ebba",
        "3a": "Beirut & America",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [
                0,
                1
            ],
            "3.3": [
                0,
                2
            ],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [
                0,
                3
            ],
            "4.0": [
                0,
                1
            ],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [0],
            "9.2": [1],
            "9.3": [2],
            "9.4": [1],
            "9.5": [1],
            "10.0": [
                1,
                2,
                3
            ],
            "10.1": [1],
            "10.2": [
                0,
                1
            ],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [
                0,
                1
            ],
            "14.1": [
                0,
                1
            ],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [2],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [1],
            "18": [1],
            "19.0": [0],
            "19.1": [0],
            "19.2": [
                0,
                1
            ],
            "19.3": [0],
            "20": [3],
            "21": [4],
            "22": [0],
            "23": [
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                0,
                1
            ],
            "26": [
                0,
                1
            ],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                3
            ],
            "30": [
                0,
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                3
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [
                1,
                3
            ],
            "32.4": [0],
            "32.5": [
                1,
                3
            ],
            "32.6": [0],
            "32.7": [
                1,
                3
            ],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [
                0,
                1
            ],
            "35": [
                2,
                3
            ],
            "36": [1],
            "37": [
                0,
                1,
                2
            ],
            "38": [
                0,
                2
            ],
            "39": [1],
            "40": [3],
            "41": [
                0,
                2
            ],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:43:01 AM MDT",
        "number": 10,
        "location": "Nabatieh",
        "3a": "Dearborn",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [1],
            "1.3": [0],
            "2.0": [0],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [2],
            "3.5": [4],
            "3.6": [3],
            "3.7": [1],
            "4.0": [1],
            "4.1": [1],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [
                0,
                1
            ],
            "9.0": [0],
            "9.1": [0],
            "9.2": [2],
            "9.3": [2],
            "9.4": [1],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [1],
            "10.3": [0],
            "11": [
                0,
                1,
                2,
                3
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [0],
            "19.2": [0],
            "19.3": [0],
            "20": [4],
            "21": [5],
            "22": [0],
            "23": [3],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                0,
                1
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                2,
                3
            ],
            "30": [
                0,
                1,
                2
            ],
            "31": [2],
            "32.0": [1],
            "32.1": [0],
            "32.2": [
                1,
                2
            ],
            "32.3": [0],
            "32.4": [2],
            "32.5": [2],
            "32.6": [0],
            "32.7": [2],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                0,
                3
            ],
            "36": [0],
            "37": [1],
            "38": [2],
            "39": [1],
            "40": [0],
            "41": [0],
            "42": [1],
            "43": [
                2,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:46:49 AM MDT",
        "number": 11,
        "location": "Aalay",
        "3a": "UK, Beirut (Self taught Arabic at the age of 15 as my parents didn\u2019t speak Arabic at home, effectively modelled on my family\u2019s Aley/Beiruti accent)",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [
                0,
                1
            ],
            "1.1": [
                0,
                1
            ],
            "1.2": [1],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [
                0,
                1,
                2,
                3
            ],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [
                0,
                2
            ],
            "4.1": [0],
            "4.2": [
                0,
                2
            ],
            "4.3": [0],
            "4.4": [0],
            "4.5": [
                0,
                2
            ],
            "4.6": [0],
            "5": [3],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [1],
            "8": [
                0,
                1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [1],
            "9.4": [2],
            "9.5": [1],
            "10.0": [
                0,
                1
            ],
            "10.1": [
                0,
                1
            ],
            "10.2": [
                0,
                1
            ],
            "10.3": [
                0,
                1
            ],
            "11": [
                0,
                1
            ],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [
                0,
                1
            ],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [
                2,
                3,
                5
            ],
            "22": [
                1,
                0
            ],
            "23": [1],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [
                1,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [
                0,
                2,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:47:32 AM MDT",
        "number": 12,
        "location": "Beirut",
        "3a": "Saudi Arabia",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [
                0,
                3
            ],
            "3.3": [3],
            "3.4": [1],
            "3.5": [3],
            "3.6": [
                0,
                3
            ],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [1],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [0],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [
                0,
                2,
                5
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                3
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                4
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [4],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [
                0,
                1
            ],
            "34.0": [0],
            "34.1": [1],
            "35": [
                1,
                2
            ],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [
                1,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:48:01 AM MDT",
        "number": 13,
        "location": "Qana",
        "3a": "Beirut ",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [
                0,
                1
            ],
            "3.0": [0],
            "3.1": [3],
            "3.2": [0],
            "3.3": [0],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [
                0,
                1
            ],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [
                0,
                1
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [0],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                2
            ],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                1,
                3
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [
                1,
                2
            ],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [5],
            "22": [
                1,
                0
            ],
            "23": [
                1,
                2,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [2],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                1
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [0],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [
                0,
                1
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:56:27 AM MDT",
        "number": 14,
        "location": "Tripoli",
        "3a": "Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [
                0,
                1
            ],
            "1.1": [
                0,
                1
            ],
            "1.2": [
                0,
                1
            ],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [1],
            "3.3": [3],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [1],
            "4.0": [2],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [3],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [0],
            "16.1": [0],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [
                0,
                2,
                1
            ],
            "17.1": [
                0,
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [1],
            "22": [
                1,
                0
            ],
            "23": [
                4,
                -1
            ],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [2],
            "32.6": [2],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [1],
            "35": [
                1,
                2
            ],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "23": ["Other: Ta"]
        }
    },
    {
        "timeCompleted": "2019/08/13 7:21:12 AM MDT",
        "number": 15,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [1],
            "4.4": [1],
            "4.5": [2],
            "4.6": [1],
            "5": [0],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                0,
                1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [3],
            "10.3": [3],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [0],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [0],
            "23": [0],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [-1],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [3],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "34.1": [null]
        }
    },
    {
        "timeCompleted": "2019/08/13 7:22:55 AM MDT",
        "number": 16,
        "location": "Btekhnay",
        "3a": "Ashrafieh, California, Germany ",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [0],
            "3.2": [0],
            "3.3": [1],
            "3.4": [0],
            "3.5": [3],
            "3.6": [2],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [0],
            "6.1": [1],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [0],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [3],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [0],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [
                1,
                2,
                3,
                4
            ],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [2]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 7:39:38 AM MDT",
        "number": 17,
        "location": "Sidon",
        "3a": "Zambia, san francisco",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [
                0,
                1
            ],
            "1.1": [0],
            "1.2": [0],
            "1.3": [1],
            "2.0": [1],
            "2.1": [0],
            "3.0": [1],
            "3.1": [0],
            "3.2": [1],
            "3.3": [0],
            "3.4": [1],
            "3.5": [0],
            "3.6": [1],
            "3.7": [0],
            "4.0": [0],
            "4.1": [1],
            "4.2": [2],
            "4.3": [1],
            "4.4": [2],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [0],
            "6.1": [2],
            "6.2": [1],
            "7": [2],
            "8": [1],
            "9.0": [0],
            "9.1": [0],
            "9.2": [0],
            "9.3": [0],
            "9.4": [0],
            "9.5": [0],
            "10.0": [0],
            "10.1": [0],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [1],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [2],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                0,
                2
            ],
            "17.1": [
                0,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [0],
            "22": [1],
            "23": [1],
            "24": [2],
            "25": [3],
            "26": [0],
            "27": [0],
            "28": [1],
            "29": [1],
            "30": [0],
            "31": [0],
            "32.0": [2],
            "32.1": [2],
            "32.2": [2],
            "32.3": [2],
            "32.4": [2],
            "32.5": [1],
            "32.6": [2],
            "32.7": [2],
            "33": [0],
            "34.0": [0],
            "34.1": [1],
            "35": [0],
            "36": [1],
            "37": [0],
            "38": [0],
            "39": [1],
            "40": [0],
            "41": [1],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 7:40:55 AM MDT",
        "number": 18,
        "location": "Tyre",
        "3a": "Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [1],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [
                1,
                2
            ],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [
                1,
                2
            ],
            "7": [0],
            "8": [
                0,
                1
            ],
            "9.0": [0],
            "9.1": [0],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [
                1,
                3
            ],
            "10.2": [
                0,
                1
            ],
            "10.3": [0],
            "11": [
                0,
                1
            ],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                3
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 7:45:31 AM MDT",
        "number": 19,
        "location": "Koura",
        "3a": "Akkar",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [2],
            "3.5": [4],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [3],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [1],
            "22": [1],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [1],
            "35": [
                0,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 7:52:50 AM MDT",
        "number": 20,
        "location": "Kherbet Qanafar",
        "3a": "USA",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [0],
            "3.3": [0],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [0],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                3
            ],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [
                3,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [1],
            "24": [0],
            "25": [
                0,
                1
            ],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                2,
                3
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [
                1,
                2,
                3
            ],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [6]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 8:00:58 AM MDT",
        "number": 21,
        "location": "Beirut",
        "3a": "United States of America",
        "answers": {
            "0.0": [0],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [
                0,
                1
            ],
            "1.1": [
                0,
                1
            ],
            "1.2": [
                0,
                1
            ],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [1],
            "3.3": [3],
            "3.4": [4],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [2],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [2],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                3
            ],
            "12": [3],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [2],
            "22": [0],
            "23": [1],
            "24": [2],
            "25": [1],
            "26": [
                2,
                3
            ],
            "27": [1],
            "28": [0],
            "29": [
                0,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                1,
                2,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [
                1,
                2,
                3
            ],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [1],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                1,
                2
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [0],
            "41": [0],
            "42": [0],
            "43": [
                1,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 8:07:12 AM MDT",
        "number": 22,
        "location": "Miziara",
        "3a": "Nigeria, made my accent much less Northern since I didn't grow up with them",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [3],
            "3.3": [3],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [2],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [3],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [
                0,
                1
            ],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                0,
                2
            ],
            "17.1": [
                0,
                2
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                0,
                1,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3,
                -1
            ],
            "36": [
                2,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [7]
        },
        "otherAnswers": {
            "35": ["Other: Shou sayerlak"]
        }
    },
    {
        "timeCompleted": "2019/08/13 8:37:50 AM MDT",
        "number": 23,
        "location": "Baskinta",
        "3a": "\u0628\u064a\u0631\u0648\u062a",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [1],
            "3.3": [1],
            "3.4": [0],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [2],
            "4.1": [2],
            "4.2": [2],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [2],
            "10.1": [2],
            "10.2": [2],
            "10.3": [0],
            "11": [3],
            "12": [2],
            "13": [2],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [0],
            "22": [1],
            "23": [
                0,
                1
            ],
            "24": [1],
            "25": [
                2,
                3
            ],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [2],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [1],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [
                1,
                2
            ],
            "41": [1],
            "42": [0],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 8:46:14 AM MDT",
        "number": 24,
        "location": "Batroun",
        "3a": "Tripoli",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [
                0,
                1
            ],
            "1.2": [0],
            "1.3": [0],
            "2.0": [
                0,
                1
            ],
            "2.1": [1],
            "3.0": [0],
            "3.1": [3],
            "3.2": [3],
            "3.3": [3],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [
                0,
                1
            ],
            "4.3": [1],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [
                0,
                1
            ],
            "6.2": [
                0,
                1
            ],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [1],
            "9.4": [2],
            "9.5": [1],
            "10.0": [
                1,
                3
            ],
            "10.1": [
                1,
                3
            ],
            "10.2": [
                1,
                3
            ],
            "10.3": [
                1,
                3
            ],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [
                0,
                1
            ],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                0,
                3
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1
            ],
            "25": [3],
            "26": [2],
            "27": [
                0,
                1,
                2
            ],
            "28": [0],
            "29": [
                0,
                2,
                4
            ],
            "30": [
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [
                2,
                3
            ],
            "33": [1],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                2
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 8:50:36 AM MDT",
        "number": 25,
        "location": "Ain Kfar Zabad",
        "3a": "The US - have lived here since I was 12 but I visit often",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [3],
            "3.2": [
                0,
                1
            ],
            "3.3": [
                0,
                2
            ],
            "3.4": [1],
            "3.5": [4],
            "3.6": [4],
            "3.7": [4],
            "4.0": [
                0,
                1
            ],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [
                1,
                2
            ],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                1
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [
                3,
                4
            ],
            "22": [0],
            "23": [
                0,
                1
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [0],
            "34.1": [
                0,
                1
            ],
            "35": [1],
            "36": [1],
            "37": [
                0,
                1
            ],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 8:51:11 AM MDT",
        "number": 26,
        "location": "Hrajel",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [1],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [1],
            "10.3": [1],
            "11": [2],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [0],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [0],
            "17.1": [0],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [0],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [2],
            "30": [
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [-1],
            "36": [1],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [7]
        },
        "otherAnswers": {
            "35": ["Other: \u0623\u064a\u0634 \u0628\u0627\u0643"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:01:06 AM MDT",
        "number": 27,
        "location": "Beirut",
        "3a": "Went to american school",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [
                0,
                1
            ],
            "1.1": [
                0,
                1
            ],
            "1.2": [0],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [1],
            "3.4": [2],
            "3.5": [
                2,
                3
            ],
            "3.6": [
                2,
                3
            ],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [
                0,
                1
            ],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [
                0,
                1
            ],
            "19.3": [
                0,
                1
            ],
            "20": [
                2,
                5
            ],
            "21": [
                2,
                5
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                4,
                -1
            ],
            "24": [
                0,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [
                1,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                2,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {
            "23": ["Other: La"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:01:14 AM MDT",
        "number": 28,
        "location": "Tripoli",
        "3a": "Jib Janine and the US",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [0],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [3],
            "3.4": [1],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                0,
                1
            ],
            "9.0": [2],
            "9.1": [1],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [1],
            "10.0": [1],
            "10.1": [0],
            "10.2": [1],
            "10.3": [3],
            "11": [
                0,
                1
            ],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [0],
            "17.1": [0],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [
                2,
                5
            ],
            "22": [0],
            "23": [
                1,
                4,
                3,
                -1
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [
                2,
                3
            ],
            "27": [
                0,
                1
            ],
            "28": [1],
            "29": [
                0,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [0],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [1],
            "35": [
                1,
                2
            ],
            "36": [1],
            "37": [
                0,
                3
            ],
            "38": [
                0,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "23": ["Other: La"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:02:08 AM MDT",
        "number": 29,
        "location": "Bednayel",
        "3a": "Beirut",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [0],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [2],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [1],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [2],
            "8": [0],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [5],
            "22": [0],
            "23": [
                1,
                3
            ],
            "24": [0],
            "25": [0],
            "26": [2],
            "27": [1],
            "28": [1],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [1],
            "32.1": [0],
            "32.2": [1],
            "32.3": [1],
            "32.4": [0],
            "32.5": [2],
            "32.6": [2],
            "32.7": [2],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [1],
            "36": [1],
            "37": [0],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [
                2,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 9:25:46 AM MDT",
        "number": 30,
        "location": "Beirut",
        "3a": "Zouk Mosbeh, Ballouneh, Hadat",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                2,
                3
            ],
            "3.2": [0],
            "3.3": [0],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [1],
            "4.6": [1],
            "5": [3],
            "6.0": [2],
            "6.1": [0],
            "6.2": [1],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [1],
            "23": [
                0,
                1
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                3
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:43:04 AM MDT",
        "number": 31,
        "location": "Beirut",
        "3a": "Born in montreal, brought up around francophones, had many west beiruti friends",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                2,
                3
            ],
            "3.2": [
                1,
                3
            ],
            "3.3": [
                0,
                1
            ],
            "3.4": [0],
            "3.5": [4],
            "3.6": [4],
            "3.7": [0],
            "4.0": [
                1,
                2
            ],
            "4.1": [
                0,
                1
            ],
            "4.2": [
                0,
                1
            ],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [
                0,
                1
            ],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                1,
                3,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                -1
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                3,
                4
            ],
            "32.5": [
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                2,
                3
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: \u0634\u0627\u0631\u064a\u064a\u0646 chery\u00een"],
            "23": ["Other: La/ta"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:45:04 AM MDT",
        "number": 32,
        "location": "Biyada",
        "3a": "Paris",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                2,
                3,
                4
            ],
            "3.2": [0],
            "3.3": [3],
            "3.4": [0],
            "3.5": [3],
            "3.6": [3],
            "3.7": [2],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [3],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [1],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [3],
            "10.3": [3],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [0],
            "16.1": [0],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [0],
            "23": [1],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [
                0,
                1
            ],
            "29": [
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [1],
            "32.1": [1],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [1],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 9:50:15 AM MDT",
        "number": 33,
        "location": "Zahle",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [
                0,
                1
            ],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [
                0,
                1
            ],
            "3.3": [
                1,
                2
            ],
            "3.4": [
                1,
                2
            ],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [1],
            "4.6": [
                0,
                1
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                0,
                1
            ],
            "10.1": [
                0,
                1
            ],
            "10.2": [
                0,
                1
            ],
            "10.3": [
                0,
                1
            ],
            "11": [
                2,
                3
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [
                1,
                3
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [6]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 9:51:13 AM MDT",
        "number": 34,
        "location": "English",
        "3a": "I moved to Beirut for three years after having lived in a village my whole life",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [2],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [3],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                -1
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [0],
            "27": [0],
            "28": [1],
            "29": [
                0,
                1,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [
                1,
                3
            ],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [2],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                1,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [
                1,
                2
            ],
            "41": [
                0,
                2
            ],
            "42": [1],
            "43": [7]
        },
        "otherAnswers": {
            "23": ["Other: Nothing. e.g mshiit/re7et 3al ma7all ishtre banaduura"]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:52:51 AM MDT",
        "number": 35,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [3],
            "3.3": [3],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                2
            ],
            "21": [1],
            "22": [0],
            "23": [4],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [0],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                1,
                2,
                3
            ],
            "33": [1],
            "34.0": [1],
            "34.1": [-1],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "34.1": [null]
        }
    },
    {
        "timeCompleted": "2019/08/13 9:54:21 AM MDT",
        "number": 36,
        "location": "Habbouch",
        "3a": "Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [1],
            "3.3": [1],
            "3.4": [1],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                1,
                2
            ],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [2],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                3
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [0],
            "32.1": [
                1,
                3
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [
                1,
                3
            ],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [
                1,
                2,
                3,
                4
            ],
            "33": [
                1,
                2
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2
            ],
            "36": [0],
            "37": [
                1,
                2
            ],
            "38": [
                0,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [
                0,
                2
            ],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 9:58:36 AM MDT",
        "number": 37,
        "location": "Tripoli",
        "3a": "Kuwait",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [1],
            "3.7": [1],
            "4.0": [0],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [1],
            "6.2": [0],
            "7": [-1],
            "8": [0],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                2
            ],
            "21": [
                1,
                2
            ],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [0],
            "25": [
                2,
                3
            ],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                3,
                4
            ],
            "32.1": [
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [
                1,
                2,
                3
            ],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                1,
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [
                2,
                3
            ],
            "33": [
                0,
                1
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [0],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "7": [null]
        }
    },
    {
        "timeCompleted": "2019/08/13 10:07:16 AM MDT",
        "number": 38,
        "location": "Chouaifet El Aamroussieh",
        "3a": "Jounieh",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [3],
            "3.3": [
                0,
                2
            ],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [1],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3
            ],
            "32.5": [0],
            "32.6": [
                2,
                4
            ],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                0,
                3
            ],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [5]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 10:28:08 AM MDT",
        "number": 39,
        "location": "Charoun",
        "3a": "Baakline",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [
                0,
                1
            ],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [2],
            "4.6": [0],
            "5": [1],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [1],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [3],
            "22": [0],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [
                0,
                1
            ],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                1,
                2
            ],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [2],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 10:29:11 AM MDT",
        "number": 40,
        "location": "Bint Jbeil",
        "3a": "Beirut",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [1],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [2],
            "4.3": [0],
            "4.4": [2],
            "4.5": [2],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [1],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1,
                3
            ],
            "12": [3],
            "13": [3],
            "14.0": [2],
            "14.1": [2],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [
                0,
                1
            ],
            "19.2": [
                0,
                1
            ],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [0],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                2
            ],
            "25": [
                0,
                1,
                2
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                2,
                3,
                4
            ],
            "30": [
                0,
                1,
                2
            ],
            "31": [2],
            "32.0": [0],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                1,
                3
            ],
            "38": [
                1,
                2
            ],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [
                0,
                2,
                1,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 10:32:40 AM MDT",
        "number": 41,
        "location": "Joun",
        "3a": "Usa",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [
                0,
                1
            ],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [1],
            "23": [1],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3,
                4
            ],
            "32.1": [
                1,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [1],
            "36": [0],
            "37": [3],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 11:10:26 AM MDT",
        "number": 42,
        "location": "Kfarhamam",
        "3a": "Beirut",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [
                0,
                2
            ],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [
                1,
                2
            ],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                3
            ],
            "24": [
                0,
                1
            ],
            "25": [0],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [1],
            "32.1": [2],
            "32.2": [
                1,
                2
            ],
            "32.3": [1],
            "32.4": [0],
            "32.5": [2],
            "32.6": [0],
            "32.7": [
                1,
                2
            ],
            "33": [1],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 11:14:27 AM MDT",
        "number": 43,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [3],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                2,
                5
            ],
            "21": [
                1,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [2],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [1],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 11:18:09 AM MDT",
        "number": 44,
        "location": "Byblos",
        "3a": "Bchaaleh, above Batroun",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [1],
            "3.3": [1],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [
                0,
                1,
                2
            ],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [
                0,
                1
            ],
            "4.6": [0],
            "5": [1],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [0],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [
                0,
                1,
                2
            ],
            "15.0": [
                0,
                1
            ],
            "15.1": [1],
            "15.2": [0],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                1,
                2,
                4,
                5
            ],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [
                1,
                2
            ],
            "28": [1],
            "29": [
                0,
                1,
                2,
                3
            ],
            "30": [2],
            "31": [2],
            "32.0": [3],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: shtaryo"]
        }
    },
    {
        "timeCompleted": "2019/08/13 11:35:47 AM MDT",
        "number": 45,
        "location": "Rasm El Hadath",
        "3a": "Beirut, California",
        "answers": {
            "0.0": [0],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [
                1,
                2
            ],
            "3.3": [0],
            "3.4": [2],
            "3.5": [2],
            "3.6": [3],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [1],
            "4.4": [0],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                0,
                -1
            ],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [2],
            "22": [
                1,
                0
            ],
            "23": [1],
            "24": [1],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [2],
            "33": [1],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [2],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [3],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {
            "8": ["Other: Shtwro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 11:37:34 AM MDT",
        "number": 46,
        "location": "Beirut",
        "3a": "FRANCE, USA",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [2],
            "4.1": [2],
            "4.2": [2],
            "4.3": [2],
            "4.4": [2],
            "4.5": [2],
            "4.6": [2],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [4],
            "22": [1],
            "23": [-1],
            "24": [1],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [1],
            "29": [4],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                1,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [1],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [
                0,
                2
            ]
        },
        "otherAnswers": {
            "8": ["Other: Ishtarou "],
            "23": ["Other: La2ishtreh"]
        }
    },
    {
        "timeCompleted": "2019/08/13 11:48:37 AM MDT",
        "number": 47,
        "location": "Chouaifet El Aamroussieh",
        "3a": "Lived in Jbeil entire life, then Beirut past few years",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [
                0,
                2
            ],
            "3.3": [
                0,
                2
            ],
            "3.4": [
                0,
                1,
                2
            ],
            "3.5": [3],
            "3.6": [
                2,
                3
            ],
            "3.7": [
                0,
                2
            ],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [
                0,
                1
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [
                1,
                3
            ],
            "10.2": [
                0,
                1,
                3
            ],
            "10.3": [
                0,
                1,
                3
            ],
            "11": [
                0,
                2
            ],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [
                0,
                1
            ],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                0,
                1,
                3,
                4
            ],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                1,
                2
            ],
            "34.0": [0],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [
                2,
                1
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 11:49:06 AM MDT",
        "number": 48,
        "location": "Beirut",
        "3a": "Usa",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [1],
            "4.4": [0],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [0],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [2],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [1],
            "22": [1],
            "23": [3],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [4],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [
                2,
                3
            ],
            "32.7": [0],
            "33": [1],
            "34.0": [1],
            "34.1": [0],
            "35": [2],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 12:41:53 PM MDT",
        "number": 49,
        "location": "Tripoli",
        "3a": "Montreal",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [4],
            "3.2": [4],
            "3.3": [4],
            "3.4": [4],
            "3.5": [4],
            "3.6": [4],
            "3.7": [4],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [0],
            "17.1": [0],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [0],
            "22": [0],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                1
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [1],
            "34.1": [1],
            "35": [-1],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: \u0634\u0627\u0631\u064a\u064a\u0646"],
            "35": ["Other: \u0634\u064f\u0628\u064e\u0643\u0652\u061f"]
        }
    },
    {
        "timeCompleted": "2019/08/13 12:50:46 PM MDT",
        "number": 50,
        "location": "Aamchit",
        "3a": "Cyprus; France ",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [
                0,
                1
            ],
            "1.1": [0],
            "1.2": [1],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [2],
            "3.3": [1],
            "3.4": [1],
            "3.5": [2],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [1],
            "6.2": [2],
            "7": [1],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [3],
            "10.3": [3],
            "11": [
                0,
                1,
                2,
                3
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [
                0,
                1,
                2
            ],
            "22": [1],
            "23": [
                0,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [
                0,
                1
            ],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [
                0,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [
                1,
                2,
                3,
                4
            ],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [
                1,
                2,
                3,
                4
            ],
            "32.7": [
                1,
                2,
                3,
                4
            ],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [
                2,
                -1
            ],
            "41": [0],
            "42": [0],
            "43": [5]
        },
        "otherAnswers": {
            "8": ["Other: Shtaro \u0634\u062a\u0631\u0648"],
            "40": ["Other: ma tlabbet rasak is something I use more often"]
        }
    },
    {
        "timeCompleted": "2019/08/13 1:07:51 PM MDT",
        "number": 51,
        "location": "Zahle",
        "3a": "I lived in Louaize, Hazmieh, Paris, and the US",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [
                1,
                2
            ],
            "3.3": [1],
            "3.4": [
                1,
                2
            ],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [
                0,
                1
            ],
            "4.1": [
                0,
                1
            ],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [
                0,
                1
            ],
            "4.6": [
                1,
                2
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                2,
                3
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [
                1,
                3
            ],
            "16.2": [0],
            "16.3": [
                1,
                3
            ],
            "16.4": [0],
            "16.5": [
                1,
                3
            ],
            "16.6": [0],
            "16.7": [
                1,
                3
            ],
            "17.0": [1],
            "17.1": [
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                3,
                4
            ],
            "22": [0],
            "23": [1],
            "24": [
                0,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                -1
            ],
            "36": [
                1,
                2
            ],
            "37": [
                0,
                1
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {
            "35": ["Other: Not sure if the one I chose sounds like \"shu b\u00e9k, but that's what I was going for\""]
        }
    },
    {
        "timeCompleted": "2019/08/13 1:11:50 PM MDT",
        "number": 52,
        "location": "Tripoli",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [4],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [
                0,
                1
            ],
            "6.1": [
                0,
                1
            ],
            "6.2": [
                0,
                1
            ],
            "7": [1],
            "8": [1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                0,
                2,
                1
            ],
            "17.1": [
                0,
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                1,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [0],
            "32.2": [
                1,
                3
            ],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [
                2,
                3,
                4
            ],
            "33": [
                1,
                2
            ],
            "34.0": [1],
            "34.1": [1],
            "35": [-1],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [3]
        },
        "otherAnswers": {
            "35": ["Other: \u0634\u0650\u0628\u064e\u0643\u0652"]
        }
    },
    {
        "timeCompleted": "2019/08/13 1:25:30 PM MDT",
        "number": 53,
        "location": "Beirut",
        "3a": "canada",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [3],
            "3.3": [0],
            "3.4": [1],
            "3.5": [1],
            "3.6": [
                1,
                4
            ],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [2],
            "4.3": [0],
            "4.4": [1],
            "4.5": [2],
            "4.6": [0],
            "5": [3],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1
            ],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [0],
            "23": [
                0,
                1
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                2,
                4
            ],
            "30": [2],
            "31": [0],
            "32.0": [
                1,
                2,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3
            ],
            "32.5": [
                2,
                4
            ],
            "32.6": [1],
            "32.7": [1],
            "33": [0],
            "34.0": [1],
            "34.1": [1],
            "35": [1],
            "36": [1],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 1:41:24 PM MDT",
        "number": 54,
        "location": "Aalay",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [3],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [1],
            "22": [0],
            "23": [0],
            "24": [
                0,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [1],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                4
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 2:05:44 PM MDT",
        "number": 55,
        "location": "Beirut",
        "3a": "None",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [
                1,
                2
            ],
            "3.5": [3],
            "3.6": [3],
            "3.7": [4],
            "4.0": [
                0,
                1
            ],
            "4.1": [0],
            "4.2": [
                0,
                1
            ],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [2],
            "6.1": [0],
            "6.2": [2],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [0],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                4,
                3
            ],
            "24": [
                0,
                2
            ],
            "25": [2],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [0],
            "33": [
                1,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [2],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [
                1,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [
                3,
                5
            ]
        },
        "otherAnswers": {
            "8": ["Other: Shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 2:11:13 PM MDT",
        "number": 56,
        "location": "Aaidmoun",
        "3a": "I was born in tripoli and lived here almost all of my life but visiting the village every few weeks has had a significant effect on some of the words i use. ",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [3],
            "3.4": [
                0,
                2
            ],
            "3.5": [3],
            "3.6": [2],
            "3.7": [
                0,
                1
            ],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [1],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [4],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [1],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: Meshteryin"]
        }
    },
    {
        "timeCompleted": "2019/08/13 2:21:32 PM MDT",
        "number": 57,
        "location": "Ghadir",
        "3a": "Spain, Panama",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [
                0,
                1
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [1],
            "10.2": [
                0,
                1
            ],
            "10.3": [
                0,
                1
            ],
            "11": [
                0,
                1,
                2
            ],
            "12": [1],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [
                0,
                1
            ],
            "22": [1],
            "23": [
                0,
                -1
            ],
            "24": [0],
            "25": [
                2,
                3
            ],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                2
            ],
            "30": [-1],
            "31": [2],
            "32.0": [
                1,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3,
                -1
            ],
            "36": [
                1,
                0
            ],
            "37": [3],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: Sheryiin"],
            "23": ["Other: Kermel ta eshtre banadoura"],
            "30": [null],
            "35": ["Other: Aysh bek"]
        }
    },
    {
        "timeCompleted": "2019/08/13 2:33:41 PM MDT",
        "number": 58,
        "location": "Batroun",
        "3a": "Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [4],
            "3.2": [4],
            "3.3": [0],
            "3.4": [0],
            "3.5": [4],
            "3.6": [4],
            "3.7": [4],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [3],
            "10.1": [3],
            "10.2": [3],
            "10.3": [3],
            "11": [2],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [0],
            "22": [1],
            "23": [
                0,
                4
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [2],
            "34.0": [0],
            "34.1": [0],
            "35": [-1],
            "36": [1],
            "37": [0],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {
            "35": ["Other: \u0627\u064a\u0634 \u0628\u064a\u0643 (esh b\u0113k)"]
        }
    },
    {
        "timeCompleted": "2019/08/13 2:41:09 PM MDT",
        "number": 59,
        "location": "Ashqout",
        "3a": "jbeil and furn al chebbak",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [1],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [1],
            "23": [
                0,
                -1
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                3,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [0],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: chery\u012bn"],
            "23": ["Other: the all classy: ta"]
        }
    },
    {
        "timeCompleted": "2019/08/13 2:44:40 PM MDT",
        "number": 60,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [
                0,
                1
            ],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [1],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [2],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                4
            ],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [
                0,
                1
            ],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [1],
            "37": [
                0,
                3
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 2:52:47 PM MDT",
        "number": 61,
        "location": "Beirut",
        "3a": "I was sometimes made fun of because of my Beirut accent ",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [2],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [0],
            "4.1": [1],
            "4.2": [1],
            "4.3": [0],
            "4.4": [2],
            "4.5": [0],
            "4.6": [0],
            "5": [0],
            "6.0": [2],
            "6.1": [1],
            "6.2": [0],
            "7": [3],
            "8": [-1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [2],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                2,
                5
            ],
            "21": [
                2,
                5
            ],
            "22": [
                1,
                0
            ],
            "23": [3],
            "24": [1],
            "25": [3],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [1],
            "30": [2],
            "31": [2],
            "32.0": [0],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                1,
                2
            ],
            "34.0": [0],
            "34.1": [1],
            "35": [0],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [4]
        },
        "otherAnswers": {
            "8": ["Other: Shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 3:18:23 PM MDT",
        "number": 62,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [3],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [3],
            "3.7": [
                1,
                3
            ],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [
                0,
                1
            ],
            "6.2": [0],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [1],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                2,
                5
            ],
            "21": [
                1,
                4
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                1,
                2,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [
                1,
                3
            ]
        },
        "otherAnswers": {
            "8": ["Other: Chtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 3:22:49 PM MDT",
        "number": 63,
        "location": "Irzay",
        "3a": "Beirut's Southern Suburb",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [1],
            "3.3": [2],
            "3.4": [1],
            "3.5": [3],
            "3.6": [1],
            "3.7": [3],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [2],
            "7": [0],
            "8": [-1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [
                0,
                3
            ],
            "12": [0],
            "13": [1],
            "14.0": [
                0,
                1
            ],
            "14.1": [1],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                2,
                3
            ],
            "24": [0],
            "25": [1],
            "26": [
                1,
                2
            ],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                3
            ],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [
                1,
                2,
                3
            ],
            "32.4": [0],
            "32.5": [
                1,
                2,
                3
            ],
            "32.6": [
                1,
                2,
                3
            ],
            "32.7": [
                1,
                2,
                3
            ],
            "33": [1],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: sheryeen"]
        }
    },
    {
        "timeCompleted": "2019/08/13 3:36:11 PM MDT",
        "number": 64,
        "location": "Dbayeh",
        "3a": "Beirut",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [
                0,
                1
            ],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [1],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [
                0,
                2
            ],
            "4.6": [
                0,
                2
            ],
            "5": [2],
            "6.0": [1],
            "6.1": [2],
            "6.2": [2],
            "7": [2],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [5],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                -1
            ],
            "24": [
                0,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                3,
                4
            ],
            "32.1": [
                1,
                3
            ],
            "32.2": [0],
            "32.3": [
                1,
                3,
                4
            ],
            "32.4": [
                2,
                3,
                4
            ],
            "32.5": [
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [1],
            "35": [1],
            "36": [0],
            "37": [2],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [
                0,
                2
            ],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "23": ["Other: L"]
        }
    },
    {
        "timeCompleted": "2019/08/13 3:48:50 PM MDT",
        "number": 65,
        "location": "Beirut",
        "3a": "Aleppo",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [1],
            "3.0": [
                1,
                2
            ],
            "3.1": [2],
            "3.2": [3],
            "3.3": [3],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [2],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [1],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [0],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [1],
            "10.0": [1],
            "10.1": [0],
            "10.2": [1],
            "10.3": [2],
            "11": [0],
            "12": [0],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                0,
                1,
                2,
                3
            ],
            "22": [0],
            "23": [
                1,
                4
            ],
            "24": [0],
            "25": [
                1,
                2
            ],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                1,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [1],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                2,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 3:56:55 PM MDT",
        "number": 66,
        "location": "Byblos",
        "3a": "beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [
                0,
                1,
                2,
                3,
                4
            ],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [2],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [2],
            "10.1": [2],
            "10.2": [2],
            "10.3": [2],
            "11": [1],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [5],
            "22": [
                1,
                0
            ],
            "23": [
                4,
                3
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [3],
            "30": [
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [2],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [0],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [5]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 4:05:01 PM MDT",
        "number": 67,
        "location": "Toura",
        "3a": "Beirut, Manchester (UK) and Sierra Leone ",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                1,
                2
            ],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [
                1,
                2
            ],
            "3.6": [
                1,
                2
            ],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [0],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                2,
                4
            ],
            "21": [
                0,
                4
            ],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                2
            ],
            "25": [0],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                3
            ],
            "32.2": [
                1,
                2,
                3
            ],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [
                1,
                2,
                3
            ],
            "32.7": [
                1,
                2,
                3
            ],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [
                1,
                0
            ],
            "37": [3],
            "38": [0],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:02:49 PM MDT",
        "number": 68,
        "location": "Daraaoun",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1
            ],
            "24": [2],
            "25": [1],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [1],
            "37": [
                0,
                3
            ],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [
                2,
                3
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:23:13 PM MDT",
        "number": 69,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [3],
            "3.3": [3],
            "3.4": [3],
            "3.5": [3],
            "3.6": [3],
            "3.7": [4],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                2
            ],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [0],
            "7": [3],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [4],
            "22": [0],
            "23": [
                0,
                4
            ],
            "24": [0],
            "25": [3],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [0],
            "32.1": [4],
            "32.2": [1],
            "32.3": [4],
            "32.4": [0],
            "32.5": [2],
            "32.6": [0],
            "32.7": [2],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2
            ],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:36:51 PM MDT",
        "number": 70,
        "location": "Chaqra",
        "3a": "Saudi Arabia, Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [
                0,
                1,
                2
            ],
            "6.1": [
                0,
                1,
                2
            ],
            "6.2": [
                0,
                1,
                2
            ],
            "7": [1],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [1],
            "9.3": [1],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                2
            ],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1
            ],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                3
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [3],
            "32.1": [4],
            "32.2": [1],
            "32.3": [1],
            "32.4": [2],
            "32.5": [2],
            "32.6": [3],
            "32.7": [3],
            "33": [0],
            "34.0": [0],
            "34.1": [1],
            "35": [
                1,
                2
            ],
            "36": [0],
            "37": [
                1,
                2,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 5:45:58 PM MDT",
        "number": 71,
        "location": "Khirbet Selm",
        "3a": "Mostly in Beirut",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [1],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [0],
            "3.2": [0],
            "3.3": [0],
            "3.4": [1],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [
                0,
                1
            ],
            "4.4": [1],
            "4.5": [
                0,
                1
            ],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                1,
                2,
                3
            ],
            "12": [1],
            "13": [1],
            "14.0": [1],
            "14.1": [1],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                1,
                4
            ],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                2,
                4,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [2],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [1],
            "32.1": [0],
            "32.2": [1],
            "32.3": [1],
            "32.4": [0],
            "32.5": [2],
            "32.6": [0],
            "32.7": [2],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [
                1,
                0,
                3
            ],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [1],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:08:50 PM MDT",
        "number": 72,
        "location": "Nabatieh",
        "3a": "Grew up in Beirut ",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [2],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [2],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [0],
            "17.1": [0],
            "18": [1],
            "19.0": [0],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [0],
            "21": [2],
            "22": [1],
            "23": [4],
            "24": [0],
            "25": [0],
            "26": [2],
            "27": [
                0,
                1
            ],
            "28": [0],
            "29": [1],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                2
            ],
            "32.1": [
                1,
                2
            ],
            "32.2": [
                1,
                2
            ],
            "32.3": [
                1,
                2
            ],
            "32.4": [2],
            "32.5": [2],
            "32.6": [2],
            "32.7": [2],
            "33": [1],
            "34.0": [0],
            "34.1": [1],
            "35": [0],
            "36": [
                1,
                2,
                0
            ],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 6:16:08 PM MDT",
        "number": 73,
        "location": "Haris",
        "3a": "Belgium",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [1],
            "3.4": [1],
            "3.5": [1],
            "3.6": [3],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [1],
            "14.0": [
                0,
                1
            ],
            "14.1": [1],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [2],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [5],
            "22": [0],
            "23": [
                0,
                1,
                3
            ],
            "24": [
                0,
                1
            ],
            "25": [
                0,
                1
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [0],
            "37": [
                1,
                2
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: Shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/13 6:36:42 PM MDT",
        "number": 74,
        "location": "Nmairiyeh",
        "3a": "I was born in Dubai, UAE. You could say the different cultures and nationalities there affected my speech. Every Lebanese person I run into think I\u2019m either Jordanian or Palestinian.",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [
                0,
                2
            ],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [
                1,
                2
            ],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [1],
            "6.0": [
                1,
                2
            ],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [1],
            "9.2": [1],
            "9.3": [1],
            "9.4": [1],
            "9.5": [1],
            "10.0": [1],
            "10.1": [1],
            "10.2": [
                0,
                1
            ],
            "10.3": [0],
            "11": [
                0,
                3
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [
                0,
                1
            ],
            "14.2": [
                0,
                1,
                2
            ],
            "15.0": [0],
            "15.1": [
                0,
                1
            ],
            "15.2": [
                0,
                1
            ],
            "16.0": [0],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                0,
                1,
                3
            ],
            "22": [0],
            "23": [
                1,
                4,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                3,
                4
            ],
            "32.2": [0],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [
                1,
                2,
                3,
                4
            ],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                1,
                2,
                3,
                4
            ],
            "33": [
                1,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [
                0,
                1
            ],
            "35": [
                0,
                2
            ],
            "36": [0],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [1],
            "40": [
                0,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [
                2,
                1
            ]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 7:15:49 PM MDT",
        "number": 75,
        "location": "Tripoli",
        "3a": "Sydney",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [4],
            "3.2": [4],
            "3.3": [4],
            "3.4": [4],
            "3.5": [4],
            "3.6": [4],
            "3.7": [4],
            "4.0": [1],
            "4.1": [2],
            "4.2": [0],
            "4.3": [1],
            "4.4": [2],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [0],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [0],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [0],
            "17.1": [0],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [1],
            "22": [0],
            "23": [
                0,
                4
            ],
            "24": [0],
            "25": [3],
            "26": [3],
            "27": [1],
            "28": [0],
            "29": [4],
            "30": [0],
            "31": [1],
            "32.0": [3],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [1],
            "35": [-1],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [0],
            "40": [
                1,
                2
            ],
            "41": [0],
            "42": [0],
            "43": [3]
        },
        "otherAnswers": {
            "35": ["Other: \u0634\u0648 \u0628\u0627\u0643 Shu baak"]
        }
    },
    {
        "timeCompleted": "2019/08/13 11:01:34 PM MDT",
        "number": 76,
        "location": "Benney",
        "3a": "Tartu, Estonia",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [2],
            "4.6": [0],
            "5": [1],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [1],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [3],
            "22": [1],
            "23": [1],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [1],
            "29": [
                0,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [1],
            "35": [1],
            "36": [0],
            "37": [3],
            "38": [1],
            "39": [1],
            "40": [2],
            "41": [
                0,
                2
            ],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/13 11:17:32 PM MDT",
        "number": 77,
        "location": "Kfar Houneh",
        "3a": "Hazmieh",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [3],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [1],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [1],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [0],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [0],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3,
                4
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [0],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: Henne (they) shtaro ..."]
        }
    },
    {
        "timeCompleted": "2019/08/14 1:03:40 AM MDT",
        "number": 78,
        "location": "Deir El Qamar",
        "3a": "Eastern suburbs of Beirut ",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [1],
            "4.6": [1],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [1],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                -1
            ],
            "24": [
                0,
                1
            ],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [
                0,
                1,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                3
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [3],
            "38": [
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {
            "8": ["Other: shtaro"],
            "23": ["Other: ta, la"]
        }
    },
    {
        "timeCompleted": "2019/08/14 1:04:50 AM MDT",
        "number": 79,
        "location": "Marjaayoun",
        "3a": "Beirut",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [1],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [1],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                3
            ],
            "12": [2],
            "13": [0],
            "14.0": [0],
            "14.1": [2],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [
                1,
                2,
                3,
                4
            ],
            "32.4": [
                1,
                2,
                3
            ],
            "32.5": [
                1,
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [
                2,
                3
            ],
            "33": [1],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                0,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [
                0,
                2
            ],
            "39": [1],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [0],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/14 3:32:06 AM MDT",
        "number": 80,
        "location": "Beirut",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [
                0,
                1
            ],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [2],
            "21": [4],
            "22": [1],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                2,
                4
            ],
            "32.2": [
                1,
                3
            ],
            "32.3": [
                1,
                2,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                2,
                3
            ],
            "36": [
                1,
                0
            ],
            "37": [3],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: \u0634\u0627\u0631\u064a\u064a\u0646"]
        }
    },
    {
        "timeCompleted": "2019/08/14 4:30:08 AM MDT",
        "number": 81,
        "location": "Byblos",
        "3a": "USA",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [3],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [2],
            "4.5": [0],
            "4.6": [2],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [0],
            "11": [0],
            "12": [0],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [0],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [1],
            "23": [-1],
            "24": [2],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [1],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [4],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [1],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {
            "23": ["Other: \u062a"]
        }
    },
    {
        "timeCompleted": "2019/08/14 4:57:34 AM MDT",
        "number": 82,
        "location": "Kfar Houneh",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [3],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [0],
            "4.5": [2],
            "4.6": [2],
            "5": [3],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [
                1,
                -1
            ],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1,
                2,
                3
            ],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [
                0,
                1
            ],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [
                0,
                3,
                4,
                5
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4
            ],
            "24": [
                0,
                1
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [
                0,
                2
            ],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                4
            ],
            "32.1": [
                1,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [
                2,
                3
            ],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1,
                2
            ],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [
                0,
                1
            ],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {
            "8": ["Other: sheryyin"]
        }
    },
    {
        "timeCompleted": "2019/08/14 8:00:34 AM MDT",
        "number": 83,
        "location": "Kfar Houneh",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [0],
            "3.3": [0],
            "3.4": [0],
            "3.5": [3],
            "3.6": [2],
            "3.7": [0],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [-1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [3],
            "10.3": [3],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [0],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [5],
            "22": [
                1,
                0
            ],
            "23": [0],
            "24": [
                0,
                1,
                2
            ],
            "25": [3],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [1],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                3
            ],
            "36": [0],
            "37": [3],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [
                1,
                3
            ]
        },
        "otherAnswers": {
            "8": ["Other: shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/15 2:07:47 AM MDT",
        "number": 84,
        "location": "Sultaniyeh",
        "3a": "Lived in Riyadh for the first 14 years of my life. It did have some impact. Used to accidentally say some Jordanian words while talking but I stopped that by the time I was 16. I still feel like my vocab is still limited though.",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [0],
            "0.3": [1],
            "1.0": [1],
            "1.1": [0],
            "1.2": [1],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [2],
            "3.3": [0],
            "3.4": [0],
            "3.5": [2],
            "3.6": [3],
            "3.7": [4],
            "4.0": [0],
            "4.1": [0],
            "4.2": [1],
            "4.3": [0],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [2],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [1],
            "9.5": [2],
            "10.0": [3],
            "10.1": [0],
            "10.2": [3],
            "10.3": [0],
            "11": [
                0,
                3
            ],
            "12": [0],
            "13": [0],
            "14.0": [2],
            "14.1": [
                0,
                1
            ],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [1],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                2
            ],
            "25": [
                0,
                1
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                2,
                3,
                4
            ],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [4],
            "32.4": [0],
            "32.5": [0],
            "32.6": [
                2,
                3
            ],
            "32.7": [4],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [
                0,
                2,
                -1
            ],
            "36": [0],
            "37": [
                0,
                1
            ],
            "38": [
                0,
                2
            ],
            "39": [1],
            "40": [
                1,
                2
            ],
            "41": [0],
            "42": [0],
            "43": [
                0,
                3
            ]
        },
        "otherAnswers": {
            "35": ["Other: \u0634\u0648 \u0628\u064a\u0644\u0643"]
        }
    },
    {
        "timeCompleted": "2019/08/15 3:13:48 AM MDT",
        "number": 85,
        "location": "Sohmor",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [
                0,
                1
            ],
            "1.1": [0],
            "1.2": [1],
            "1.3": [
                0,
                1
            ],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [1],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [
                0,
                1
            ],
            "12": [2],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [0],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [
                2,
                3
            ],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [2],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                2
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [0],
            "34.0": [
                0,
                1
            ],
            "34.1": [0],
            "35": [1],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                1
            ],
            "38": [2],
            "39": [1],
            "40": [
                3,
                1,
                2
            ],
            "41": [
                0,
                1,
                2
            ],
            "42": [0],
            "43": [7]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/15 10:04:59 PM MDT",
        "number": 86,
        "location": "Nabatieh",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [
                0,
                2
            ],
            "3.4": [
                1,
                2
            ],
            "3.5": [3],
            "3.6": [2],
            "3.7": [
                0,
                3
            ],
            "4.0": [1],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [2],
            "6.1": [2],
            "6.2": [2],
            "7": [0],
            "8": [1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [0],
            "10.3": [0],
            "11": [
                0,
                1,
                3
            ],
            "12": [1],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [0],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [
                1,
                0
            ],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                1,
                2
            ],
            "25": [
                0,
                1
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [
                0,
                1,
                2
            ],
            "31": [2],
            "32.0": [
                1,
                3,
                4
            ],
            "32.1": [
                2,
                3,
                4
            ],
            "32.2": [
                1,
                3,
                4
            ],
            "32.3": [
                2,
                3,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                1,
                2,
                3
            ],
            "36": [
                1,
                2,
                0
            ],
            "37": [
                1,
                3
            ],
            "38": [1],
            "39": [1],
            "40": [
                3,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [1]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/16 12:40:32 AM MDT",
        "number": 87,
        "location": "Ain El Kharroube",
        "3a": "",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [4],
            "3.2": [4],
            "3.3": [2],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [1],
            "4.5": [2],
            "4.6": [2],
            "5": [2],
            "6.0": [1],
            "6.1": [0],
            "6.2": [1],
            "7": [0],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [1],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [3],
            "22": [1],
            "23": [0],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [1],
            "28": [1],
            "29": [2],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [
                1,
                4
            ],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [0],
            "34.1": [1],
            "35": [1],
            "36": [0],
            "37": [0],
            "38": [2],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {
            "8": ["Other: Shtarou"]
        }
    },
    {
        "timeCompleted": "2019/08/16 7:21:30 AM MDT",
        "number": 88,
        "location": "Beirut",
        "3a": "Riyadh, Saudi Arabia",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [2],
            "3.3": [0],
            "3.4": [0],
            "3.5": [0],
            "3.6": [2],
            "3.7": [
                0,
                2
            ],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [
                1,
                2
            ],
            "6.1": [
                1,
                2
            ],
            "6.2": [
                1,
                2
            ],
            "7": [0],
            "8": [-1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [1],
            "9.3": [1],
            "9.4": [1],
            "9.5": [1],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [0],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [
                0,
                1
            ],
            "15.0": [0],
            "15.1": [0],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [
                1,
                2
            ],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                2,
                5
            ],
            "21": [1],
            "22": [
                1,
                0
            ],
            "23": [0],
            "24": [0],
            "25": [0],
            "26": [2],
            "27": [1],
            "28": [0],
            "29": [0],
            "30": [2],
            "31": [2],
            "32.0": [1],
            "32.1": [0],
            "32.2": [
                1,
                2,
                3,
                4
            ],
            "32.3": [1],
            "32.4": [2],
            "32.5": [0],
            "32.6": [
                1,
                2,
                3,
                4
            ],
            "32.7": [0],
            "33": [1],
            "34.0": [0],
            "34.1": [0],
            "35": [2],
            "36": [0],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "8": ["Other: Shtaret/ shtaro"]
        }
    },
    {
        "timeCompleted": "2019/08/16 10:06:44 AM MDT",
        "number": 89,
        "location": "Mechmech",
        "3a": "Beirut Achrafieh",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [
                2,
                3
            ],
            "3.2": [
                2,
                3
            ],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [2],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                1,
                3
            ],
            "10.1": [3],
            "10.2": [3],
            "10.3": [3],
            "11": [0],
            "12": [2],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                4,
                5
            ],
            "21": [4],
            "22": [1],
            "23": [
                0,
                4
            ],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [2],
            "28": [0],
            "29": [
                0,
                1
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [0],
            "32.5": [2],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                1
            ],
            "34.0": [0],
            "34.1": [0],
            "35": [
                0,
                3
            ],
            "36": [1],
            "37": [
                0,
                3
            ],
            "38": [
                0,
                1,
                2
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [0],
            "43": [0]
        },
        "otherAnswers": {
            "8": ["Other: \u0634\u0627\u0631\u064a\u064a\u0646 / \u0627\u0634\u062a\u0631\u0648\u0627 "]
        }
    },
    {
        "timeCompleted": "2019/08/16 11:19:20 PM MDT",
        "number": 90,
        "location": "Beirut",
        "3a": "new jersey, USA",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [1],
            "2.1": [1],
            "3.0": [2],
            "3.1": [2],
            "3.2": [2],
            "3.3": [2],
            "3.4": [2],
            "3.5": [2],
            "3.6": [2],
            "3.7": [2],
            "4.0": [1],
            "4.1": [1],
            "4.2": [1],
            "4.3": [1],
            "4.4": [1],
            "4.5": [1],
            "4.6": [1],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [1],
            "8": [1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [1],
            "9.3": [1],
            "9.4": [1],
            "9.5": [1],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [0],
            "13": [1],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [2],
            "17.1": [1],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [1],
            "21": [
                0,
                1
            ],
            "22": [0],
            "23": [1],
            "24": [1],
            "25": [0],
            "26": [1],
            "27": [0],
            "28": [0],
            "29": [1],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                2,
                3
            ],
            "32.1": [
                1,
                3,
                4
            ],
            "32.2": [
                2,
                3
            ],
            "32.3": [
                1,
                4
            ],
            "32.4": [
                1,
                3
            ],
            "32.5": [
                2,
                3
            ],
            "32.6": [
                2,
                3
            ],
            "32.7": [
                1,
                4
            ],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [
                2,
                4
            ],
            "36": [0],
            "37": [1],
            "38": [1],
            "39": [1],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/20 6:31:31 AM MDT",
        "number": 91,
        "location": "Habbouch",
        "3a": "",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [1],
            "1.3": [1],
            "2.0": [1],
            "2.1": [1],
            "3.0": [0],
            "3.1": [3],
            "3.2": [0],
            "3.3": [1],
            "3.4": [2],
            "3.5": [3],
            "3.6": [2],
            "3.7": [3],
            "4.0": [1],
            "4.1": [1],
            "4.2": [2],
            "4.3": [2],
            "4.4": [0],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [0],
            "9.2": [1],
            "9.3": [2],
            "9.4": [2],
            "9.5": [1],
            "10.0": [1],
            "10.1": [0],
            "10.2": [2],
            "10.3": [0],
            "11": [0],
            "12": [0],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [1],
            "15.0": [0],
            "15.1": [1],
            "15.2": [
                0,
                1
            ],
            "16.0": [1],
            "16.1": [0],
            "16.2": [1],
            "16.3": [0],
            "16.4": [1],
            "16.5": [0],
            "16.6": [1],
            "16.7": [0],
            "17.0": [1],
            "17.1": [2],
            "18": [2],
            "19.0": [1],
            "19.1": [0],
            "19.2": [0],
            "19.3": [0],
            "20": [5],
            "21": [5],
            "22": [0],
            "23": [0],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [3],
            "32.1": [3],
            "32.2": [0],
            "32.3": [0],
            "32.4": [2],
            "32.5": [2],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [
                0,
                1
            ],
            "35": [0],
            "36": [1],
            "37": [
                1,
                2
            ],
            "38": [
                0,
                1
            ],
            "39": [1],
            "40": [2],
            "41": [0],
            "42": [1],
            "43": [0]
        },
        "otherAnswers": {}
    },
    {
        "timeCompleted": "2019/08/20 10:48:26 AM MDT",
        "number": 92,
        "location": "Beirut",
        "3a": "Dad is from Aleppo and mom is from Saida",
        "answers": {
            "0.0": [1],
            "0.1": [0],
            "0.2": [1],
            "0.3": [0],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [1],
            "3.2": [
                1,
                2
            ],
            "3.3": [
                1,
                2
            ],
            "3.4": [2],
            "3.5": [2],
            "3.6": [
                1,
                2
            ],
            "3.7": [2],
            "4.0": [2],
            "4.1": [2],
            "4.2": [2],
            "4.3": [2],
            "4.4": [2],
            "4.5": [
                1,
                2
            ],
            "4.6": [1],
            "5": [2],
            "6.0": [0],
            "6.1": [0],
            "6.2": [0],
            "7": [1],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [0],
            "10.2": [0],
            "10.3": [0],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [0],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [0],
            "16.1": [0],
            "16.2": [0],
            "16.3": [0],
            "16.4": [0],
            "16.5": [0],
            "16.6": [0],
            "16.7": [0],
            "17.0": [
                2,
                1
            ],
            "17.1": [
                2,
                1
            ],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [4],
            "21": [4],
            "22": [0],
            "23": [4],
            "24": [0],
            "25": [1],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [1],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [
                1,
                4
            ],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [
                0,
                2
            ],
            "34.0": [0],
            "34.1": [
                0,
                1
            ],
            "35": [1],
            "36": [
                1,
                0
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [
                1,
                2
            ],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {
            "8": ["Other: sheriyin"]
        }
    },
    {
        "timeCompleted": "2019/09/04 11:17:44 PM MDT",
        "number": 93,
        "location": "Beirut",
        "3a": "Jeddah, Toronto",
        "answers": {
            "0.0": [1],
            "0.1": [1],
            "0.2": [1],
            "0.3": [1],
            "1.0": [0],
            "1.1": [0],
            "1.2": [0],
            "1.3": [0],
            "2.0": [0],
            "2.1": [0],
            "3.0": [0],
            "3.1": [2],
            "3.2": [
                1,
                2,
                3
            ],
            "3.3": [
                1,
                2
            ],
            "3.4": [1],
            "3.5": [3],
            "3.6": [2],
            "3.7": [0],
            "4.0": [0],
            "4.1": [0],
            "4.2": [0],
            "4.3": [0],
            "4.4": [
                0,
                1
            ],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [
                0,
                1
            ],
            "10.1": [
                0,
                1
            ],
            "10.2": [
                0,
                1
            ],
            "10.3": [
                0,
                1
            ],
            "11": [0],
            "12": [3],
            "13": [3],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [1],
            "15.2": [1],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [1],
            "17.1": [2],
            "18": [1],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [
                2,
                5
            ],
            "21": [4],
            "22": [0],
            "23": [1],
            "24": [
                0,
                1
            ],
            "25": [
                1,
                3
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                3
            ],
            "32.1": [0],
            "32.2": [
                1,
                3
            ],
            "32.3": [4],
            "32.4": [0],
            "32.5": [0],
            "32.6": [0],
            "32.7": [
                2,
                3
            ],
            "33": [0],
            "34.0": [0],
            "34.1": [0],
            "35": [2],
            "36": [0],
            "37": [0],
            "38": [1],
            "39": [1],
            "40": [-1],
            "41": [0],
            "42": [1],
            "43": [3]
        },
        "otherAnswers": {
            "40": ["Other: y"]
        }
    },
    {
        "timeCompleted": "2019/09/05 1:52:53 AM MDT",
        "number": 94,
        "location": "Tripoli",
        "3a": "Kuwait, Lattakia Syria",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [1],
            "0.3": [1],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [1],
            "3.0": [1],
            "3.1": [3],
            "3.2": [3],
            "3.3": [1],
            "3.4": [1],
            "3.5": [3],
            "3.6": [3],
            "3.7": [3],
            "4.0": [2],
            "4.1": [2],
            "4.2": [2],
            "4.3": [2],
            "4.4": [2],
            "4.5": [2],
            "4.6": [0],
            "5": [3],
            "6.0": [1],
            "6.1": [0],
            "6.2": [2],
            "7": [3],
            "8": [-1],
            "9.0": [0],
            "9.1": [2],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [0],
            "13": [0],
            "14.0": [0],
            "14.1": [0],
            "14.2": [2],
            "15.0": [0],
            "15.1": [
                0,
                1
            ],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [0],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [0],
            "17.1": [0],
            "18": [2],
            "19.0": [1],
            "19.1": [1],
            "19.2": [1],
            "19.3": [1],
            "20": [5],
            "21": [
                2,
                5
            ],
            "22": [0],
            "23": [
                0,
                1,
                4,
                3
            ],
            "24": [
                0,
                2
            ],
            "25": [
                0,
                1,
                2,
                3
            ],
            "26": [2],
            "27": [0],
            "28": [0],
            "29": [
                0,
                1,
                2,
                4
            ],
            "30": [2],
            "31": [2],
            "32.0": [
                1,
                2,
                3,
                4
            ],
            "32.1": [0],
            "32.2": [0],
            "32.3": [0],
            "32.4": [
                2,
                3
            ],
            "32.5": [0],
            "32.6": [0],
            "32.7": [0],
            "33": [0],
            "34.0": [1],
            "34.1": [1],
            "35": [-1],
            "36": [
                2,
                3
            ],
            "37": [
                0,
                3
            ],
            "38": [2],
            "39": [0],
            "40": [1],
            "41": [0],
            "42": [1],
            "43": [
                2,
                3,
                -1
            ]
        },
        "otherAnswers": {
            "8": ["Other: mishtiry\u012bn"],
            "35": ["Other: \u0634\u0650\u0628\u064e\u0643 shibak"],
            "43": ["Other: ma3il2a"]
        }
    },
    {
        "timeCompleted": "2019/09/07 7:37:45 PM MDT",
        "number": 95,
        "location": "Tyre",
        "3a": "Speaking to other arabs",
        "answers": {
            "0.0": [0],
            "0.1": [0],
            "0.2": [0],
            "0.3": [0],
            "1.0": [1],
            "1.1": [1],
            "1.2": [1],
            "1.3": [1],
            "2.0": [0],
            "2.1": [0],
            "3.0": [1],
            "3.1": [1],
            "3.2": [1],
            "3.3": [0],
            "3.4": [1],
            "3.5": [1],
            "3.6": [0],
            "3.7": [1],
            "4.0": [0],
            "4.1": [1],
            "4.2": [1],
            "4.3": [0],
            "4.4": [1],
            "4.5": [0],
            "4.6": [0],
            "5": [2],
            "6.0": [1],
            "6.1": [1],
            "6.2": [1],
            "7": [0],
            "8": [1],
            "9.0": [1],
            "9.1": [1],
            "9.2": [2],
            "9.3": [2],
            "9.4": [2],
            "9.5": [2],
            "10.0": [1],
            "10.1": [1],
            "10.2": [1],
            "10.3": [1],
            "11": [0],
            "12": [0],
            "13": [0],
            "14.0": [0],
            "14.1": [1],
            "14.2": [
                0,
                1
            ],
            "15.0": [0],
            "15.1": [0],
            "15.2": [0],
            "16.0": [1],
            "16.1": [1],
            "16.2": [1],
            "16.3": [1],
            "16.4": [1],
            "16.5": [1],
            "16.6": [1],
            "16.7": [1],
            "17.0": [
                0,
                2,
                1
            ],
            "17.1": [
                0,
                2,
                1
            ],
            "18": [2],
            "19.0": [0],
            "19.1": [1],
            "19.2": [0],
            "19.3": [1],
            "20": [0],
            "21": [1],
            "22": [
                1,
                0
            ],
            "23": [3],
            "24": [
                0,
                2
            ],
            "25": [
                0,
                1,
                3
            ],
            "26": [2],
            "27": [
                0,
                1,
                2
            ],
            "28": [0],
            "29": [4],
            "30": [2],
            "31": [1],
            "32.0": [
                1,
                2
            ],
            "32.1": [
                1,
                2
            ],
            "32.2": [1],
            "32.3": [
                1,
                2
            ],
            "32.4": [
                1,
                2
            ],
            "32.5": [
                1,
                2
            ],
            "32.6": [
                1,
                2
            ],
            "32.7": [
                1,
                2
            ],
            "33": [0],
            "34.0": [1],
            "34.1": [0],
            "35": [
                1,
                3,
                4
            ],
            "36": [
                1,
                0
            ],
            "37": [2],
            "38": [
                0,
                2
            ],
            "39": [0],
            "40": [3],
            "41": [0],
            "42": [1],
            "43": [2]
        },
        "otherAnswers": {}
    }
]
};
},{}],"MjNq":[function(require,module,exports) {
module.exports={url: "locations.df7f823d.json", data: {
    "Khalwat": {
        "district": "Hasbaiyya",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.739317,
            33.4159965
        ],
        "bounds": null,
        "name": "Khalwat"
    },
    "Halba": {
        "district": "Aakkar",
        "governorate": "North Governorate",
        "location": [
            36.0798357,
            34.5440368
        ],
        "bounds": null,
        "name": "Halba"
    },
    "Marjaayoun": {
        "district": "Marjaayoun",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.5889282,
            33.3594755
        ],
        "bounds": null,
        "name": "Marjaayoun"
    },
    "Kfarshima": {
        "district": "Baabda",
        "governorate": "Mount Lebanon",
        "location": [
            35.5360583,
            33.8168657
        ],
        "bounds": null,
        "name": "Kfarshima"
    },
    "Zahle": {
        "district": "Zahle",
        "governorate": "Beqaa",
        "location": [
            35.9019775,
            33.8462304
        ],
        "bounds": {
            "northeast": {
                "lat": 33.8666667,
                "lng": 35.9259871
            },
            "southwest": {
                "lat": 33.8225688,
                "lng": 35.8551825
            }
        },
        "name": "Zahle"
    },
    "Qoubaiyat": {
        "district": "Aakkar",
        "governorate": "North Governorate",
        "location": [
            36.2815234,
            34.571583
        ],
        "bounds": null,
        "name": "Qoubaiyat"
    },
    "Kfour El Arabi": {
        "district": "Batroun",
        "governorate": "North Governorate",
        "location": [
            35.8659118,
            34.2246575
        ],
        "bounds": null,
        "name": "Kfour El Arabi"
    },
    "Tannourine": {
        "district": "Batroun",
        "governorate": "North Governorate",
        "location": [
            35.8778671,
            34.2096334
        ],
        "bounds": null,
        "name": "Tannourine"
    },
    "Beirut": {
        "district": "Beirut",
        "governorate": "Beirut Governorate",
        "location": [
            35.5017767,
            33.8937913
        ],
        "bounds": {
            "northeast": {
                "lat": 33.9161091,
                "lng": 35.5416362
            },
            "southwest": {
                "lat": 33.8623275,
                "lng": 35.4669284
            }
        },
        "name": "Beirut"
    },
    "Ebba": {
        "district": "Nabatiyeh",
        "governorate": "South Governorate",
        "location": [
            35.4011052,
            33.3607344
        ],
        "bounds": null,
        "name": "Ebba"
    },
    "Nabatieh": {
        "district": "Nabatiyeh",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.4835902,
            33.3771898
        ],
        "bounds": {
            "northeast": {
                "lat": 33.3950366,
                "lng": 35.507881
            },
            "southwest": {
                "lat": 33.3642498,
                "lng": 35.4679641
            }
        },
        "name": "Nabatieh"
    },
    "Aalay": {
        "district": "Aalay",
        "governorate": "Mount Lebanon",
        "location": [
            35.5973259,
            33.8100863
        ],
        "bounds": {
            "northeast": {
                "lat": 33.8250216,
                "lng": 35.6288032
            },
            "southwest": {
                "lat": 33.7911624,
                "lng": 35.5808906
            }
        },
        "name": "Aalay"
    },
    "Qana": {
        "district": "Tyre",
        "governorate": "South Governorate",
        "location": [
            35.3002132,
            33.2083135
        ],
        "bounds": null,
        "name": "Qana"
    },
    "Tripoli": {
        "district": "Tripoli",
        "governorate": "North Governorate",
        "location": [
            35.8361633,
            34.4345947
        ],
        "bounds": {
            "northeast": {
                "lat": 34.4668712,
                "lng": 35.8748053
            },
            "southwest": {
                "lat": 34.3885327,
                "lng": 35.8179455
            }
        },
        "name": "Tripoli"
    },
    "Btekhnay": {
        "district": "Baabda",
        "governorate": "Mount Lebanon",
        "location": [
            35.7180176,
            33.8407655
        ],
        "bounds": null,
        "name": "Btekhnay"
    },
    "Sidon": {
        "district": "Saida",
        "governorate": "South Governorate",
        "location": [
            35.372948,
            33.5570691
        ],
        "bounds": {
            "northeast": {
                "lat": 33.5890884,
                "lng": 35.3955593
            },
            "southwest": {
                "lat": 33.5336856,
                "lng": 35.3597622
            }
        },
        "name": "Sidon"
    },
    "Tyre": {
        "district": "Tyre",
        "governorate": "South Governorate",
        "location": [
            35.2037641,
            33.2704888
        ],
        "bounds": {
            "northeast": {
                "lat": 33.2772216,
                "lng": 35.2294692
            },
            "southwest": {
                "lat": 33.2575738,
                "lng": 35.190378
            }
        },
        "name": "Tyre"
    },
    "Koura": {
        "district": "Koura",
        "governorate": "North Governorate",
        "location": [
            35.808876,
            34.2990173
        ],
        "bounds": {
            "northeast": {
                "lat": 34.4201087,
                "lng": 35.874031
            },
            "southwest": {
                "lat": 34.243614,
                "lng": 35.7056064
            }
        },
        "name": "Koura"
    },
    "Kherbet Qanafar": {
        "district": "West Bekaa",
        "governorate": "Beqaa",
        "location": [
            35.7254647,
            33.6375916
        ],
        "bounds": null,
        "name": "Kherbet Qanafar"
    },
    "Miziara": {
        "district": "Zgharta",
        "governorate": "North Governorate",
        "location": [
            35.9324366,
            34.3331857
        ],
        "bounds": null,
        "name": "Miziara"
    },
    "Baskinta": {
        "district": "Matn",
        "governorate": "Mount Lebanon",
        "location": [
            35.7865408,
            33.9440185
        ],
        "bounds": null,
        "name": "Baskinta"
    },
    "Batroun": {
        "district": "Batroun",
        "governorate": "North Governorate",
        "location": [
            35.6642904,
            34.249832
        ],
        "bounds": {
            "northeast": {
                "lat": 34.2746658,
                "lng": 35.6881141
            },
            "southwest": {
                "lat": 34.2408237,
                "lng": 35.655283
            }
        },
        "name": "Batroun"
    },
    "Ain Kfar Zabad": {
        "district": "Zahle",
        "governorate": "Beqaa",
        "location": [
            36.0062037,
            33.7956852
        ],
        "bounds": null,
        "name": "Ain Kfar Zabad"
    },
    "Hrajel": {
        "district": "Kesrouane",
        "governorate": "Mount Lebanon",
        "location": [
            35.79493739999999,
            34.0140693
        ],
        "bounds": null,
        "name": "Hrajel"
    },
    "Bednayel": {
        "district": "Baalbek",
        "governorate": "Beqaa",
        "location": [
            36.0143559,
            33.9124161
        ],
        "bounds": null,
        "name": "Bednayel"
    },
    "Biyada": {
        "district": "Aalay",
        "governorate": "Mount Lebanon",
        "location": [
            35.5902778,
            33.7894444
        ],
        "bounds": null,
        "name": "Biyada"
    },
    "Habbouch": {
        "district": "Nabatiyeh",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.4785881,
            33.4074237
        ],
        "bounds": null,
        "name": "Habbouch"
    },
    "Chouaifet El Aamroussieh": {
        "district": "Aalay",
        "governorate": "Mount Lebanon",
        "location": [
            35.516667,
            33.816667
        ],
        "bounds": null,
        "name": "Chouaifet El Aamroussieh"
    },
    "Charoun": {
        "district": "Aalay",
        "governorate": "Mount Lebanon",
        "location": [
            35.6864066,
            33.7717906
        ],
        "bounds": null,
        "name": "Charoun"
    },
    "Bint Jbeil": {
        "district": "Bint Jbeil",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.4335263,
            33.120548
        ],
        "bounds": {
            "northeast": {
                "lat": 33.1407527,
                "lng": 35.460888
            },
            "southwest": {
                "lat": 33.1004371,
                "lng": 35.4129199
            }
        },
        "name": "Bint Jbeil"
    },
    "Joun": {
        "district": "Chouf",
        "governorate": "Mount Lebanon",
        "location": [
            35.4611653,
            33.5808902
        ],
        "bounds": null,
        "name": "Joun"
    },
    "Kfarhamam": {
        "district": "Hasbaiyya",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.6783777,
            33.3431879
        ],
        "bounds": null,
        "name": "Kfarhamam"
    },
    "Byblos": {
        "district": "Jbeil",
        "governorate": "Mount Lebanon",
        "location": [
            35.6519282,
            34.1230021
        ],
        "bounds": null,
        "name": "Byblos"
    },
    "Rasm El Hadath": {
        "district": "Baalbek",
        "governorate": "Beqaa",
        "location": [
            36.276776,
            34.1385127
        ],
        "bounds": null,
        "name": "Rasm El Hadath"
    },
    "Aamchit": {
        "district": "Jbeil",
        "governorate": "Mount Lebanon",
        "location": [
            35.6379896,
            34.14890440000001
        ],
        "bounds": null,
        "name": "Aamchit"
    },
    "Aaidmoun": {
        "district": "Aakkar",
        "governorate": "North Governorate",
        "location": [
            36.2875492,
            34.5970643
        ],
        "bounds": null,
        "name": "Aaidmoun"
    },
    "Ghadir": {
        "district": "Kesrouane",
        "governorate": "Mount Lebanon",
        "location": [
            35.6376806,
            33.9794609
        ],
        "bounds": null,
        "name": "Ghadir"
    },
    "Ashqout": {
        "district": "Kesrouane",
        "governorate": "Mount Lebanon",
        "location": [
            35.7108291,
            33.9851074
        ],
        "bounds": {
            "northeast": {
                "lat": 34.0029296,
                "lng": 35.7305718
            },
            "southwest": {
                "lat": 33.9795513,
                "lng": 35.6890791
            }
        },
        "name": "Ashqout"
    },
    "Irzay": {
        "//": "It's officially in Saida but for some reason my map data makes like there's a Zahrany district",
        "district": "Zahrany",
        "governorate": "South Governorate",
        "location": [
            35.2988662,
            33.3325408
        ],
        "bounds": null,
        "name": "Irzay"
    },
    "Dbayeh": {
        "district": "Matn",
        "governorate": "Mount Lebanon",
        "location": [
            35.5892181,
            33.9329151
        ],
        "bounds": {
            "northeast": {
                "lat": 33.9486044,
                "lng": 35.5977116
            },
            "southwest": {
                "lat": 33.9256934,
                "lng": 35.5813656
            }
        },
        "name": "Dbayeh"
    },
    "Toura": {
        "district": "Tyre",
        "governorate": "South Governorate",
        "location": [
            35.2976279,
            33.2935928
        ],
        "bounds": null,
        "name": "Toura"
    },
    "Daraaoun": {
        "district": "Kesrouane",
        "governorate": "Mount Lebanon",
        "location": [
            35.662867,
            33.984198
        ],
        "bounds": null,
        "name": "Daraaoun"
    },
    "Chaqra": {
        "district": "Bint Jbeil",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.46905,
            33.1932564
        ],
        "bounds": null,
        "name": "Chaqra"
    },
    "Khirbet Selm": {
        "district": "Bint Jbeil",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.4254856,
            33.2302093
        ],
        "bounds": {
            "northeast": {
                "lat": 33.2447681,
                "lng": 35.4323826
            },
            "southwest": {
                "lat": 33.2195148,
                "lng": 35.4081592
            }
        },
        "name": "Khirbet Selm"
    },
    "Haris": {
        "district": "Bint Jbeil",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.3766108,
            33.1746846
        ],
        "bounds": null,
        "name": "Haris"
    },
    "Nmairiyeh": {
        "district": "Nabatiyeh",
        "governorate": "South Governorate",
        "location": [
            35.3989302,
            33.4230066
        ],
        "bounds": null,
        "name": "Nmairiyeh"
    },
    "Deir El Qamar": {
        "district": "Chouf",
        "governorate": "Mount Lebanon",
        "location": [
            35.5605832,
            33.6972116
        ],
        "bounds": null,
        "name": "Deir El Qamar"
    },
    "Kfar Houneh": {
        "district": "Jezzine",
        "governorate": "South Governorate",
        "location": [
            35.5897893,
            33.4923967
        ],
        "bounds": null,
        "name": "Kfar Houneh"
    },
    "Sultaniyeh": {
        "district": "Bint Jbeil",
        "governorate": "Nabatiyeh Governorate",
        "location": [
            35.4053397,
            33.2048244
        ],
        "bounds": null,
        "name": "Sultaniyeh"
    },
    "Sohmor": {
        "district": "West Bekaa",
        "governorate": "Beqaa",
        "location": [
            35.6862309,
            33.5197252
        ],
        "bounds": null,
        "name": "Sohmor"
    },
    "Ain El Kharroube": {
        "district": "Matn",
        "governorate": "Mount Lebanon",
        "location": [
            35.7010954,
            33.9337197
        ],
        "bounds": {
            "northeast": {
                "lat": 33.9387569,
                "lng": 35.710577
            },
            "southwest": {
                "lat": 33.9268398,
                "lng": 35.6938362
            }
        },
        "name": "Ain El Kharroube"
    },
    "Mechmech": {
        "district": "Jbeil",
        "governorate": "Mount Lebanon",
        "location": [
            35.7814317,
            34.1456641
        ],
        "bounds": null,
        "name": "Mechmech"
    }
}
};
},{}],"H99C":[function(require,module,exports) {
"use strict";

var d3 = _interopRequireWildcard(require("d3"));

var _vue = _interopRequireDefault(require("vue"));

var _app = _interopRequireDefault(require("./app.vue"));

var _respondents = require("./data/respondents.json");

var _locations = require("./data/map/locations.json");

var _utils = require("./scripts/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

new _vue.default({
  data: function data() {
    return {
      locations: _locations.data,
      respondents: _respondents.data,
      locationsByDistrict: d3.nest().key(function (d) {
        return d.district;
      }).map(d3.values(_locations.data)),
      respondentQuery: (0, _utils.makeQueryFunc)(_respondents.data)
    };
  },
  el: '#app',
  render: function render(h) {
    return h(_app.default);
  },
  components: {
    App: _app.default
  }
});
},{"d3":"BG5c","vue":"4673","./app.vue":"wlok","./data/respondents.json":"y5NW","./data/map/locations.json":"MjNq","./scripts/utils.js":"E/Os"}]},{},["H99C"], null)
//# sourceMappingURL=src.10812bda.js.map